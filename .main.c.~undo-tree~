(undo-tree-save-format-version . 1)
"3ed0d53dafd917b3e5b9826ba791642b81c8d6a1"
[nil nil nil nil (25556 12820 350191 377000) 0 nil]
([nil nil ((197 . 198) (t 25556 10842 851380 955000)) nil (25556 12820 350190 217000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t)) . -177) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -178) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -179) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -180) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -181) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -182) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -183) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -184) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -185) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -186) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -187) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -188) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -189) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -190) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -191) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -192) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -193) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -194) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -195) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -196) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -197) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) 198) nil (25556 12820 350182 487000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t)) . -167) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -168) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -169) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -170) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -171) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -172) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -173) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -174) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -175) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#(" " 0 1 (fontified t c-in-sws t)) . -176) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 177) nil (25556 12820 350084 988000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -168) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -169) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -170) (undo-tree-id9 . -1) 171) nil (25556 12820 350042 373000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete c-is-sws t)) . 167) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 168) nil (25556 12820 350000 727000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 3930) (#(" " 0 1 (fontified t)) . 3930) (t 25556 12820 386994 403000)) nil (25556 12837 258300 303000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3966) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 3967) nil (25556 12837 258293 165000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3955) (undo-tree-id196 . -1) 3956 (t 25556 12837 306921 889000)) nil (25556 12839 242136 67000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4296) (undo-tree-id373 . -1) 4297 (t 25556 12839 298913 354000)) nil (25556 12888 476001 445000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4354) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 4355) nil (25556 12888 475999 608000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4208) (undo-tree-id370 . -1) 4209) nil (25556 12888 475997 467000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4593) (undo-tree-id369 . -1) 4594) nil (25556 12888 475995 502000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4129) (undo-tree-id368 . -1) 4130) nil (25556 12888 475979 285000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4036) (undo-tree-id367 . -1) 4037) nil (25556 12888 475977 631000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3813) (undo-tree-id366 . -1) 3814) nil (25556 12888 475975 806000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3780) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#(" " 0 1 (fontified t)) . -3781) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t)) . -3782) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -3783) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#(" " 0 1 (fontified t)) . -3784) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#(" " 0 1 (fontified t)) . -3785) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#(" " 0 1 (fontified t)) . -3786) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#(" " 0 1 (fontified t)) . -3787) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t)) . -3788) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#(" " 0 1 (fontified t)) . -3789) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#(" " 0 1 (fontified t)) . -3790) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#(" " 0 1 (fontified t)) . -3791) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#(" " 0 1 (fontified t)) . -3792) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -3793) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 3794) nil (25556 12888 475964 849000) 0 nil])
([nil nil ((3780 . 3783)) nil (25556 12888 475606 512000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3781) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) 3783) nil (25556 12888 475605 535000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3738) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -3739) (undo-tree-id214 . -1) 3740) nil (25556 12888 475600 953000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3713) (undo-tree-id209 . -1) 3714) nil (25556 12888 475584 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3651) (undo-tree-id208 . -1) 3652) nil (25556 12888 475582 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3582) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#(" " 0 1 (fontified t)) . -3583) (undo-tree-id207 . -1) 3584) nil (25556 12888 475580 616000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3426) (undo-tree-id202 . -1) 3427) nil (25556 12888 475562 10000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3407) (undo-tree-id201 . -1) 3408) nil (25556 12888 475560 125000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3391) (undo-tree-id200 . -1) 3392) nil (25556 12888 475558 395000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3318) (undo-tree-id199 . -1) 3319) nil (25556 12888 475556 201000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2725) (undo-tree-id198 . -1) 2726) nil (25556 12888 475553 948000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2885) (undo-tree-id197 . -1) 2886) nil (25556 12888 475548 716000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -759) (undo-tree-id379 . -1) 760 (t 25556 12888 514702 445000)) nil (25556 12909 255137 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1823) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#(" " 0 1 (fontified t)) . -1824) (undo-tree-id378 . -1) 1825) nil (25556 12909 255131 363000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2344) (t 25556 12909 298613 362000)) nil (25556 12961 582604 900000) 0 nil])
([nil nil ((1694 . 1702)) nil (25556 12961 582603 981000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -1695) (undo-tree-id388 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1696) (undo-tree-id389 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1697) (undo-tree-id390 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1698) (undo-tree-id391 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -1699) (undo-tree-id392 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -1700) (undo-tree-id393 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -1701) (undo-tree-id394 . -1) 1702) nil (25556 12961 582602 199000) 0 nil])
([nil nil ((1695 . 1698)) nil (25556 12961 582596 98000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -1697) (undo-tree-id387 . -1) 1698) nil (25556 12961 582595 28000) 0 nil])
([nil nil ((1697 . 1698)) nil (25556 12961 582579 299000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -1695) (undo-tree-id384 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1696) (undo-tree-id385 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1697) (undo-tree-id386 . -1) 1698) nil (25556 12961 582578 71000) 0 nil])
([nil nil ((1695 . 1699)) nil (25556 12961 582574 524000) 0 nil])
([nil nil ((1695 . 1701) (#("mall" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -1695) (undo-tree-id383 . -4) 1699) nil (25556 12961 582573 252000) 0 nil])
([nil nil ((1703 . 1704) (1694 . 1696) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 1694) (undo-tree-id382 . -1) (1701 . 1702)) nil (25556 12961 582558 105000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1695) (undo-tree-id380 . -1) (undo-tree-id381 . -1) 1696) nil (25556 12961 582552 192000) 0 nil])
([nil nil ((#("malloc()" 0 1 (fontified t ws-butler-chg delete) 1 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . 1695) (undo-tree-id402 . -7) (undo-tree-id403 . -8) (t 25556 12961 634389 36000)) nil (25556 12974 27368 931000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1694) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) 1695) nil (25556 12974 27350 252000) 0 nil])
([nil nil ((1694 . 1695) (t 25556 12974 70335 728000)) nil (25556 12975 419918 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1694) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 1695) nil (25556 12975 419912 866000) 0 nil])
([nil nil ((1694 . 1697) (t 25556 12975 454329 794000)) nil (25556 13421 788706 940000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1696) (undo-tree-id412 . -1) (undo-tree-id413 . -1) 1697) nil (25556 13421 788705 264000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1695) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) 1696) nil (25556 13421 788700 38000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1694) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 1695 (t 25556 13421 827334 698000)) nil (25556 13422 553315 27000) 0 nil])
([nil nil ((1694 . 1695) (t 25556 13422 591328 797000)) nil (25556 13903 228737 198000) 0 nil])
([nil nil ((1694 . 1697) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1694) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) 1695) nil (25556 13903 228734 287000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1694) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1695) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1696) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) 1697) nil (25556 13903 228708 469000) 0 nil])
([nil nil ((1694 . 1695) (t 25556 13903 268098 262000)) nil (25556 13967 651229 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1694) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) 1860) nil (25556 13967 651225 323000) 0 nil])
([nil nil ((1694 . 1695) (t 25556 13967 695716 834000)) nil (25556 13970 532921 484000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1694) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 1695) nil (25556 13970 532916 633000) 0 nil])
([nil nil ((1696 . 1697) (t 25556 13970 571700 2000)) nil (25556 13974 747877 514000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1696) (undo-tree-id475 . -1) (undo-tree-id476 . -1) 1697) nil (25556 13974 747873 627000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -992) (undo-tree-id477 . -1) (undo-tree-id478 . -1) 993 (t 25556 13974 787675 351000)) nil (25556 14003 633608 585000) 0 nil])
([nil nil ((1 . 2) (t 25556 14003 675507 363000)) nil (25556 15047 552748 80000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 2) nil (25556 15047 552744 154000) 0 nil])
([nil nil ((672 . 675) (t 25556 15047 578011 536000)) nil (25556 15088 67397 900000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -672) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -673) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -674) (undo-tree-id12 . -1) 675) nil (25556 15088 67396 222000) 0 nil])
([nil nil ((672 . 673)) nil (25556 15088 67389 402000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -672) (undo-tree-id5 . -1) 673) nil (25556 15088 67385 526000) 0 nil])
([nil nil ((4401 . 4402) (t 25556 15088 113809 290000)) nil (25556 15143 67213 882000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -4401) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . 1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 4402) nil (25556 15143 67209 571000) 0 nil])
([nil nil ((1967 . 1968) (t 25556 15143 93535 543000)) nil (25556 15200 514805 403000) 0 nil])
([nil nil ((1967 . 1969) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 1967) (undo-tree-id52 . -1) 1968) nil (25556 15200 514803 893000) 0 nil])
([nil nil ((1968 . 1970) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 1968) 1969) nil (25556 15200 514801 699000) 0 nil])
([nil nil ((1970 . 1971)) nil (25556 15200 514800 314000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1969) (undo-tree-id50 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1970) (undo-tree-id51 . -1) 1971) nil (25556 15200 514798 827000) 0 nil])
([nil nil ((1969 . 1972)) nil (25556 15200 514796 271000) 0 nil])
([nil nil ((1972 . 1973)) nil (25556 15200 514795 399000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t)) . -1970) (undo-tree-id47 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t)) . -1971) (undo-tree-id48 . -1) (#("g" 0 1 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t)) . -1972) (undo-tree-id49 . -1) 1973) nil (25556 15200 514793 994000) 0 nil])
([nil nil ((1970 . 1973)) nil (25556 15200 514790 495000) 0 nil])
([nil nil ((1970 . 1985) (#("Reg" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t) 1 2 (face font-lock-type-face ws-butler-chg chg fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t)) . -1970) (undo-tree-id46 . -3) 1973) nil (25556 15200 514789 379000) 0 nil])
([nil nil ((1985 . 1987)) nil (25556 15200 514787 448000) 0 nil])
([nil nil ((1986 . 1987)) nil (25556 15200 514786 477000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1986) (undo-tree-id45 . -1) 1987) nil (25556 15200 514785 410000) 0 nil])
([nil nil ((1986 . 1987)) nil (25556 15200 514783 926000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1986) (undo-tree-id44 . -1) 1987) nil (25556 15200 514782 997000) 0 nil])
([nil nil ((1986 . 1995)) nil (25556 15200 514781 202000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1986) (undo-tree-id35 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1987) (undo-tree-id36 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1988) (undo-tree-id37 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1989) (undo-tree-id38 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -1990) (undo-tree-id39 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -1991) (undo-tree-id40 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t)) . -1992) (undo-tree-id41 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -1993) (undo-tree-id42 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1994) (undo-tree-id43 . -1) 1995) nil (25556 15200 514779 152000) 0 nil])
([nil nil ((1986 . 1990)) nil (25556 15200 514771 119000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t)) . -1986) (undo-tree-id31 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -1987) (undo-tree-id32 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1988) (undo-tree-id33 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1989) (undo-tree-id34 . -1) 1990) nil (25556 15200 514769 675000) 0 nil])
([nil nil ((1986 . 1988)) nil (25556 15200 514765 533000) 0 nil])
([nil nil ((#("S" 0 1 (ws-butler-chg chg fontified t)) . -1986) (undo-tree-id29 . -1) (#("T" 0 1 (ws-butler-chg chg fontified t)) . -1987) (undo-tree-id30 . -1) 1988) nil (25556 15200 514764 292000) 0 nil])
([nil nil ((1986 . 1992)) nil (25556 15200 514761 595000) 0 nil])
([nil nil ((1986 . 1997) (#("STRICT" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t)) . -1986) (undo-tree-id28 . -6) 1992) nil (25556 15200 514760 296000) 0 nil])
([nil nil ((1997 . 1998)) nil (25556 15200 514758 324000) 0 nil])
([nil nil ((1998 . 1999)) nil (25556 15200 514757 428000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1998) (undo-tree-id27 . -1) 1999) nil (25556 15200 514756 497000) 0 nil])
([nil nil ((1998 . 1999)) nil (25556 15200 514754 985000) 0 nil])
([nil nil ((1999 . 2000)) nil (25556 15200 514754 172000) 0 nil])
([nil nil ((2000 . 2001)) nil (25556 15200 514753 317000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -2000) (undo-tree-id26 . -1) 2001) nil (25556 15200 514752 450000) 0 nil])
([nil nil ((2000 . 2001)) nil (25556 15200 514750 869000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2000) (undo-tree-id25 . -1) 2001) nil (25556 15200 514749 703000) 0 nil])
([nil nil ((2000 . 2004)) nil (25556 15200 514747 757000) 0 nil])
([nil nil ((2005 . 2006)) nil (25556 15200 514746 994000) 0 nil])
([nil nil ((2006 . 2008)) nil (25556 15200 514746 12000) 0 nil])
([nil nil ((2007 . 2009) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 2007) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 2008) nil (25556 15200 514744 445000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2008) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 2009) nil (25556 15200 514737 816000) 0 nil])
([nil nil ((2008 . 2009) 2009 (t 25556 15200 549250 87000)) nil (25556 15698 725279 906000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2008) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 2009 (t 25556 15200 549250 87000)) nil (25556 15698 725277 748000) 0 nil])
([nil nil ((2008 . 2015)) nil (25556 15698 725269 308000) 0 nil])
([nil nil ((2015 . 2017)) nil (25556 15698 725252 324000) 0 nil])
([nil nil ((#("malloc()" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 2009) (undo-tree-id68 . -8) (t 25556 15698 767879 48000)) nil (25556 15709 188314 429000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2007) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#(" " 0 1 (fontified t)) . -2008) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 2009) nil (25556 15709 188308 638000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t)) . -264) (undo-tree-id0 . -1) 265 (t 25556 15709 211843 308000)) nil (25556 53893 658639 384000) 0 nil])
([nil nil ((264 . 265)) nil (25556 53893 658618 855000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1967) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("
" 0 1 (fontified t)) . -1968) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -1969) (undo-tree-id7 . -1) 1970 (t 25556 53893 710517 85000)) nil (25556 53905 450425 881000) 0 nil])
([nil nil ((1967 . 1968)) nil (25556 53905 450408 666000) 0 nil])
([nil nil ((2006 . 2008) (#(" " 0 1 (fontified t)) . 2006) (undo-tree-id8 . -1) 2007 (t 25556 53905 494617 387000)) nil (25556 53907 356706 130000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2559) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("
" 0 1 (fontified t)) . -2560) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 2561 (t 25556 53907 394633 676000)) nil (25556 53915 429360 506000) 0 nil])
([nil nil ((4438 . 4441) (t 25556 53915 470703 269000)) nil (25556 53932 19901 885000) 0 nil])
([nil nil ((4440 . 4441)) nil (25556 53932 19900 537000) 0 nil])
([nil nil ((4441 . 4442)) nil (25556 53932 19899 684000) 0 nil])
([nil nil ((4442 . 4444)) nil (25556 53932 19898 725000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4443) (undo-tree-id24 . -1) 4444) nil (25556 53932 19897 638000) 0 nil])
([nil nil ((4443 . 4464)) nil (25556 53932 19896 104000) 0 nil])
([nil nil ((4464 . 4485)) nil (25556 53932 19895 370000) 0 nil])
([nil nil ((4485 . 4487)) nil (25556 53932 19894 607000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4481) (undo-tree-id18 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4482) (undo-tree-id19 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4483) (undo-tree-id20 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4484) (undo-tree-id21 . -1) (#("ö" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4485) (undo-tree-id22 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4486) (undo-tree-id23 . -1) 4487) nil (25556 53932 19892 896000) 0 nil])
([nil nil ((4481 . 4488)) nil (25556 53932 19886 256000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 4487) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 4488) nil (25556 53932 19881 981000) 0 nil])
([nil nil ((4487 . 4488) 4488 (t 25556 53932 282849 915000)) nil (25556 53948 909129 76000) 0 nil])
([nil nil ((4488 . 4502) (t 25556 53932 282849 915000)) nil (25556 53948 909127 978000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4488) (undo-tree-id26 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4489) (undo-tree-id27 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4490) (undo-tree-id28 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4491) (undo-tree-id29 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4492) (undo-tree-id30 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4493) (undo-tree-id31 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4494) (undo-tree-id32 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4495) (undo-tree-id33 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4496) (undo-tree-id34 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4497) (undo-tree-id35 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4498) (undo-tree-id36 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4499) (undo-tree-id37 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4500) (undo-tree-id38 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4501) (undo-tree-id39 . -1) 4502) nil (25556 53948 909125 217000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4487) (undo-tree-id25 . -1) 4488) nil (25556 53948 909111 989000) 0 nil])
([nil nil ((4481 . 4502)) nil (25556 53948 909103 224000) 0 nil])
([nil nil ((4502 . 4508)) nil (25556 53948 909099 132000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Utils
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1 2 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 2 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 4 (fontified t c-in-sws t face font-lock-comment-face) 4 5 (fontified t c-in-sws t face font-lock-comment-face) 5 6 (fontified t c-in-sws t face font-lock-comment-face) 6 7 (fontified t c-in-sws t face font-lock-comment-face) 7 8 (fontified t c-in-sws t face font-lock-comment-face) 8 9 (fontified t c-in-sws t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 20 (fontified t c-in-sws t face font-lock-comment-face) 20 21 (fontified t c-in-sws t face font-lock-comment-face) 21 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t c-in-sws t face font-lock-comment-face) 26 27 (fontified t c-in-sws t face font-lock-comment-face) 27 28 (fontified t c-in-sws t face font-lock-comment-face) 28 29 (fontified t c-in-sws t face font-lock-comment-face) 29 30 (fontified t c-in-sws t face font-lock-comment-face) 30 31 (fontified t c-in-sws t face font-lock-comment-face) 31 32 (fontified t c-in-sws t face font-lock-comment-face) 32 33 (fontified t c-in-sws t face font-lock-comment-face) 33 34 (fontified t c-in-sws t face font-lock-comment-face) 34 35 (fontified t c-in-sws t face font-lock-comment-face) 35 36 (fontified t c-in-sws t face font-lock-comment-face) 36 37 (fontified t c-in-sws t face font-lock-comment-face) 37 38 (fontified t c-in-sws t face font-lock-comment-face) 38 39 (fontified t c-in-sws t face font-lock-comment-face) 39 40 (fontified t c-in-sws t face font-lock-comment-face) 40 41 (fontified t c-in-sws t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face c-in-sws t) 42 43 (fontified t face font-lock-comment-face c-in-sws t) 43 44 (fontified t face font-lock-comment-face c-in-sws t) 44 45 (fontified t face font-lock-comment-face c-in-sws t) 45 46 (fontified t face font-lock-comment-face c-in-sws t) 46 47 (fontified t face font-lock-comment-face c-in-sws t) 47 48 (fontified t face font-lock-comment-face c-in-sws t) 48 49 (fontified t face font-lock-comment-face c-in-sws t) 49 50 (fontified t face font-lock-comment-face c-in-sws t) 50 51 (fontified t face font-lock-comment-face c-in-sws t) 51 52 (fontified t face font-lock-comment-face c-in-sws t) 52 53 (fontified t face font-lock-comment-face c-in-sws t) 53 54 (fontified t face font-lock-comment-face c-in-sws t) 54 55 (fontified t face font-lock-comment-face c-in-sws t) 55 56 (fontified t face font-lock-comment-face c-in-sws t) 56 57 (fontified t face font-lock-comment-face c-in-sws t) 57 58 (fontified t face font-lock-comment-face c-in-sws t) 58 59 (fontified t face font-lock-comment-face c-in-sws t) 59 60 (fontified t face font-lock-comment-face c-in-sws t) 60 61 (fontified t face font-lock-comment-face c-in-sws t) 61 62 (fontified t face font-lock-comment-face c-in-sws t) 62 63 (fontified t face font-lock-comment-face c-in-sws t) 63 64 (fontified t face font-lock-comment-face c-in-sws t) 64 65 (fontified t face font-lock-comment-face c-in-sws t) 65 66 (fontified t face font-lock-comment-face c-in-sws t) 66 67 (fontified t face font-lock-comment-face c-in-sws t) 67 68 (fontified t face font-lock-comment-face c-in-sws t) 68 69 (fontified t face font-lock-comment-face c-in-sws t) 69 70 (fontified t face font-lock-comment-face c-in-sws t) 70 71 (fontified t face font-lock-comment-face c-in-sws t) 71 72 (fontified t face font-lock-comment-face c-in-sws t) 72 73 (fontified t face font-lock-comment-face c-in-sws t) 73 74 (fontified t face font-lock-comment-face c-in-sws t) 74 75 (fontified t face font-lock-comment-face c-in-sws t)) . 4440) (undo-tree-id40 . -70) (undo-tree-id41 . -70) (undo-tree-id42 . -75) (t 25556 53948 958997 614000)) nil (25556 53951 157193 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4514 . 4515) (nil fontified nil 4514 . 4515) (nil fontified nil 4513 . 4514) (nil fontified nil 4512 . 4513) (nil fontified nil 4511 . 4512) (nil fontified nil 4510 . 4511) (nil fontified nil 4509 . 4510) (nil fontified nil 4508 . 4509) (nil fontified nil 4507 . 4508) (nil fontified nil 4506 . 4507) (nil fontified nil 4505 . 4506) (nil fontified nil 4504 . 4505) (nil fontified nil 4503 . 4504) (nil fontified nil 4502 . 4503) (nil fontified nil 4501 . 4502) (nil fontified nil 4500 . 4501) (nil fontified nil 4499 . 4500) (nil fontified nil 4498 . 4499) (nil fontified nil 4497 . 4498) (nil fontified nil 4496 . 4497) (nil fontified nil 4495 . 4496) (nil fontified nil 4494 . 4495) (nil fontified nil 4493 . 4494) (nil fontified nil 4492 . 4493) (nil fontified nil 4491 . 4492) (nil fontified nil 4490 . 4491) (nil fontified nil 4489 . 4490) (nil fontified nil 4488 . 4489) (nil fontified nil 4487 . 4488) (nil fontified nil 4486 . 4487) (nil fontified nil 4485 . 4486) (nil fontified nil 4484 . 4485) (nil fontified nil 4483 . 4484) (nil fontified nil 4482 . 4483) (nil fontified nil 4481 . 4482) (nil fontified nil 4480 . 4481) (nil fontified nil 4479 . 4480) (nil fontified nil 4478 . 4479) (nil fontified nil 4477 . 4478) (nil fontified nil 4476 . 4477) (nil fontified nil 4475 . 4476) (nil fontified nil 4474 . 4475) (nil fontified nil 4473 . 4474) (nil fontified nil 4472 . 4473) (nil fontified nil 4471 . 4472) (nil fontified nil 4470 . 4471) (nil fontified nil 4469 . 4470) (nil fontified nil 4468 . 4469) (nil fontified nil 4467 . 4468) (nil fontified nil 4466 . 4467) (nil fontified nil 4465 . 4466) (nil fontified nil 4464 . 4465) (nil fontified nil 4463 . 4464) (nil fontified nil 4462 . 4463) (nil fontified nil 4461 . 4462) (nil fontified nil 4460 . 4461) (nil fontified nil 4459 . 4460) (nil fontified nil 4458 . 4459) (nil fontified nil 4457 . 4458) (nil fontified nil 4456 . 4457) (nil fontified nil 4455 . 4456) (nil fontified nil 4454 . 4455) (nil fontified nil 4453 . 4454) (nil fontified nil 4452 . 4453) (nil fontified nil 4451 . 4452) (nil fontified nil 4450 . 4451) (nil fontified nil 4449 . 4450) (nil fontified nil 4448 . 4449) (nil fontified nil 4447 . 4448) (nil fontified nil 4446 . 4447) (nil fontified nil 4445 . 4446) (nil fontified nil 4444 . 4445) (nil fontified nil 4443 . 4444) (nil fontified nil 4442 . 4443) (nil fontified nil 4441 . 4442) (nil fontified nil 4440 . 4441) (4440 . 4515)) nil (25556 53951 157178 113000) 0 nil])
([nil nil ((2064 . 2066) (t 25556 53951 199017 614000)) nil (25556 53958 865789 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2139 . 2140) (nil fontified nil 2139 . 2140) (nil fontified nil 2138 . 2139) (nil fontified nil 2137 . 2138) (nil fontified nil 2136 . 2137) (nil fontified nil 2135 . 2136) (nil fontified nil 2134 . 2135) (nil fontified nil 2133 . 2134) (nil fontified nil 2132 . 2133) (nil fontified nil 2131 . 2132) (nil fontified nil 2130 . 2131) (nil fontified nil 2129 . 2130) (nil fontified nil 2128 . 2129) (nil fontified nil 2127 . 2128) (nil fontified nil 2126 . 2127) (nil fontified nil 2125 . 2126) (nil fontified nil 2124 . 2125) (nil fontified nil 2123 . 2124) (nil fontified nil 2122 . 2123) (nil fontified nil 2121 . 2122) (nil fontified nil 2120 . 2121) (nil fontified nil 2119 . 2120) (nil fontified nil 2118 . 2119) (nil fontified nil 2117 . 2118) (nil fontified nil 2116 . 2117) (nil fontified nil 2115 . 2116) (nil fontified nil 2114 . 2115) (nil fontified nil 2113 . 2114) (nil fontified nil 2112 . 2113) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2107 . 2108) (nil fontified nil 2106 . 2107) (nil fontified nil 2105 . 2106) (nil fontified nil 2104 . 2105) (nil fontified nil 2103 . 2104) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2100 . 2101) (nil fontified nil 2099 . 2100) (nil fontified nil 2098 . 2099) (nil fontified nil 2097 . 2098) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2091 . 2092) (nil fontified nil 2090 . 2091) (nil fontified nil 2089 . 2090) (nil fontified nil 2088 . 2089) (nil fontified nil 2087 . 2088) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (2065 . 2140)) nil (25556 53958 865782 410000) 0 nil])
([nil nil ((#("U" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2134) (undo-tree-id51 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2135) (undo-tree-id52 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2136) (undo-tree-id53 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2137) (undo-tree-id54 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2138) (undo-tree-id55 . -1) 2139 (t 25556 53958 907086 729000)) nil (25556 53970 180666 985000) 0 nil])
([nil nil ((2134 . 2135)) nil (25556 53970 180661 534000) 0 nil])
([nil nil ((2135 . 2136)) nil (25556 53970 180660 545000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2134) (undo-tree-id49 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2135) (undo-tree-id50 . -1) 2136) nil (25556 53970 180659 460000) 0 nil])
([nil nil ((2134 . 2139)) nil (25556 53970 180656 489000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2134) (undo-tree-id44 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2135) (undo-tree-id45 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2136) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2137) (undo-tree-id47 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2138) (undo-tree-id48 . -1) 2139) nil (25556 53970 180654 865000) 0 nil])
([nil nil ((2134 . 2139)) nil (25556 53970 180648 773000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -2138) (undo-tree-id43 . -1) 2139) nil (25556 53970 180646 763000) 0 nil])
([nil nil ((2138 . 2148)) nil (25556 53970 180634 248000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Word Functions
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-in-sws t fontified t face font-lock-comment-face) 41 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face) 53 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 59 (c-in-sws t fontified t face font-lock-comment-face) 59 60 (c-in-sws t fontified t face font-lock-comment-face) 60 61 (c-in-sws t fontified t face font-lock-comment-face) 61 62 (c-in-sws t fontified t face font-lock-comment-face) 62 63 (c-in-sws t fontified t face font-lock-comment-face) 63 64 (c-in-sws t fontified t face font-lock-comment-face) 64 65 (c-in-sws t fontified t face font-lock-comment-face) 65 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t face font-lock-comment-face c-in-sws t) 77 78 (fontified t face font-lock-comment-face c-in-sws t) 78 79 (fontified t face font-lock-comment-face c-in-sws t) 79 80 (fontified t face font-lock-comment-face c-in-sws t) 80 81 (fontified t face font-lock-comment-face c-in-sws t) 81 82 (fontified t face font-lock-comment-face c-in-sws t) 82 83 (fontified t face font-lock-comment-face c-in-sws t) 83 84 (fontified t rear-nonsticky t face font-lock-comment-face c-in-sws t)) . 2065) (undo-tree-id56 . -83) (undo-tree-id57 . -83) (undo-tree-id58 . -84) (t 25556 53970 227189 13000)) nil (25556 53976 230931 954000) 0 nil])
([nil nil ((nil fontified nil 2148 . 2149) (nil fontified nil 2147 . 2148) (nil fontified nil 2146 . 2147) (nil fontified nil 2145 . 2146) (nil fontified nil 2144 . 2145) (nil fontified nil 2143 . 2144) (nil fontified nil 2142 . 2143) (nil fontified nil 2141 . 2142) (nil fontified nil 2140 . 2141) (nil fontified nil 2139 . 2140) (nil fontified nil 2138 . 2139) (nil fontified nil 2137 . 2138) (nil fontified nil 2136 . 2137) (nil fontified nil 2135 . 2136) (nil fontified nil 2134 . 2135) (nil fontified nil 2133 . 2134) (nil fontified nil 2132 . 2133) (nil fontified nil 2131 . 2132) (nil fontified nil 2130 . 2131) (nil fontified nil 2129 . 2130) (nil fontified nil 2128 . 2129) (nil fontified nil 2127 . 2128) (nil fontified nil 2126 . 2127) (nil fontified nil 2125 . 2126) (nil fontified nil 2124 . 2125) (nil fontified nil 2123 . 2124) (nil fontified nil 2122 . 2123) (nil fontified nil 2121 . 2122) (nil fontified nil 2120 . 2121) (nil fontified nil 2119 . 2120) (nil fontified nil 2118 . 2119) (nil fontified nil 2117 . 2118) (nil fontified nil 2116 . 2117) (nil fontified nil 2115 . 2116) (nil fontified nil 2114 . 2115) (nil fontified nil 2113 . 2114) (nil fontified nil 2112 . 2113) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2107 . 2108) (nil fontified nil 2106 . 2107) (nil fontified nil 2105 . 2106) (nil fontified nil 2104 . 2105) (nil fontified nil 2103 . 2104) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2100 . 2101) (nil fontified nil 2099 . 2100) (nil fontified nil 2098 . 2099) (nil fontified nil 2097 . 2098) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2091 . 2092) (nil fontified nil 2090 . 2091) (nil fontified nil 2089 . 2090) (nil fontified nil 2088 . 2089) (nil fontified nil 2087 . 2088) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (2065 . 2149)) nil (25556 53976 230915 419000) 0 nil])
([nil nil ((2149 . 2151) (t 25556 53976 275244 21000)) nil (25556 53977 728726 823000) 0 nil])
([nil nil ((nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2204 . 2205) (nil fontified nil 2203 . 2204) (nil fontified nil 2202 . 2203) (nil fontified nil 2201 . 2202) (nil fontified nil 2200 . 2201) (nil fontified nil 2199 . 2200) (nil fontified nil 2198 . 2199) (nil fontified nil 2197 . 2198) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2180 . 2181) (nil fontified nil 2179 . 2180) (nil fontified nil 2178 . 2179) (nil fontified nil 2177 . 2178) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2173 . 2174) (nil fontified nil 2172 . 2173) (nil fontified nil 2171 . 2172) (nil fontified nil 2170 . 2171) (nil fontified nil 2169 . 2170) (nil fontified nil 2168 . 2169) (nil fontified nil 2167 . 2168) (nil fontified nil 2166 . 2167) (nil fontified nil 2165 . 2166) (nil fontified nil 2164 . 2165) (nil fontified nil 2163 . 2164) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2160 . 2161) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2155 . 2156) (nil fontified nil 2154 . 2155) (nil fontified nil 2153 . 2154) (nil fontified nil 2152 . 2153) (nil fontified nil 2151 . 2152) (2151 . 2235)) nil (25556 53977 728719 635000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2220) (undo-tree-id62 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2221) (undo-tree-id63 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2222) (undo-tree-id64 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2223) (undo-tree-id65 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2224) (undo-tree-id66 . -1) (#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2225) (undo-tree-id67 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2226) (undo-tree-id68 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2227) (undo-tree-id69 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2228) (undo-tree-id70 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2229) (undo-tree-id71 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2230) (undo-tree-id72 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2231) (undo-tree-id73 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2232) (undo-tree-id74 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2233) (undo-tree-id75 . -1) 2234 (t 25556 53977 767257 634000)) nil (25556 53987 477477 363000) 0 nil])
([nil nil ((2220 . 2222)) nil (25556 53987 477464 953000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -2220) (undo-tree-id60 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -2221) (undo-tree-id61 . -1) 2222) nil (25556 53987 477463 757000) 0 nil])
([nil nil ((2220 . 2223)) nil (25556 53987 477460 832000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -2222) (undo-tree-id59 . -1) 2223) nil (25556 53987 477459 146000) 0 nil])
([nil nil ((2222 . 2230)) nil (25556 53987 477449 809000) 0 nil])
([nil nil ((2230 . 2237)) nil (25556 54002 915826 541000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t c-is-sws t fontified t)) . -2239) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 2240 (t 25556 54010 663561 335000)) nil (25556 54014 209751 843000) 0 nil] [nil nil ((#("uint8_t Regex_AddOpCode(Regex_Operation *operation, Regex_OpCode op_code, char* argument)
{
 if(operation->operation_count>MAX_OP_CODES){ printf(\" To Many OpCodes Add Failed\\n \"); return 0; }

 operation->op_code[operation->operation_count]=op_code;
 strcpy(operation->argument[operation->operation_count],argument);

 operation->operation_count++;

 return 1;
}
" 0 1 (c-is-sws t fontified t face font-lock-type-face) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t c-type c-decl-arg-start) 24 31 (fontified t face font-lock-type-face) 31 33 (fontified t face font-lock-type-face) 33 39 (fontified t face font-lock-type-face) 39 41 (fontified t) 41 50 (fontified t face font-lock-variable-name-face) 50 51 (fontified t c-type c-decl-arg-start) 51 52 (fontified t) 52 64 (fontified t face font-lock-type-face) 64 65 (fontified t) 65 72 (fontified t face font-lock-variable-name-face) 72 73 (fontified t c-type c-decl-arg-start) 73 74 (fontified t) 74 78 (fontified t face font-lock-type-face) 78 80 (fontified t) 80 88 (fontified t face font-lock-variable-name-face) 88 93 (fontified t) 93 95 (fontified t face font-lock-keyword-face) 95 145 (fontified t) 145 177 (fontified t face font-lock-string-face) 177 180 (fontified t) 180 186 (fontified t face font-lock-keyword-face) 186 351 (fontified t) 351 357 (fontified t face font-lock-keyword-face) 357 363 (fontified t)) . 2240) (undo-tree-id77 . -24) (undo-tree-id79 . -52) (undo-tree-id81 . -74) (undo-tree-id83 . -363) (undo-tree-id84 . -363) (undo-tree-id86 . -363) 2603 (t 25556 53987 519346 951000)) ((2240 . 2603)) (25556 53998 727159 582000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Op Code Functions
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-in-sws t fontified t face font-lock-comment-face) 41 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face) 53 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 59 (c-in-sws t fontified t face font-lock-comment-face) 59 60 (c-in-sws t fontified t face font-lock-comment-face) 60 61 (c-in-sws t fontified t face font-lock-comment-face) 61 62 (c-in-sws t fontified t face font-lock-comment-face) 62 63 (c-in-sws t fontified t face font-lock-comment-face) 63 64 (c-in-sws t fontified t face font-lock-comment-face) 64 65 (c-in-sws t fontified t face font-lock-comment-face) 65 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (c-in-sws t fontified t face font-lock-comment-face) 70 71 (c-in-sws t fontified t face font-lock-comment-face) 71 72 (c-in-sws t fontified t face font-lock-comment-face) 72 73 (c-in-sws t fontified t face font-lock-comment-face) 73 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 76 (c-in-sws t fontified t face font-lock-comment-face) 76 77 (c-in-sws t fontified t face font-lock-comment-face) 77 78 (c-in-sws t fontified t face font-lock-comment-face) 78 79 (c-in-sws t fontified t face font-lock-comment-face) 79 80 (c-in-sws t fontified t face font-lock-comment-face) 80 81 (c-in-sws t fontified t face font-lock-comment-face) 81 82 (c-in-sws t fontified t face font-lock-comment-face) 82 83 (c-in-sws t fontified t face font-lock-comment-face) 83 84 (c-in-sws t fontified t face font-lock-comment-face) 84 85 (c-in-sws t fontified t face font-lock-comment-face) 85 86 (c-in-sws t fontified t face font-lock-comment-face) 86 87 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . 2151) (undo-tree-id122 . -87) (t 25556 54014 247594 824000)) nil (25556 54025 838772 398000) 0 nil])
([nil nil ((2504 . 2506) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2504) (2471 . 2473) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2471) (2402 . 2404) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2402) (2344 . 2346) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2344) (2242 . 2244) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2242) (nil rear-nonsticky nil 2512 . 2513) (nil fontified nil 2507 . 2513) (nil fontified nil 2501 . 2507) (nil fontified nil 2336 . 2501) (nil fontified nil 2330 . 2336) (nil fontified nil 2327 . 2330) (nil fontified nil 2295 . 2327) (nil fontified nil 2245 . 2295) (nil fontified nil 2243 . 2245) (nil fontified nil 2238 . 2243) (nil fontified nil 2230 . 2238) (nil fontified nil 2228 . 2230) (nil fontified nil 2224 . 2228) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2215 . 2222) (nil fontified nil 2214 . 2215) (nil fontified nil 2202 . 2214) (nil fontified nil 2201 . 2202) (nil fontified nil 2200 . 2201) (nil fontified nil 2191 . 2200) (nil fontified nil 2189 . 2191) (nil fontified nil 2183 . 2189) (nil fontified nil 2181 . 2183) (nil fontified nil 2174 . 2181) (nil fontified nil 2173 . 2174) (nil fontified nil 2158 . 2173) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2151 . 2156) (nil fontified nil 2150 . 2151) (2150 . 2513)) ((#("uint8_t Regex_AddOpCode(Regex_Operation *operation, Regex_OpCode op_code, char* argument)
{
 if(operation->operation_count>MAX_OP_CODES){ printf(\" To Many OpCodes Add Failed\\n \"); return 0; }

 operation->op_code[operation->operation_count]=op_code;
 strcpy(operation->argument[operation->operation_count],argument);

 operation->operation_count++;

 return 1;
}
" 0 1 (c-is-sws t fontified nil face font-lock-type-face) 1 6 (fontified nil face font-lock-type-face) 6 7 (fontified nil c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified nil) 8 23 (fontified nil face font-lock-function-name-face) 23 24 (fontified nil c-type c-decl-arg-start) 24 31 (fontified nil face font-lock-type-face) 31 33 (fontified nil face font-lock-type-face) 33 39 (fontified nil face font-lock-type-face) 39 41 (fontified nil) 41 50 (fontified nil face font-lock-variable-name-face) 50 51 (fontified nil c-type c-decl-arg-start) 51 52 (fontified nil) 52 64 (fontified nil face font-lock-type-face) 64 65 (fontified nil) 65 72 (fontified nil face font-lock-variable-name-face) 72 73 (fontified nil c-type c-decl-arg-start) 73 74 (fontified nil) 74 78 (fontified nil face font-lock-type-face) 78 80 (fontified nil) 80 88 (fontified nil face font-lock-variable-name-face) 88 92 (fontified nil) 92 93 (ws-butler-chg chg fontified nil) 93 94 (fontified nil face font-lock-keyword-face) 94 95 (fontified nil face font-lock-keyword-face) 95 145 (fontified nil) 145 177 (fontified nil face font-lock-string-face) 177 180 (fontified nil) 180 186 (fontified nil face font-lock-keyword-face) 186 192 (fontified nil) 192 193 (fontified nil) 193 194 (ws-butler-chg chg fontified nil) 194 195 (fontified nil) 195 250 (fontified nil) 250 251 (ws-butler-chg chg fontified nil) 251 252 (fontified nil) 252 317 (fontified nil) 317 318 (fontified nil) 318 319 (ws-butler-chg chg fontified nil) 319 320 (fontified nil) 320 349 (fontified nil) 349 350 (fontified nil) 350 351 (ws-butler-chg chg fontified nil) 351 352 (fontified nil face font-lock-keyword-face) 352 357 (fontified nil face font-lock-keyword-face) 357 361 (fontified nil) 361 362 (fontified nil) 362 363 (fontified nil rear-nonsticky nil)) . 2150) (undo-tree-id87 . -90) (undo-tree-id88 . -90) (undo-tree-id89 . -90) (undo-tree-id90 . -362) (undo-tree-id91 . -24) (undo-tree-id92 . -51) (undo-tree-id93 . -52) (undo-tree-id94 . -73) (undo-tree-id95 . -74) (undo-tree-id96 . -89) (undo-tree-id97 . -350) (undo-tree-id98 . -351) (undo-tree-id99 . -350) (undo-tree-id100 . -351) (undo-tree-id101 . -318) (undo-tree-id102 . -319) (undo-tree-id103 . -318) (undo-tree-id104 . -319) (undo-tree-id105 . -250) (undo-tree-id106 . -251) (undo-tree-id107 . -250) (undo-tree-id108 . -251) (undo-tree-id109 . -193) (undo-tree-id110 . -194) (undo-tree-id111 . -193) (undo-tree-id112 . -194) (undo-tree-id113 . -93) (undo-tree-id114 . -92) (undo-tree-id115 . -93) (undo-tree-id116 . -362) (undo-tree-id117 . -363) (nil fontified t 2150 . 2151) (nil fontified t 2151 . 2156) (nil fontified t 2156 . 2157) (nil fontified t 2157 . 2158) (nil fontified t 2158 . 2173) (nil fontified t 2173 . 2174) (nil fontified t 2174 . 2181) (nil fontified t 2181 . 2183) (nil fontified t 2183 . 2189) (nil fontified t 2189 . 2191) (nil fontified t 2191 . 2200) (nil fontified t 2200 . 2201) (nil fontified t 2201 . 2202) (nil fontified t 2202 . 2214) (nil fontified t 2214 . 2215) (nil fontified t 2215 . 2222) (nil fontified t 2222 . 2223) (nil fontified t 2223 . 2224) (nil fontified t 2224 . 2228) (nil fontified t 2228 . 2230) (nil fontified t 2230 . 2238) (nil fontified t 2238 . 2242) (nil rear-nonsticky t 2512 . 2513) (2242 . 2243) (#("  " 0 2 (fontified t)) . 2242) (2344 . 2345) (#("  " 0 2 (fontified t)) . 2344) (2402 . 2403) (#("  " 0 2 (fontified t)) . 2402) (2471 . 2472) (#("  " 0 2 (fontified t)) . 2471) (2504 . 2505) (#("  " 0 2 (fontified t)) . 2504) (t 25556 53994 371410 77000)) (25556 53994 330882 858000) 0 nil])
([nil nil ((nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2204 . 2205) (nil fontified nil 2203 . 2204) (nil fontified nil 2202 . 2203) (nil fontified nil 2201 . 2202) (nil fontified nil 2200 . 2201) (nil fontified nil 2199 . 2200) (nil fontified nil 2198 . 2199) (nil fontified nil 2197 . 2198) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2180 . 2181) (nil fontified nil 2179 . 2180) (nil fontified nil 2178 . 2179) (nil fontified nil 2177 . 2178) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2173 . 2174) (nil fontified nil 2172 . 2173) (nil fontified nil 2171 . 2172) (nil fontified nil 2170 . 2171) (nil fontified nil 2169 . 2170) (nil fontified nil 2168 . 2169) (nil fontified nil 2167 . 2168) (nil fontified nil 2166 . 2167) (nil fontified nil 2165 . 2166) (nil fontified nil 2164 . 2165) (nil fontified nil 2163 . 2164) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2160 . 2161) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2155 . 2156) (nil fontified nil 2154 . 2155) (nil fontified nil 2153 . 2154) (nil fontified nil 2152 . 2153) (nil fontified nil 2151 . 2152) (2151 . 2238)) nil (25556 54025 838757 576000) 0 nil])
nil
([nil nil ((2602 . 2604) (t 25556 54025 879704 25000)) nil (25556 54028 224137 570000) 0 nil])
([nil nil ((nil fontified nil 2689 . 2690) (nil fontified nil 2688 . 2689) (nil fontified nil 2687 . 2688) (nil fontified nil 2686 . 2687) (nil fontified nil 2685 . 2686) (nil fontified nil 2684 . 2685) (nil fontified nil 2683 . 2684) (nil fontified nil 2682 . 2683) (nil fontified nil 2681 . 2682) (nil fontified nil 2680 . 2681) (nil fontified nil 2679 . 2680) (nil fontified nil 2678 . 2679) (nil fontified nil 2677 . 2678) (nil fontified nil 2676 . 2677) (nil fontified nil 2675 . 2676) (nil fontified nil 2674 . 2675) (nil fontified nil 2673 . 2674) (nil fontified nil 2672 . 2673) (nil fontified nil 2671 . 2672) (nil fontified nil 2670 . 2671) (nil fontified nil 2669 . 2670) (nil fontified nil 2668 . 2669) (nil fontified nil 2667 . 2668) (nil fontified nil 2666 . 2667) (nil fontified nil 2665 . 2666) (nil fontified nil 2664 . 2665) (nil fontified nil 2663 . 2664) (nil fontified nil 2662 . 2663) (nil fontified nil 2661 . 2662) (nil fontified nil 2660 . 2661) (nil fontified nil 2659 . 2660) (nil fontified nil 2658 . 2659) (nil fontified nil 2657 . 2658) (nil fontified nil 2656 . 2657) (nil fontified nil 2655 . 2656) (nil fontified nil 2654 . 2655) (nil fontified nil 2653 . 2654) (nil fontified nil 2652 . 2653) (nil fontified nil 2651 . 2652) (nil fontified nil 2650 . 2651) (nil fontified nil 2649 . 2650) (nil fontified nil 2648 . 2649) (nil fontified nil 2647 . 2648) (nil fontified nil 2646 . 2647) (nil fontified nil 2645 . 2646) (nil fontified nil 2644 . 2645) (nil fontified nil 2643 . 2644) (nil fontified nil 2642 . 2643) (nil fontified nil 2641 . 2642) (nil fontified nil 2640 . 2641) (nil fontified nil 2639 . 2640) (nil fontified nil 2638 . 2639) (nil fontified nil 2637 . 2638) (nil fontified nil 2636 . 2637) (nil fontified nil 2635 . 2636) (nil fontified nil 2634 . 2635) (nil fontified nil 2633 . 2634) (nil fontified nil 2632 . 2633) (nil fontified nil 2631 . 2632) (nil fontified nil 2630 . 2631) (nil fontified nil 2629 . 2630) (nil fontified nil 2628 . 2629) (nil fontified nil 2627 . 2628) (nil fontified nil 2626 . 2627) (nil fontified nil 2625 . 2626) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2622 . 2623) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2619 . 2620) (nil fontified nil 2618 . 2619) (nil fontified nil 2617 . 2618) (nil fontified nil 2616 . 2617) (nil fontified nil 2615 . 2616) (nil fontified nil 2614 . 2615) (nil fontified nil 2613 . 2614) (nil fontified nil 2612 . 2613) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (2603 . 2690)) nil (25556 54028 224129 832000) 0 nil])
([nil nil ((2237 . 2243) (t 25556 54028 267726 538000)) nil (25556 54037 508908 486000) 0 nil])
([nil nil ((2695 . 2699)) nil (25556 54037 508903 139000) 0 nil])
([nil nil ((2148 . 2151) (t 25556 54037 551814 361000)) nil (25556 54044 13653 527000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2149) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2150) (undo-tree-id127 . -1) 2151) nil (25556 54044 13651 512000) 0 nil])
([nil nil ((2149 . 2154)) nil (25556 54044 13646 253000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Word Functions Start
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-in-sws t fontified t face font-lock-comment-face) 41 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face) 53 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 59 (c-in-sws t fontified t face font-lock-comment-face) 59 60 (c-in-sws t fontified t face font-lock-comment-face) 60 61 (c-in-sws t fontified t face font-lock-comment-face) 61 62 (c-in-sws t fontified t face font-lock-comment-face) 62 63 (c-in-sws t fontified t face font-lock-comment-face) 63 64 (c-in-sws t fontified t face font-lock-comment-face) 64 65 (c-in-sws t fontified t face font-lock-comment-face) 65 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (c-in-sws t fontified t face font-lock-comment-face) 70 71 (c-in-sws t fontified t face font-lock-comment-face) 71 72 (c-in-sws t fontified t face font-lock-comment-face) 72 73 (c-in-sws t fontified t face font-lock-comment-face) 73 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 76 (c-in-sws t fontified t face font-lock-comment-face) 76 77 (c-in-sws t fontified t face font-lock-comment-face) 77 78 (c-in-sws t fontified t face font-lock-comment-face) 78 79 (c-in-sws t fontified t face font-lock-comment-face) 79 80 (c-in-sws t fontified t face font-lock-comment-face) 80 81 (c-in-sws t fontified t face font-lock-comment-face) 81 82 (c-in-sws t fontified t face font-lock-comment-face) 82 83 (c-in-sws t fontified t face font-lock-comment-face) 83 84 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 84 85 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 85 86 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 86 87 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 87 88 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 88 89 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 89 90 (rear-nonsticky t fontified t ws-butler-chg delete face font-lock-comment-face c-in-sws t)) . 2065) (undo-tree-id123 . -90)) nil (25556 54044 13644 356000) 0 nil])
([nil nil ((nil fontified nil 2154 . 2155) (nil fontified nil 2153 . 2154) (nil fontified nil 2152 . 2153) (nil fontified nil 2151 . 2152) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2148 . 2149) (nil fontified nil 2147 . 2148) (nil fontified nil 2146 . 2147) (nil fontified nil 2145 . 2146) (nil fontified nil 2144 . 2145) (nil fontified nil 2143 . 2144) (nil fontified nil 2142 . 2143) (nil fontified nil 2141 . 2142) (nil fontified nil 2140 . 2141) (nil fontified nil 2139 . 2140) (nil fontified nil 2138 . 2139) (nil fontified nil 2137 . 2138) (nil fontified nil 2136 . 2137) (nil fontified nil 2135 . 2136) (nil fontified nil 2134 . 2135) (nil fontified nil 2133 . 2134) (nil fontified nil 2132 . 2133) (nil fontified nil 2131 . 2132) (nil fontified nil 2130 . 2131) (nil fontified nil 2129 . 2130) (nil fontified nil 2128 . 2129) (nil fontified nil 2127 . 2128) (nil fontified nil 2126 . 2127) (nil fontified nil 2125 . 2126) (nil fontified nil 2124 . 2125) (nil fontified nil 2123 . 2124) (nil fontified nil 2122 . 2123) (nil fontified nil 2121 . 2122) (nil fontified nil 2120 . 2121) (nil fontified nil 2119 . 2120) (nil fontified nil 2118 . 2119) (nil fontified nil 2117 . 2118) (nil fontified nil 2116 . 2117) (nil fontified nil 2115 . 2116) (nil fontified nil 2114 . 2115) (nil fontified nil 2113 . 2114) (nil fontified nil 2112 . 2113) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2107 . 2108) (nil fontified nil 2106 . 2107) (nil fontified nil 2105 . 2106) (nil fontified nil 2104 . 2105) (nil fontified nil 2103 . 2104) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2100 . 2101) (nil fontified nil 2099 . 2100) (nil fontified nil 2098 . 2099) (nil fontified nil 2097 . 2098) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2091 . 2092) (nil fontified nil 2090 . 2091) (nil fontified nil 2089 . 2090) (nil fontified nil 2088 . 2089) (nil fontified nil 2087 . 2088) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (2065 . 2155)) nil (25556 54044 13630 596000) 0 nil])
([nil nil ((2155 . 2156) (t 25556 54044 67876 271000)) nil (25556 54045 603520 495000) 0 nil])
([nil nil ((nil fontified nil 2245 . 2246) (nil fontified nil 2244 . 2245) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2204 . 2205) (nil fontified nil 2203 . 2204) (nil fontified nil 2202 . 2203) (nil fontified nil 2201 . 2202) (nil fontified nil 2200 . 2201) (nil fontified nil 2199 . 2200) (nil fontified nil 2198 . 2199) (nil fontified nil 2197 . 2198) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2180 . 2181) (nil fontified nil 2179 . 2180) (nil fontified nil 2178 . 2179) (nil fontified nil 2177 . 2178) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2173 . 2174) (nil fontified nil 2172 . 2173) (nil fontified nil 2171 . 2172) (nil fontified nil 2170 . 2171) (nil fontified nil 2169 . 2170) (nil fontified nil 2168 . 2169) (nil fontified nil 2167 . 2168) (nil fontified nil 2166 . 2167) (nil fontified nil 2165 . 2166) (nil fontified nil 2164 . 2165) (nil fontified nil 2163 . 2164) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2160 . 2161) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (2156 . 2246)) nil (25556 54045 603512 920000) 0 nil])
([nil nil ((#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2241) (undo-tree-id130 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2242) (undo-tree-id131 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2243) (undo-tree-id132 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2244) (undo-tree-id133 . -1) 2245 (t 25556 54045 651891 356000)) nil (25556 54048 977769 947000) 0 nil])
([nil nil ((2241 . 2242)) nil (25556 54048 977764 675000) 0 nil])
([nil nil ((#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2240) (undo-tree-id128 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2241) (undo-tree-id129 . -1) 2242) nil (25556 54048 977749 728000) 0 nil])
([nil nil ((2240 . 2243)) nil (25556 54048 977722 757000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . -2243) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 2244 (t 25556 54049 27923 549000)) nil (25556 54051 219493 135000) 0 nil])
([nil nil ((2156 . 2160) (t 25556 54051 259944 863000)) nil (25556 54052 609065 658000) 0 nil])
([nil nil ((#("int8_t Regex_GetObjectStrictWord(uint64_t pos,char* text,char word[MAX_WORD_LENGTH])
{
 int16_t is_word=0;
 int64_t jump=0;

 while(1){
  jump=Regex_JumpToLetter(text,pos);

  if(jump==-1){ printf(\" Couldnt Find Object\"); return 0; }

  pos+=jump;
  jump=0;

  is_word=Regex_IsStrictWord(text,pos);

  if(is_word!=-1){
   strncpy(word,&text[pos],is_word);
   word[is_word+1]='\\0';
   printf(\" Found Word %s \\n \", word);
   break;
  }

  while(text[pos]!=' '){
   pos++;

   if(text[pos]=='\\0'){
    printf(\" Couldnt Find Object\"); return 0;
   }
  }

 }
}

int16_t Regex_IsStrictWord(char* text, uint64_t pos)
{
 uint16_t length=0;

 while( (text[pos]>64 && text[pos]<91) || (text[pos]>96 && text[pos]<128)  ){
   printf(\" Found Letter %c at pos %d \\n \", text[pos],pos);
   length++;
   pos++;
 }

 if(text[pos]=='\\0' || text[pos]==' '){  return length; }

 printf(\" Found SpecialChar %c at pos %d \\n \", text[pos],pos);

 return -1;
}

" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 32 (fontified t face font-lock-function-name-face) 32 33 (fontified t c-type c-decl-arg-start) 33 41 (fontified t face font-lock-type-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-variable-name-face) 45 46 (fontified t c-type c-decl-arg-start) 46 50 (fontified t face font-lock-type-face) 50 52 (fontified t) 52 56 (fontified t face font-lock-variable-name-face) 56 57 (fontified t c-type c-decl-arg-start) 57 61 (fontified t face font-lock-type-face) 61 62 (fontified t) 62 66 (fontified t face font-lock-variable-name-face) 66 88 (fontified t) 88 94 (fontified t face font-lock-type-face) 94 95 (fontified t c-type c-decl-id-start face font-lock-type-face) 95 96 (fontified t) 96 103 (fontified t face font-lock-variable-name-face) 103 108 (fontified t) 108 114 (fontified t face font-lock-type-face) 114 115 (fontified t c-type c-decl-id-start face font-lock-type-face) 115 116 (fontified t) 116 117 (fontified t face font-lock-variable-name-face) 117 120 (fontified t face font-lock-variable-name-face) 120 121 (fontified t) 121 126 (fontified t) 126 131 (fontified t face font-lock-keyword-face) 131 176 (fontified t) 176 178 (fontified t face font-lock-keyword-face) 178 197 (fontified t) 197 219 (fontified t face font-lock-string-face) 219 222 (fontified t) 222 228 (fontified t face font-lock-keyword-face) 228 302 (fontified t) 302 304 (fontified t face font-lock-keyword-face) 304 375 (fontified t) 375 379 (fontified t face font-lock-string-face) 379 391 (fontified t) 391 411 (fontified t face font-lock-string-face) 411 423 (fontified t) 423 428 (fontified t face font-lock-keyword-face) 428 437 (fontified t) 437 442 (fontified t face font-lock-keyword-face) 442 454 (fontified t) 454 457 (fontified t face font-lock-string-face) 457 474 (fontified t) 474 476 (fontified t face font-lock-keyword-face) 476 484 (fontified t) 484 486 (fontified t) 486 488 (fontified t) 488 492 (fontified t face font-lock-string-face) 492 506 (fontified t) 506 528 (fontified t face font-lock-string-face) 528 531 (fontified t) 531 537 (fontified t face font-lock-keyword-face) 537 557 (fontified t) 557 563 (fontified t face font-lock-type-face) 563 564 (fontified t c-type c-decl-id-start face font-lock-type-face) 564 565 (fontified t) 565 583 (fontified t face font-lock-function-name-face) 583 584 (fontified t c-type c-decl-arg-start) 584 588 (fontified t face font-lock-type-face) 588 590 (fontified t) 590 594 (fontified t face font-lock-variable-name-face) 594 595 (fontified t c-type c-decl-arg-start) 595 596 (fontified t) 596 604 (fontified t face font-lock-type-face) 604 605 (fontified t) 605 608 (fontified t face font-lock-variable-name-face) 608 613 (fontified t) 613 620 (fontified t face font-lock-type-face) 620 621 (fontified t c-type c-decl-id-start face font-lock-type-face) 621 622 (fontified t) 622 628 (fontified t face font-lock-variable-name-face) 628 629 (fontified t) 629 634 (fontified t) 634 639 (fontified t face font-lock-keyword-face) 639 721 (fontified t) 721 753 (fontified t face font-lock-string-face) 753 799 (fontified t) 799 801 (fontified t face font-lock-keyword-face) 801 813 (fontified t) 813 817 (fontified t face font-lock-string-face) 817 832 (fontified t) 832 835 (fontified t face font-lock-string-face) 835 839 (fontified t) 839 845 (fontified t face font-lock-keyword-face) 845 865 (fontified t) 865 902 (fontified t face font-lock-string-face) 902 922 (fontified t) 922 928 (fontified t face font-lock-keyword-face) 928 936 (fontified t)) . 3873) (undo-tree-id136 . -555) (undo-tree-id137 . -33) (undo-tree-id138 . -46) (undo-tree-id139 . -46) (undo-tree-id140 . -57) (undo-tree-id141 . -57) (undo-tree-id142 . -84) (undo-tree-id143 . -557) (undo-tree-id144 . -934) (undo-tree-id145 . -584) (undo-tree-id146 . -595) (undo-tree-id147 . -596) (undo-tree-id148 . -609) (undo-tree-id149 . -936) (undo-tree-id150 . -85) (undo-tree-id151 . -936) (undo-tree-id152 . -794) (undo-tree-id153 . -936) (undo-tree-id154 . -936) 4809 (t 25556 54052 655958 206000)) nil (25556 54071 4485 888000) 0 nil])
([nil nil ((3132 . 3134) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3132) (3067 . 3069) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3067) (3007 . 3009) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3007) (3002 . 3004) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3002) (2991 . 2995) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2991) (2977 . 2981) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2977) (2916 . 2920) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2916) (2837 . 2839) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2837) (2815 . 2817) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2815) (2753 . 2755) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2753) (2746 . 2750) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2746) (2738 . 2744) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2738) (2688 . 2696) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 2688) (2661 . 2667) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2661) (2647 . 2653) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2647) (2620 . 2624) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2620) (2613 . 2617) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2613) (2600 . 2606) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2600) (2558 . 2564) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2558) (2530 . 2536) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2530) (2490 . 2496) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2490) (2469 . 2473) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2469) (2426 . 2430) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2426) (2413 . 2417) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2413) (2398 . 2402) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2398) (2335 . 2339) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2335) (2295 . 2299) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2295) (2283 . 2285) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2283) (2264 . 2266) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2264) (2243 . 2245) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2243) (nil rear-nonsticky nil 3091 . 3092) (nil fontified nil 3084 . 3092) (nil fontified nil 3078 . 3084) (nil fontified nil 3058 . 3078) (nil fontified nil 3021 . 3058) (nil fontified nil 3001 . 3021) (nil fontified nil 2995 . 3001) (nil fontified nil 2991 . 2995) (nil fontified nil 2988 . 2991) (nil fontified nil 2973 . 2988) (nil fontified nil 2969 . 2973) (nil fontified nil 2957 . 2969) (nil fontified nil 2955 . 2957) (nil fontified nil 2909 . 2955) (nil fontified nil 2877 . 2909) (nil fontified nil 2795 . 2877) (nil fontified nil 2790 . 2795) (nil fontified nil 2785 . 2790) (nil fontified nil 2784 . 2785) (nil fontified nil 2778 . 2784) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2769 . 2776) (nil fontified nil 2764 . 2769) (nil fontified nil 2761 . 2764) (nil fontified nil 2760 . 2761) (nil fontified nil 2752 . 2760) (nil fontified nil 2751 . 2752) (nil fontified nil 2750 . 2751) (nil fontified nil 2746 . 2750) (nil fontified nil 2744 . 2746) (nil fontified nil 2740 . 2744) (nil fontified nil 2739 . 2740) (nil fontified nil 2721 . 2739) (nil fontified nil 2720 . 2721) (nil fontified nil 2719 . 2720) (nil fontified nil 2713 . 2719) (nil fontified nil 2693 . 2713) (nil fontified nil 2687 . 2693) (nil fontified nil 2684 . 2687) (nil fontified nil 2662 . 2684) (nil fontified nil 2648 . 2662) (nil fontified nil 2644 . 2648) (nil fontified nil 2642 . 2644) (nil fontified nil 2640 . 2642) (nil fontified nil 2632 . 2640) (nil fontified nil 2630 . 2632) (nil fontified nil 2613 . 2630) (nil fontified nil 2610 . 2613) (nil fontified nil 2598 . 2610) (nil fontified nil 2593 . 2598) (nil fontified nil 2584 . 2593) (nil fontified nil 2579 . 2584) (nil fontified nil 2567 . 2579) (nil fontified nil 2547 . 2567) (nil fontified nil 2535 . 2547) (nil fontified nil 2531 . 2535) (nil fontified nil 2460 . 2531) (nil fontified nil 2458 . 2460) (nil fontified nil 2384 . 2458) (nil fontified nil 2378 . 2384) (nil fontified nil 2375 . 2378) (nil fontified nil 2353 . 2375) (nil fontified nil 2334 . 2353) (nil fontified nil 2332 . 2334) (nil fontified nil 2287 . 2332) (nil fontified nil 2282 . 2287) (nil fontified nil 2277 . 2282) (nil fontified nil 2276 . 2277) (nil fontified nil 2273 . 2276) (nil fontified nil 2272 . 2273) (nil fontified nil 2271 . 2272) (nil fontified nil 2270 . 2271) (nil fontified nil 2264 . 2270) (nil fontified nil 2259 . 2264) (nil fontified nil 2252 . 2259) (nil fontified nil 2251 . 2252) (nil fontified nil 2250 . 2251) (nil fontified nil 2244 . 2250) (nil fontified nil 2222 . 2244) (nil fontified nil 2218 . 2222) (nil fontified nil 2217 . 2218) (nil fontified nil 2213 . 2217) (nil fontified nil 2212 . 2213) (nil fontified nil 2208 . 2212) (nil fontified nil 2206 . 2208) (nil fontified nil 2202 . 2206) (nil fontified nil 2201 . 2202) (nil fontified nil 2198 . 2201) (nil fontified nil 2197 . 2198) (nil fontified nil 2189 . 2197) (nil fontified nil 2188 . 2189) (nil fontified nil 2163 . 2188) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2157 . 2161) (nil fontified nil 2156 . 2157) (2156 . 3092)) nil (25556 54071 4455 502000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -3147) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("
" 0 1 (fontified t)) . -3148) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("
" 0 1 (c-in-sws t fontified t)) . -3149) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 3150 (t 25556 54071 52134 939000)) nil (25556 54073 188676 802000) 0 nil])
([nil nil ((#("int8_t Regex_GetObjectStrictChar(uint64_t pos,char* text,char* strict_char)
{

 while(text[pos]!='\\0')
 {

  if( (text[pos]>64 && text[pos]<91) || (text[pos]>96 && text[pos]<128) ){
   printf(\" Strict Character %c\", text[pos]);
   strict_char=text[pos];
   return pos;
  }

  pos++;
 }

 printf(\" No Object Found \\n \");
 return -1;
}
" 0 3 (fontified t face font-lock-type-face) 3 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 32 (fontified t face font-lock-function-name-face) 32 33 (fontified t c-type c-decl-arg-start) 33 41 (fontified t face font-lock-type-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-variable-name-face) 45 46 (fontified t c-type c-decl-arg-start) 46 50 (fontified t face font-lock-type-face) 50 52 (fontified t) 52 56 (fontified t face font-lock-variable-name-face) 56 57 (fontified t c-type c-decl-arg-start) 57 61 (fontified t face font-lock-type-face) 61 63 (fontified t) 63 74 (fontified t face font-lock-variable-name-face) 74 75 (fontified t) 75 80 (fontified t) 80 85 (fontified t face font-lock-keyword-face) 85 97 (fontified t) 97 101 (fontified t face font-lock-string-face) 101 109 (fontified t) 109 111 (fontified t face font-lock-keyword-face) 111 152 (fontified t) 152 178 (fontified t) 178 180 (fontified t) 180 182 (fontified t) 182 192 (fontified t) 192 214 (fontified t face font-lock-string-face) 214 257 (fontified t) 257 263 (fontified t face font-lock-keyword-face) 263 292 (fontified t) 292 295 (fontified t) 295 317 (fontified t face font-lock-string-face) 317 319 (fontified t) 319 321 (fontified t) 321 327 (fontified t face font-lock-keyword-face) 327 334 (fontified t)) . 4527) (undo-tree-id169 . -333) (undo-tree-id170 . -33) (undo-tree-id171 . -46) (undo-tree-id172 . -46) (undo-tree-id173 . -57) (undo-tree-id174 . -57) (undo-tree-id175 . -75) (undo-tree-id176 . -334) (undo-tree-id177 . -107) (undo-tree-id178 . -178) (undo-tree-id179 . -334) (undo-tree-id180 . -334) (undo-tree-id181 . -334) 4861 (t 25556 54073 236156 31000)) nil (25556 54119 679106 73000) 0 nil])
([nil nil ((3237 . 3239)) nil (25556 54119 679089 890000) 0 nil])
([nil nil ((3593 . 3595) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3593) (3559 . 3561) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3559) (3552 . 3556) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3552) (3539 . 3545) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3539) (3530 . 3536) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3530) (3510 . 3518) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 3510) (3479 . 3487) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 3479) (3428 . 3436) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 3428) (3349 . 3355) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3349) (3342 . 3346) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3342) (3317 . 3319) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3317) (nil rear-nonsticky nil 3571 . 3572) (nil fontified nil 3565 . 3572) (nil fontified nil 3559 . 3565) (nil fontified nil 3557 . 3559) (nil fontified nil 3555 . 3557) (nil fontified nil 3533 . 3555) (nil fontified nil 3530 . 3533) (nil fontified nil 3501 . 3530) (nil fontified nil 3495 . 3501) (nil fontified nil 3452 . 3495) (nil fontified nil 3430 . 3452) (nil fontified nil 3420 . 3430) (nil fontified nil 3418 . 3420) (nil fontified nil 3416 . 3418) (nil fontified nil 3390 . 3416) (nil fontified nil 3349 . 3390) (nil fontified nil 3347 . 3349) (nil fontified nil 3339 . 3347) (nil fontified nil 3335 . 3339) (nil fontified nil 3323 . 3335) (nil fontified nil 3318 . 3323) (nil fontified nil 3313 . 3318) (nil fontified nil 3312 . 3313) (nil fontified nil 3301 . 3312) (nil fontified nil 3299 . 3301) (nil fontified nil 3295 . 3299) (nil fontified nil 3294 . 3295) (nil fontified nil 3290 . 3294) (nil fontified nil 3288 . 3290) (nil fontified nil 3284 . 3288) (nil fontified nil 3283 . 3284) (nil fontified nil 3280 . 3283) (nil fontified nil 3279 . 3280) (nil fontified nil 3271 . 3279) (nil fontified nil 3270 . 3271) (nil fontified nil 3245 . 3270) (nil fontified nil 3244 . 3245) (nil fontified nil 3243 . 3244) (nil fontified nil 3241 . 3243) (nil fontified nil 3239 . 3241) (nil fontified nil 3238 . 3239) (3238 . 3572)) nil (25556 54119 679082 536000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Word Functions End
" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-in-sws t fontified t face font-lock-comment-face) 41 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face) 53 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (c-in-sws t fontified t face font-lock-comment-face) 57 58 (c-in-sws t fontified t face font-lock-comment-face) 58 59 (c-in-sws t fontified t face font-lock-comment-face) 59 60 (c-in-sws t fontified t face font-lock-comment-face) 60 61 (c-in-sws t fontified t face font-lock-comment-face) 61 62 (c-in-sws t fontified t face font-lock-comment-face) 62 63 (c-in-sws t fontified t face font-lock-comment-face) 63 64 (c-in-sws t fontified t face font-lock-comment-face) 64 65 (c-in-sws t fontified t face font-lock-comment-face) 65 66 (c-in-sws t fontified t face font-lock-comment-face) 66 67 (c-in-sws t fontified t face font-lock-comment-face) 67 68 (c-in-sws t fontified t face font-lock-comment-face) 68 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (c-in-sws t fontified t face font-lock-comment-face) 70 71 (c-in-sws t fontified t face font-lock-comment-face) 71 72 (c-in-sws t fontified t face font-lock-comment-face) 72 73 (c-in-sws t fontified t face font-lock-comment-face) 73 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 76 (c-in-sws t fontified t face font-lock-comment-face) 76 77 (c-in-sws t fontified t face font-lock-comment-face) 77 78 (c-in-sws t fontified t face font-lock-comment-face) 78 79 (c-in-sws t fontified t face font-lock-comment-face) 79 80 (c-in-sws t fontified t face font-lock-comment-face) 80 81 (c-in-sws t fontified t face font-lock-comment-face) 81 82 (c-in-sws t fontified t face font-lock-comment-face) 82 83 (c-in-sws t fontified t face font-lock-comment-face) 83 84 (c-in-sws t fontified t face font-lock-comment-face) 84 85 (c-in-sws t fontified t face font-lock-comment-face) 85 86 (c-in-sws t fontified t face font-lock-comment-face) 86 87 (c-in-sws t fontified t face font-lock-comment-face) 87 88 (fontified t face font-lock-comment-face c-in-sws t)) . 3149) (undo-tree-id182 . -88) (undo-tree-id183 . -88) (t 25556 54119 728609 918000)) nil (25556 54123 212394 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3236 . 3237) (nil fontified nil 3236 . 3237) (nil fontified nil 3235 . 3236) (nil fontified nil 3234 . 3235) (nil fontified nil 3233 . 3234) (nil fontified nil 3232 . 3233) (nil fontified nil 3231 . 3232) (nil fontified nil 3230 . 3231) (nil fontified nil 3229 . 3230) (nil fontified nil 3228 . 3229) (nil fontified nil 3227 . 3228) (nil fontified nil 3226 . 3227) (nil fontified nil 3225 . 3226) (nil fontified nil 3224 . 3225) (nil fontified nil 3223 . 3224) (nil fontified nil 3222 . 3223) (nil fontified nil 3221 . 3222) (nil fontified nil 3220 . 3221) (nil fontified nil 3219 . 3220) (nil fontified nil 3218 . 3219) (nil fontified nil 3217 . 3218) (nil fontified nil 3216 . 3217) (nil fontified nil 3215 . 3216) (nil fontified nil 3214 . 3215) (nil fontified nil 3213 . 3214) (nil fontified nil 3212 . 3213) (nil fontified nil 3211 . 3212) (nil fontified nil 3210 . 3211) (nil fontified nil 3209 . 3210) (nil fontified nil 3208 . 3209) (nil fontified nil 3207 . 3208) (nil fontified nil 3206 . 3207) (nil fontified nil 3205 . 3206) (nil fontified nil 3204 . 3205) (nil fontified nil 3203 . 3204) (nil fontified nil 3202 . 3203) (nil fontified nil 3201 . 3202) (nil fontified nil 3200 . 3201) (nil fontified nil 3199 . 3200) (nil fontified nil 3198 . 3199) (nil fontified nil 3197 . 3198) (nil fontified nil 3196 . 3197) (nil fontified nil 3195 . 3196) (nil fontified nil 3194 . 3195) (nil fontified nil 3193 . 3194) (nil fontified nil 3192 . 3193) (nil fontified nil 3191 . 3192) (nil fontified nil 3190 . 3191) (nil fontified nil 3189 . 3190) (nil fontified nil 3188 . 3189) (nil fontified nil 3187 . 3188) (nil fontified nil 3186 . 3187) (nil fontified nil 3185 . 3186) (nil fontified nil 3184 . 3185) (nil fontified nil 3183 . 3184) (nil fontified nil 3182 . 3183) (nil fontified nil 3181 . 3182) (nil fontified nil 3180 . 3181) (nil fontified nil 3179 . 3180) (nil fontified nil 3178 . 3179) (nil fontified nil 3177 . 3178) (nil fontified nil 3176 . 3177) (nil fontified nil 3175 . 3176) (nil fontified nil 3174 . 3175) (nil fontified nil 3173 . 3174) (nil fontified nil 3172 . 3173) (nil fontified nil 3171 . 3172) (nil fontified nil 3170 . 3171) (nil fontified nil 3169 . 3170) (nil fontified nil 3168 . 3169) (nil fontified nil 3167 . 3168) (nil fontified nil 3166 . 3167) (nil fontified nil 3165 . 3166) (nil fontified nil 3164 . 3165) (nil fontified nil 3163 . 3164) (nil fontified nil 3162 . 3163) (nil fontified nil 3161 . 3162) (nil fontified nil 3160 . 3161) (nil fontified nil 3159 . 3160) (nil fontified nil 3158 . 3159) (nil fontified nil 3157 . 3158) (nil fontified nil 3156 . 3157) (nil fontified nil 3155 . 3156) (nil fontified nil 3154 . 3155) (nil fontified nil 3153 . 3154) (nil fontified nil 3152 . 3153) (nil fontified nil 3151 . 3152) (nil fontified nil 3150 . 3151) (nil fontified nil 3149 . 3150) (3149 . 3237)) nil (25556 54123 212378 635000) 0 nil])
([nil nil ((3237 . 3239) (t 25556 54123 252644 683000)) nil (25556 54124 738437 478000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3326 . 3327) (nil fontified nil 3326 . 3327) (nil fontified nil 3325 . 3326) (nil fontified nil 3324 . 3325) (nil fontified nil 3323 . 3324) (nil fontified nil 3322 . 3323) (nil fontified nil 3321 . 3322) (nil fontified nil 3320 . 3321) (nil fontified nil 3319 . 3320) (nil fontified nil 3318 . 3319) (nil fontified nil 3317 . 3318) (nil fontified nil 3316 . 3317) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3311 . 3312) (nil fontified nil 3310 . 3311) (nil fontified nil 3309 . 3310) (nil fontified nil 3308 . 3309) (nil fontified nil 3307 . 3308) (nil fontified nil 3306 . 3307) (nil fontified nil 3305 . 3306) (nil fontified nil 3304 . 3305) (nil fontified nil 3303 . 3304) (nil fontified nil 3302 . 3303) (nil fontified nil 3301 . 3302) (nil fontified nil 3300 . 3301) (nil fontified nil 3299 . 3300) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3296 . 3297) (nil fontified nil 3295 . 3296) (nil fontified nil 3294 . 3295) (nil fontified nil 3293 . 3294) (nil fontified nil 3292 . 3293) (nil fontified nil 3291 . 3292) (nil fontified nil 3290 . 3291) (nil fontified nil 3289 . 3290) (nil fontified nil 3288 . 3289) (nil fontified nil 3287 . 3288) (nil fontified nil 3286 . 3287) (nil fontified nil 3285 . 3286) (nil fontified nil 3284 . 3285) (nil fontified nil 3283 . 3284) (nil fontified nil 3282 . 3283) (nil fontified nil 3281 . 3282) (nil fontified nil 3280 . 3281) (nil fontified nil 3279 . 3280) (nil fontified nil 3278 . 3279) (nil fontified nil 3277 . 3278) (nil fontified nil 3276 . 3277) (nil fontified nil 3275 . 3276) (nil fontified nil 3274 . 3275) (nil fontified nil 3273 . 3274) (nil fontified nil 3272 . 3273) (nil fontified nil 3271 . 3272) (nil fontified nil 3270 . 3271) (nil fontified nil 3269 . 3270) (nil fontified nil 3268 . 3269) (nil fontified nil 3267 . 3268) (nil fontified nil 3266 . 3267) (nil fontified nil 3265 . 3266) (nil fontified nil 3264 . 3265) (nil fontified nil 3263 . 3264) (nil fontified nil 3262 . 3263) (nil fontified nil 3261 . 3262) (nil fontified nil 3260 . 3261) (nil fontified nil 3259 . 3260) (nil fontified nil 3258 . 3259) (nil fontified nil 3257 . 3258) (nil fontified nil 3256 . 3257) (nil fontified nil 3255 . 3256) (nil fontified nil 3254 . 3255) (nil fontified nil 3253 . 3254) (nil fontified nil 3252 . 3253) (nil fontified nil 3251 . 3252) (nil fontified nil 3250 . 3251) (nil fontified nil 3249 . 3250) (nil fontified nil 3248 . 3249) (nil fontified nil 3247 . 3248) (nil fontified nil 3246 . 3247) (nil fontified nil 3245 . 3246) (nil fontified nil 3244 . 3245) (nil fontified nil 3243 . 3244) (nil fontified nil 3242 . 3243) (nil fontified nil 3241 . 3242) (nil fontified nil 3240 . 3241) (nil fontified nil 3239 . 3240) (3239 . 3327)) nil (25556 54124 738430 49000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3308) (undo-tree-id184 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3309) (undo-tree-id185 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3310) (undo-tree-id186 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3311) (undo-tree-id187 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3312) (undo-tree-id188 . -1) (#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3313) (undo-tree-id189 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3314) (undo-tree-id190 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3315) (undo-tree-id191 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3316) (undo-tree-id192 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3317) (undo-tree-id193 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3318) (undo-tree-id194 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3319) (undo-tree-id195 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3320) (undo-tree-id196 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3321) (undo-tree-id197 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3322) (undo-tree-id198 . -1) (#("E" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3323) (undo-tree-id199 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3324) (undo-tree-id200 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3325) (undo-tree-id201 . -1) 3326 (t 25556 54124 780659 769000)) nil (25556 54132 599865 397000) 0 nil])
([nil nil ((3308 . 3328)) nil (25556 54132 599837 529000) 0 nil])
([nil nil ((3701 . 3702) (t 25556 54132 648737 606000)) nil (25556 54135 740432 847000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3788 . 3789) (nil fontified nil 3788 . 3789) (nil fontified nil 3787 . 3788) (nil fontified nil 3786 . 3787) (nil fontified nil 3785 . 3786) (nil fontified nil 3784 . 3785) (nil fontified nil 3783 . 3784) (nil fontified nil 3782 . 3783) (nil fontified nil 3781 . 3782) (nil fontified nil 3780 . 3781) (nil fontified nil 3779 . 3780) (nil fontified nil 3778 . 3779) (nil fontified nil 3777 . 3778) (nil fontified nil 3776 . 3777) (nil fontified nil 3775 . 3776) (nil fontified nil 3774 . 3775) (nil fontified nil 3773 . 3774) (nil fontified nil 3772 . 3773) (nil fontified nil 3771 . 3772) (nil fontified nil 3770 . 3771) (nil fontified nil 3769 . 3770) (nil fontified nil 3768 . 3769) (nil fontified nil 3767 . 3768) (nil fontified nil 3766 . 3767) (nil fontified nil 3765 . 3766) (nil fontified nil 3764 . 3765) (nil fontified nil 3763 . 3764) (nil fontified nil 3762 . 3763) (nil fontified nil 3761 . 3762) (nil fontified nil 3760 . 3761) (nil fontified nil 3759 . 3760) (nil fontified nil 3758 . 3759) (nil fontified nil 3757 . 3758) (nil fontified nil 3756 . 3757) (nil fontified nil 3755 . 3756) (nil fontified nil 3754 . 3755) (nil fontified nil 3753 . 3754) (nil fontified nil 3752 . 3753) (nil fontified nil 3751 . 3752) (nil fontified nil 3750 . 3751) (nil fontified nil 3749 . 3750) (nil fontified nil 3748 . 3749) (nil fontified nil 3747 . 3748) (nil fontified nil 3746 . 3747) (nil fontified nil 3745 . 3746) (nil fontified nil 3744 . 3745) (nil fontified nil 3743 . 3744) (nil fontified nil 3742 . 3743) (nil fontified nil 3741 . 3742) (nil fontified nil 3740 . 3741) (nil fontified nil 3739 . 3740) (nil fontified nil 3738 . 3739) (nil fontified nil 3737 . 3738) (nil fontified nil 3736 . 3737) (nil fontified nil 3735 . 3736) (nil fontified nil 3734 . 3735) (nil fontified nil 3733 . 3734) (nil fontified nil 3732 . 3733) (nil fontified nil 3731 . 3732) (nil fontified nil 3730 . 3731) (nil fontified nil 3729 . 3730) (nil fontified nil 3728 . 3729) (nil fontified nil 3727 . 3728) (nil fontified nil 3726 . 3727) (nil fontified nil 3725 . 3726) (nil fontified nil 3724 . 3725) (nil fontified nil 3723 . 3724) (nil fontified nil 3722 . 3723) (nil fontified nil 3721 . 3722) (nil fontified nil 3720 . 3721) (nil fontified nil 3719 . 3720) (nil fontified nil 3718 . 3719) (nil fontified nil 3717 . 3718) (nil fontified nil 3716 . 3717) (nil fontified nil 3715 . 3716) (nil fontified nil 3714 . 3715) (nil fontified nil 3713 . 3714) (nil fontified nil 3712 . 3713) (nil fontified nil 3711 . 3712) (nil fontified nil 3710 . 3711) (nil fontified nil 3709 . 3710) (nil fontified nil 3708 . 3709) (nil fontified nil 3707 . 3708) (nil fontified nil 3706 . 3707) (nil fontified nil 3705 . 3706) (nil fontified nil 3704 . 3705) (nil fontified nil 3703 . 3704) (nil fontified nil 3702 . 3703) (nil fontified nil 3701 . 3702) (3701 . 3789)) nil (25556 54135 740425 758000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3770) (undo-tree-id202 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3771) (undo-tree-id203 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3772) (undo-tree-id204 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3773) (undo-tree-id205 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3774) (undo-tree-id206 . -1) (#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3775) (undo-tree-id207 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3776) (undo-tree-id208 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3777) (undo-tree-id209 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3778) (undo-tree-id210 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3779) (undo-tree-id211 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3780) (undo-tree-id212 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3781) (undo-tree-id213 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3782) (undo-tree-id214 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3783) (undo-tree-id215 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3784) (undo-tree-id216 . -1) (#("E" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3785) (undo-tree-id217 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3786) (undo-tree-id218 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3787) (undo-tree-id219 . -1) 3788 (t 25556 54135 780768 653000)) nil (25556 54142 969715 593000) 0 nil])
([nil nil ((3770 . 3788)) nil (25556 54142 969688 298000) 0 nil])
([nil nil ((#("uint8_t Regex_ExecuteOperations(char* text, Regex_Operation* operations, uint16_t op_count , Regex_Action action)
{
 return 1;
}
" 0 1 (c-is-sws t fontified t face font-lock-type-face) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 31 (fontified t face font-lock-function-name-face) 31 32 (fontified t c-type c-decl-arg-start) 32 36 (fontified t face font-lock-type-face) 36 38 (fontified t) 38 42 (fontified t face font-lock-variable-name-face) 42 43 (fontified t c-type c-decl-arg-start) 43 44 (fontified t) 44 46 (fontified t face font-lock-type-face) 46 47 (fontified t face font-lock-type-face) 47 59 (fontified t face font-lock-type-face) 59 61 (fontified t) 61 71 (fontified t face font-lock-variable-name-face) 71 72 (fontified t c-type c-decl-arg-start) 72 73 (fontified t) 73 77 (fontified t face font-lock-type-face) 77 81 (fontified t face font-lock-type-face) 81 82 (fontified t) 82 90 (fontified t face font-lock-variable-name-face) 90 91 (fontified t) 91 92 (fontified t c-type c-decl-arg-start) 92 93 (fontified t) 93 94 (fontified t face font-lock-type-face) 94 105 (fontified t face font-lock-type-face) 105 106 (fontified t) 106 112 (fontified t face font-lock-variable-name-face) 112 113 (fontified t) 113 117 (fontified t) 117 121 (fontified t face font-lock-keyword-face) 121 123 (fontified t face font-lock-keyword-face) 123 127 (fontified t) 127 129 (fontified t)) . 4342) (undo-tree-id224 . -128) (undo-tree-id225 . -32) (undo-tree-id226 . -43) (undo-tree-id227 . -44) (undo-tree-id228 . -72) (undo-tree-id229 . -73) (undo-tree-id230 . -92) (undo-tree-id231 . -93) (undo-tree-id232 . -113) (undo-tree-id233 . -129) (undo-tree-id234 . -129) 4471 (t 25556 54143 16840 518000)) nil (25556 54181 236435 340000) 0 nil])
([nil nil ((2062 . 2063)) nil (25556 54181 236426 411000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2061) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 2062) nil (25556 54181 236425 137000) 0 nil])
([nil nil ((2064 . 2068)) nil (25556 54181 236413 779000) 0 nil])
([nil nil ((2182 . 2184) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2182) (nil rear-nonsticky nil 2194 . 2195) (nil fontified nil 2193 . 2195) (nil fontified nil 2189 . 2193) (nil fontified nil 2187 . 2189) (nil fontified nil 2183 . 2187) (nil fontified nil 2179 . 2183) (nil fontified nil 2178 . 2179) (nil fontified nil 2172 . 2178) (nil fontified nil 2171 . 2172) (nil fontified nil 2160 . 2171) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2148 . 2156) (nil fontified nil 2147 . 2148) (nil fontified nil 2143 . 2147) (nil fontified nil 2139 . 2143) (nil fontified nil 2138 . 2139) (nil fontified nil 2137 . 2138) (nil fontified nil 2127 . 2137) (nil fontified nil 2125 . 2127) (nil fontified nil 2113 . 2125) (nil fontified nil 2112 . 2113) (nil fontified nil 2110 . 2112) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2104 . 2108) (nil fontified nil 2102 . 2104) (nil fontified nil 2098 . 2102) (nil fontified nil 2097 . 2098) (nil fontified nil 2074 . 2097) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2067 . 2072) (nil fontified nil 2066 . 2067) (2066 . 2195)) nil (25556 54181 236407 987000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2196) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 2197 (t 25556 54181 281223 456000)) nil (25556 54183 846070 687000) 0 nil])
([nil nil ((2197 . 2199) (t 25556 54183 941250 251000)) nil (25556 54204 30253 707000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2197) (undo-tree-id237 . -1) (undo-tree-id238 . 1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 2198) nil (25556 54204 30249 249000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2183) (undo-tree-id241 . -1) 2184 (t 25556 54204 89277 726000)) nil (25556 54224 584927 932000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2194) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 2195 (t 25556 54224 624800 255000)) nil (25556 54232 695925 725000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . -2291) (undo-tree-id246 . -1) 2292 (t 25556 54232 732618 507000)) nil (25556 54252 376107 715000) 0 nil])
([nil nil ((2291 . 2293)) nil (25556 54252 376105 178000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2292) (undo-tree-id245 . -1) 2293) nil (25556 54252 376103 405000) 0 nil])
([nil nil ((2292 . 2293)) nil (25556 54252 376090 885000) 0 nil])
([nil nil ((#(" int64_t jump=0;" 0 1 (fontified t) 1 2 (fontified t face font-lock-type-face) 2 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-variable-name-face) 10 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 16 (fontified t)) . 2398) (undo-tree-id253 . -10) (undo-tree-id254 . -16) (t 25556 54252 416192 753000)) nil (25556 54818 334201 827000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2397) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) 2398) nil (25556 54818 334194 900000) 0 nil])
([nil nil ((2397 . 2398) 2398 (t 25556 54818 374530 624000)) nil (25556 54827 636591 870000) 0 nil])
([nil nil ((2398 . 2403) (t 25556 54818 374530 624000)) nil (25556 54827 636590 799000) 0 nil])
([nil nil ((2403 . 2404)) nil (25556 54827 636589 753000) 0 nil])
([nil nil ((2404 . 2409)) nil (25556 54827 636588 420000) 0 nil])
([nil nil ((2409 . 2410)) nil (25556 54827 636583 512000) 0 nil])
([nil nil ((2409 . 2412) (t 25556 54827 666509 870000)) nil (25556 54833 868473 411000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -2410) (undo-tree-id255 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2411) (undo-tree-id256 . -1) 2412) nil (25556 54833 868471 179000) 0 nil])
([nil nil ((2410 . 2414)) nil (25556 54833 868459 998000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2433) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("u" 0 1 (fontified t)) . -2434) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("m" 0 1 (fontified t)) . -2435) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("p" 0 1 (fontified t)) . -2436) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("=" 0 1 (fontified t)) . -2437) (undo-tree-id295 . -1) 2438 (t 25556 54833 910496 786000)) nil (25556 54841 196230 276000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2452) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("e" 0 1 (fontified t)) . -2453) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("x" 0 1 (fontified t)) . -2454) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("t" 0 1 (fontified t)) . -2455) (undo-tree-id282 . -1) 2456) nil (25556 54841 196187 930000) 0 nil])
([nil nil ((2452 . 2456)) nil (25556 54841 196179 438000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete)) . -2456) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("p" 0 1 (fontified t)) . -2457) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("o" 0 1 (fontified t)) . -2458) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("s" 0 1 (fontified t)) . -2459) (undo-tree-id272 . -1) 2460) nil (25556 54841 196174 673000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2467) (undo-tree-id298 . -1) (#("u" 0 1 (fontified t)) . -2468) (undo-tree-id299 . -1) (#("m" 0 1 (fontified t)) . -2469) (undo-tree-id300 . -1) (#("p" 0 1 (fontified t)) . -2470) (undo-tree-id301 . -1) 2471 (t 25556 54841 226482 336000)) nil (25556 54849 815258 769000) 0 nil])
([nil nil ((2467 . 2471)) nil (25556 54849 815254 446000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2473) (undo-tree-id296 . -1) (#("1" 0 1 (fontified t)) . -2474) (undo-tree-id297 . -1) 2475) nil (25556 54849 815252 466000) 0 nil])
([nil nil ((2473 . 2477)) nil (25556 54849 815239 690000) 0 nil])
([nil nil ((#("pos+=jump;" 0 1 (fontified t) 1 10 (fontified t)) . 2529) (undo-tree-id316 . -10) (t 25556 54849 854466 482000)) nil (25556 54856 236474 397000) 0 nil])
([nil nil ((#("jump=0;" 0 1 (fontified t) 1 7 (fontified t)) . 2534) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7)) nil (25556 54856 236457 192000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2526) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (#("    " 0 4 (fontified t)) . 2525) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) 2534) nil (25556 54856 236450 320000) 0 nil])
([nil nil ((2526 . 2530) 2534 (t 25556 54856 322455 428000)) nil (25556 54858 336567 399000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2523) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("
" 0 1 (fontified t)) . -2524) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("
" 0 1 (fontified t)) . -2525) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2526) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2527) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2528) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2529) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) 2530 (t 25556 54856 322455 428000)) nil (25556 54858 336560 645000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5166) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#(" " 0 1 (fontified t)) . -5167) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (#("u" 0 1 (fontified t)) . -5168) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("i" 0 1 (fontified t)) . -5169) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("n" 0 1 (fontified t)) . -5170) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("t" 0 1 (fontified t)) . -5171) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("6" 0 1 (fontified t)) . -5172) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("4" 0 1 (fontified t)) . -5173) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("_" 0 1 (fontified t)) . -5174) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -5175) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#(" " 0 1 (fontified t)) . -5176) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -5177) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -5178) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -5179) (undo-tree-id517 . -1) 5180 (t 25556 54858 382452 58000)) nil (25556 54868 379521 620000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5314) (undo-tree-id533 . -1) (#("o" 0 1 (fontified t)) . -5315) (undo-tree-id534 . -1) (#("s" 0 1 (fontified t)) . -5316) (undo-tree-id535 . -1) 5317 (t 25556 54868 422436 641000)) nil (25556 54878 748383 467000) 0 nil])
([nil nil ((5314 . 5318)) nil (25556 54878 748380 330000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -5314) (undo-tree-id529 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -5315) (undo-tree-id530 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t)) . -5316) (undo-tree-id531 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5317) (undo-tree-id532 . -1) 5318) nil (25556 54878 748379 225000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -5162) (undo-tree-id525 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -5163) (undo-tree-id526 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -5164) (undo-tree-id527 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -5165) (undo-tree-id528 . -1) 5166) nil (25556 54878 748374 568000) 0 nil])
([nil nil ((5162 . 5165)) nil (25556 54878 748360 714000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5162) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("j" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5163) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5164) (undo-tree-id524 . -1) 5165) nil (25556 54878 748358 60000) 0 nil])
([nil nil ((5162 . 5166)) nil (25556 54878 748342 143000) 0 nil])
([nil nil ((#("text" 0 4 (fontified t)) . -5204) (t 25556 54878 790422 456000) (5208 . 5212) (t 25556 54878 790422 456000)) nil (25556 54902 840550 824000) 0 nil])
([nil nil ((#("text" 0 4 (fontified t)) . -5220) (5224 . 5228)) nil (25556 54902 840549 516000) 0 nil])
([nil nil ((#("text" 0 4 (fontified t)) . -5238) (5242 . 5246)) nil (25556 54902 840548 483000) 0 nil])
([nil nil ((#("text" 0 4 (fontified t)) . -5254) (5258 . 5262)) nil (25556 54902 840546 826000) 0 nil])
([nil nil ((#("text" 0 4 (fontified t)) . -5280) (5284 . 5288)) nil (25556 54902 840541 654000) 0 nil])
([nil nil ((5314 . 5318) (t 25556 54902 890396 107000)) nil (25556 54909 870194 351000) 0 nil])
([nil nil ((#("int64_t Regex_JumpToLetter(char* head)
" 0 1 (c-is-sws t fontified t face font-lock-type-face) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t c-type c-decl-arg-start) 27 31 (fontified t face font-lock-type-face) 31 33 (fontified t) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t) 38 39 (fontified t)) . 5129) (undo-tree-id536 . -38) (undo-tree-id537 . -27) (undo-tree-id538 . -38) (undo-tree-id539 . -38) (undo-tree-id540 . -38) (undo-tree-id541 . -38) (undo-tree-id542 . -38) (undo-tree-id543 . -38) (undo-tree-id544 . -38) (undo-tree-id545 . -38) (undo-tree-id546 . -38) (undo-tree-id547 . -38) (undo-tree-id548 . -39) (t 25556 54909 918390 127000)) nil (25556 54917 599414 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5167 . 5168) (nil fontified nil 5167 . 5168) (nil fontified nil 5166 . 5167) (nil fontified nil 5165 . 5166) (nil fontified nil 5164 . 5165) (nil fontified nil 5163 . 5164) (nil fontified nil 5162 . 5163) (nil fontified nil 5160 . 5162) (nil fontified nil 5156 . 5160) (nil fontified nil 5155 . 5156) (nil fontified nil 5137 . 5155) (nil fontified nil 5136 . 5137) (nil fontified nil 5135 . 5136) (nil fontified nil 5130 . 5135) (nil fontified nil 5129 . 5130) (5129 . 5168)) nil (25556 54917 599392 784000) 0 nil])
([nil nil ((5358 . 5359) (t 25556 54917 642384 418000)) nil (25556 54937 203344 934000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t ws-butler-chg chg)) . -5358) (undo-tree-id847 . -1) 5359) nil (25556 54937 203343 666000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1353) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("u" 0 1 (fontified t)) . -1354) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#("i" 0 1 (fontified t)) . -1355) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("n" 0 1 (fontified t)) . -1356) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("t" 0 1 (fontified t)) . -1357) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#("6" 0 1 (fontified t)) . -1358) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("4" 0 1 (fontified t)) . -1359) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#("_" 0 1 (fontified t)) . -1360) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1361) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#(" " 0 1 (fontified t)) . -1362) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -1363) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -1364) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -1365) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -1366) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1367) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -1368) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1369) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -1370) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -1371) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -1372) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -1373) (undo-tree-id846 . -1) 1374) nil (25556 54937 203329 869000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . -1352) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) 1353) nil (25556 54937 203131 20000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1348) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1349) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -1350) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1351) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) 1352 (t 25556 54937 250373 895000)) nil (25556 54939 118744 650000) 0 nil])
([nil nil ((1348 . 1352)) nil (25556 54939 118709 334000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -5186) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (#("p" 0 1 (fontified t)) . -5187) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (#("o" 0 1 (fontified t)) . -5188) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (#("s" 0 1 (fontified t)) . -5189) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (#("]" 0 1 (fontified t)) . -5190) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) 5191 (t 25556 54939 166373 164000)) nil (25556 54986 829067 965000) 0 nil])
([nil nil ((5182 . 5183)) nil (25556 54986 829047 838000) 0 nil])
([nil nil ((5194 . 5195)) nil (25556 54986 829047 117000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete)) . 5199) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 5199) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 5199) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 5199) (#("[" 0 1 (fontified t)) . 5199)) nil (25556 54986 829046 88000) 0 nil])
([nil nil ((5208 . 5209)) nil (25556 54986 829044 901000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete)) . 5213) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 5213) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 5213) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 5213) (#("[" 0 1 (fontified t)) . 5213)) nil (25556 54986 829043 655000) 0 nil])
([nil nil ((5220 . 5221)) nil (25556 54986 829041 658000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete)) . 5225) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 5225) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 5225) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 5225) (#("[" 0 1 (fontified t)) . 5225)) nil (25556 54986 829036 90000) 0 nil])
([nil nil ((5242 . 5243) (t 25556 54986 878371 492000)) nil (25556 54993 389741 889000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete)) . 5247) (undo-tree-id883 . -1) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 5247) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 5247) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 5247) (#("[" 0 1 (fontified t)) . 5247)) nil (25556 54993 389737 381000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-type-face)) . -1318) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (#("2" 0 1 (fontified t face font-lock-type-face)) . -1319) (undo-tree-id889 . -1) 1320 (t 25556 54993 434373 644000)) nil (25556 55027 895284 637000) 0 nil])
([nil nil ((1318 . 1320)) nil (25556 55027 895260 168000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-preprocessor-face c-in-sws t)) . -2) (undo-tree-id890 . -1) 3 (t 25556 55027 946393 935000)) nil (25556 55074 356263 389000) 0 nil])
([nil nil ((2 . 3)) nil (25556 55074 356251 368000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -2044) (undo-tree-id891 . -1) 2045 (t 25556 55074 402443 722000)) nil (25556 55146 584286 434000) 0 nil])
([nil nil ((#("u" 0 1 (c-is-sws t fontified t face font-lock-type-face)) . -3961) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) 3962 (t 25556 55146 626567 501000)) nil (25556 55160 875680 607000) 0 nil])
([nil nil ((#("u" 0 1 (c-is-sws t fontified t face font-lock-type-face)) . -4419) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) 4420 (t 25556 55160 914598 114000)) nil (25556 55163 577505 426000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-type-face)) . -1413) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (#("2" 0 1 (fontified t face font-lock-type-face)) . -1414) (undo-tree-id915 . -1) 1415 (t 25556 55163 622604 131000)) nil (25556 55190 464542 255000) 0 nil])
([nil nil ((1413 . 1415)) nil (25556 55190 464525 449000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-type-face)) . -1494) (undo-tree-id910 . -1) (#("2" 0 1 (fontified t face font-lock-type-face)) . -1495) (undo-tree-id911 . -1) 1496) nil (25556 55190 464524 90000) 0 nil])
([nil nil ((1494 . 1496)) nil (25556 55190 464521 201000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-type-face)) . -1582) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (#("2" 0 1 (fontified t face font-lock-type-face)) . -1583) (undo-tree-id909 . -1) 1584) nil (25556 55190 464504 798000) 0 nil])
([nil nil ((1582 . 1584)) nil (25556 55190 464491 609000) 0 nil])
([nil nil ((#("int8_t Regex_IsStrictWord(char* text, uint64_t pos);
" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t c-type c-decl-arg-start) 26 30 (fontified t face font-lock-type-face) 30 32 (fontified t) 32 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t c-type c-decl-arg-start) 37 38 (fontified t) 38 46 (fontified t face font-lock-type-face) 46 47 (fontified t) 47 50 (fontified t face font-lock-variable-name-face) 50 53 (fontified t)) . 1356) (undo-tree-id916 . -52) (undo-tree-id917 . -26) (undo-tree-id918 . -37) (undo-tree-id919 . -38) (undo-tree-id920 . -51) (undo-tree-id921 . -52) (undo-tree-id922 . -52) (undo-tree-id923 . -52) (undo-tree-id924 . -52) (undo-tree-id925 . -52) (undo-tree-id926 . -52) (undo-tree-id927 . -53) (t 25556 55190 514667 511000)) nil (25556 55197 64037 671000) 0 nil])
([nil nil ((1314 . 1315)) nil (25556 55197 64020 699000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1366 . 1367) (nil fontified nil 1364 . 1367) (nil fontified nil 1361 . 1364) (nil fontified nil 1360 . 1361) (nil fontified nil 1352 . 1360) (nil fontified nil 1351 . 1352) (nil fontified nil 1350 . 1351) (nil fontified nil 1346 . 1350) (nil fontified nil 1344 . 1346) (nil fontified nil 1340 . 1344) (nil fontified nil 1339 . 1340) (nil fontified nil 1321 . 1339) (nil fontified nil 1320 . 1321) (nil fontified nil 1319 . 1320) (nil fontified nil 1314 . 1319) (1314 . 1367)) nil (25556 55197 64015 891000) 0 nil])
([nil nil ((1314 . 1315) (t 25556 55197 106684 27000)) nil (25556 55198 620063 324000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1368) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) 1369 (t 25556 55198 666687 991000)) nil (25556 55199 489945 306000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1409) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) 1410 (t 25556 55199 530690 197000)) nil (25556 55200 613005 58000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t face font-lock-type-face)) . -2268) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -2269) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) 2270 (t 25556 55200 658693 84000)) nil (25556 55237 735670 934000) 0 nil])
([nil nil ((2268 . 2269)) nil (25556 55237 735653 728000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . -2268) (undo-tree-id950 . -1) 2269 (t 25556 55237 774794 42000)) nil (25556 55248 124697 780000) 0 nil])
([nil nil ((2268 . 2270)) nil (25556 55248 124660 236000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . -3409) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) 3410 (t 25556 55248 166824 313000)) nil (25556 55254 21326 14000) 0 nil])
([nil nil ((3409 . 3411)) nil (25556 55254 21311 253000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-type-face)) . -1318) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) 1319 (t 25556 55254 94841 960000)) nil (25556 55270 527689 971000) 0 nil])
([nil nil ((1318 . 1320)) nil (25556 55270 527676 509000) 0 nil])
([nil nil ((3668 . 3670) (t 25556 55270 578892 456000)) nil (25556 55332 813504 102000) 0 nil])
([nil nil ((3669 . 3670)) nil (25556 55332 813499 533000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -3668) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (#("0" 0 1 (fontified t)) . -3669) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("]" 0 1 (fontified t)) . -3670) (undo-tree-id973 . -1) 3671 (t 25556 55332 851101 24000)) nil (25556 55354 438778 405000) 0 nil])
([nil nil ((3657 . 3658) (t 25556 55354 483179 661000)) nil (25556 55360 80384 630000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -5263) (undo-tree-id974 . -1) (#("1" 0 1 (fontified t)) . -5264) (undo-tree-id975 . -1) 5265 (t 25556 55360 127200 673000)) nil (25556 55413 292902 957000) 0 nil])
([nil nil ((5263 . 5267)) nil (25556 55413 292889 433000) 0 nil])
([nil nil ((1815 . 1822) (t 25556 55413 335408 314000)) nil (25556 55448 986044 103000) 0 nil])
([nil nil ((2444 . 2454) (t 25556 55449 27556 691000)) nil (25556 55514 252155 492000) 0 nil])
([nil nil ((2454 . 2456)) nil (25556 55514 252154 719000) 0 nil])
([nil nil ((2456 . 2457) (nil syntax-table nil 2457 . 2458) (nil syntax-table (1) 2455 . 2456) (2455 . 2456)) nil (25556 55514 252153 945000) 0 nil])
([nil nil ((2456 . 2462)) nil (25556 55514 252152 762000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2457) (undo-tree-id989 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2458) (undo-tree-id990 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2459) (undo-tree-id991 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2460) (undo-tree-id992 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2461) (undo-tree-id993 . -1) 2462) nil (25556 55514 252151 523000) 0 nil])
([nil nil ((2457 . 2465)) nil (25556 55514 252146 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2463) (undo-tree-id987 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2464) (undo-tree-id988 . -1) 2465) nil (25556 55514 252145 854000) 0 nil])
([nil nil ((2463 . 2466)) nil (25556 55514 252143 603000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2465) (undo-tree-id986 . -1) 2466) nil (25556 55514 252142 769000) 0 nil])
([nil nil ((2465 . 2474)) nil (25556 55514 252141 210000) 0 nil])
([nil nil ((2474 . 2476)) nil (25556 55514 252140 648000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2475) (undo-tree-id985 . -1) 2476) nil (25556 55514 252139 891000) 0 nil])
([nil nil ((2475 . 2477)) nil (25556 55514 252138 367000) 0 nil])
([nil nil ((2478 . 2480) (nil syntax-table nil 2480 . 2481) (nil syntax-table (1) 2455 . 2456) (2477 . 2478)) nil (25556 55514 252137 548000) 0 nil])
([nil nil ((2481 . 2482)) nil (25556 55514 252136 327000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -2481) (undo-tree-id984 . -1) 2482) nil (25556 55514 252135 559000) 0 nil])
([nil nil ((2481 . 2482)) nil (25556 55514 252133 919000) 0 nil])
([nil nil ((2482 . 2483)) nil (25556 55514 252133 280000) 0 nil])
([nil nil ((2483 . 2484)) nil (25556 55514 252132 520000) 0 nil])
([nil nil ((2484 . 2488)) nil (25556 55514 252131 694000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -2484) (undo-tree-id980 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2485) (undo-tree-id981 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2486) (undo-tree-id982 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2487) (undo-tree-id983 . -1) 2488) nil (25556 55514 252130 285000) 0 nil])
([nil nil ((2484 . 2488)) nil (25556 55514 252126 145000) 0 nil])
([nil nil ((2489 . 2490)) nil (25556 55514 252125 220000) 0 nil])
([nil nil ((2490 . 2495)) nil (25556 55514 252124 26000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2491) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) 2495) nil (25556 55514 252119 846000) 0 nil])
([nil nil ((2491 . 2495) 2495 (t 25556 55514 303845 162000)) nil (25556 55519 584641 487000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2491) (undo-tree-id997 . -4) (undo-tree-id998 . -4) 2495 (t 25556 55514 303845 162000)) nil (25556 55519 584639 987000) 0 nil])
([nil nil ((2444 . 2449) (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2444) (undo-tree-id996 . -4) 2448) nil (25556 55519 584636 937000) 0 nil])
([nil nil ((2449 . 2450)) nil (25556 55519 584634 58000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2449) (undo-tree-id994 . -1) (undo-tree-id995 . -1) 2450) nil (25556 55519 584629 954000) 0 nil])
([nil nil ((2492 . 2496) (t 25556 55519 655869 732000)) nil (25556 55534 891786 728000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -2495) (undo-tree-id1000 . -1) 2496) nil (25556 55534 891785 745000) 0 nil])
([nil nil ((2495 . 2501)) nil (25556 55534 891783 570000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2500) (undo-tree-id999 . -1) 2501) nil (25556 55534 891782 253000) 0 nil])
([nil nil ((2500 . 2502)) nil (25556 55534 891773 913000) 0 nil])
([nil nil ((2501 . 2502)) nil (25556 55534 891772 608000) 0 nil])
([nil nil ((2503 . 2504)) nil (25556 55534 891768 148000) 0 nil])
([nil nil ((2504 . 2509) (t 25556 55534 939940 609000)) nil (25556 55559 510428 369000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2505) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) 2509) nil (25556 55559 510423 955000) 0 nil])
([nil nil ((2505 . 2509) 2509 (t 25556 55559 548056 894000)) nil (25556 55567 976344 900000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2505) 2509 (t 25556 55559 548056 894000)) nil (25556 55567 976343 489000) 0 nil])
([nil nil ((5342 . 5343)) nil (25556 55567 976341 899000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg chg)) . -5342) (undo-tree-id1005 . -1) 5343) nil (25556 55567 976338 199000) 0 nil])
([nil nil ((5304 . 5308) (#("   " 0 3 (fontified t)) . 5304) (undo-tree-id1009 . -3) 5307 (t 25556 55568 16097 512000)) nil (25556 55681 400967 418000) 0 nil])
([nil nil ((5308 . 5309)) nil (25556 55681 400965 626000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5308) (undo-tree-id1008 . -1) 5309) nil (25556 55681 400964 886000) 0 nil])
([nil nil ((5304 . 5313)) nil (25556 55681 400963 384000) 0 nil])
([nil nil ((5313 . 5315)) nil (25556 55681 400962 739000) 0 nil])
([nil nil ((5315 . 5316) (nil syntax-table nil 5316 . 5317) (nil syntax-table (1) 5314 . 5315) (5314 . 5315)) nil (25556 55681 400961 884000) 0 nil])
([nil nil ((5315 . 5325)) nil (25556 55681 400960 726000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5324) (undo-tree-id1007 . -1) 5325) nil (25556 55681 400959 777000) 0 nil])
([nil nil ((5324 . 5325)) nil (25556 55681 400957 985000) 0 nil])
([nil nil ((5327 . 5329) (nil syntax-table nil 5329 . 5330) (nil syntax-table (1) 5314 . 5315) (5325 . 5327)) nil (25556 55681 400957 140000) 0 nil])
([nil nil ((5330 . 5331)) nil (25556 55681 400955 935000) 0 nil])
([nil nil ((5331 . 5333)) nil (25556 55681 400955 114000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -5332) (undo-tree-id1006 . -1) 5333) nil (25556 55681 400953 804000) 0 nil])
([nil nil ((5332 . 5333)) nil (25556 55681 400945 167000) 0 nil])
([nil nil ((5333 . 5337)) nil (25556 55681 400943 736000) 0 nil])
([nil nil ((5338 . 5339)) nil (25556 55681 400938 965000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -2476) (undo-tree-id1010 . -1) 2477 (t 25556 55681 440668 639000)) nil (25556 55731 616043 651000) 0 nil])
([nil nil ((2476 . 2477)) nil (25556 55731 616020 496000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -2476) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) 2477 (t 25556 55731 668935 960000)) nil (25556 55747 949911 896000) 0 nil])
([nil nil ((2476 . 2477)) nil (25556 55747 949899 356000) 0 nil])
([nil nil ((2444 . 2458) (t 25556 55748 1024 564000)) nil (25556 55930 929152 277000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2457) (undo-tree-id1015 . -1) 2458) nil (25556 55930 929151 121000) 0 nil])
([nil nil ((2457 . 2459)) nil (25556 55930 929149 338000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2458) (undo-tree-id1014 . -1) 2459) nil (25556 55930 929147 982000) 0 nil])
([nil nil ((2458 . 2459)) nil (25556 55930 929138 959000) 0 nil])
([nil nil ((2459 . 2463)) nil (25556 55930 929137 523000) 0 nil])
([nil nil ((2463 . 2464)) nil (25556 55930 929132 685000) 0 nil])
([nil nil ((2464 . 2469) (t 25556 55930 978065 677000)) nil (25556 55931 633890 970000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2465) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) 2469) nil (25556 55931 633886 865000) 0 nil])
([nil nil ((2465 . 2469) 2469 (t 25556 55931 714070 20000)) nil (25556 55936 394052 641000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2465) (undo-tree-id1027 . -4) 2469 (t 25556 55931 714070 20000)) nil (25556 55936 394051 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2504) (undo-tree-id1021 . -1) (#("*" 0 1 (fontified t)) . -2505) (undo-tree-id1022 . -1) (#("h" 0 1 (fontified t)) . -2506) (undo-tree-id1023 . -1) (#("e" 0 1 (fontified t)) . -2507) (undo-tree-id1024 . -1) (#("a" 0 1 (fontified t)) . -2508) (undo-tree-id1025 . -1) (#("d" 0 1 (fontified t)) . -2509) (undo-tree-id1026 . -1) 2510) nil (25556 55936 394048 930000) 0 nil])
([nil nil ((2504 . 2505)) nil (25556 55936 394042 823000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -2504) (undo-tree-id1020 . -1) 2505) nil (25556 55936 394040 514000) 0 nil])
([nil nil ((2504 . 2509)) nil (25556 55936 394028 824000) 0 nil])
([nil nil ((2463 . 2465) (t 25556 55936 438097 939000)) nil (25556 55956 649561 417000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -2499) (undo-tree-id1028 . -1) 2500 (t 25556 55956 698218 169000)) nil (25556 55970 51291 987000) 0 nil])
([nil nil ((2499 . 2500)) nil (25556 55970 51279 767000) 0 nil])
([nil nil ((2448 . 2450) (t 25556 55970 98298 133000)) nil (25556 56005 180319 771000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2448) (undo-tree-id1035 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2449) (undo-tree-id1036 . -1) 2450) nil (25556 56005 180318 736000) 0 nil])
([nil nil ((2448 . 2450)) nil (25556 56005 180316 344000) 0 nil])
([nil nil ((2450 . 2452)) nil (25556 56005 180315 647000) 0 nil])
([nil nil ((2451 . 2456)) nil (25556 56005 180315 7000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2455) (undo-tree-id1034 . -1) 2456) nil (25556 56005 180313 758000) 0 nil])
([nil nil ((2455 . 2461)) nil (25556 56005 180293 918000) 0 nil])
([nil nil ((#("char test=*head++;" 0 1 (ws-butler-chg delete fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 2462) (undo-tree-id1029 . -15) (undo-tree-id1030 . -15) (undo-tree-id1031 . -15) (undo-tree-id1032 . -4) (undo-tree-id1033 . -18)) nil (25556 56005 180290 324000) 0 nil])
([nil nil ((2455 . 2456) (t 25556 56005 226509 366000)) nil (25556 56026 654738 392000) 0 nil])
([nil nil ((2451 . 2453)) nil (25556 56026 654737 427000) 0 nil])
([nil nil ((2452 . 2455)) nil (25556 56026 654736 714000) 0 nil])
([nil nil ((2451 . 2452)) nil (25556 56026 654735 829000) 0 nil])
([nil nil ((2451 . 2452)) nil (25556 56026 654734 907000) 0 nil])
([nil nil ((2465 . 2467)) nil (25556 56026 654734 54000) 0 nil])
([nil nil ((2466 . 2469)) nil (25556 56026 654733 145000) 0 nil])
([nil nil ((2465 . 2466)) nil (25556 56026 654731 842000) 0 nil])
([nil nil ((2475 . 2476)) nil (25556 56026 654727 26000) 0 nil])
([nil nil ((2477 . 2479) (t 25556 56026 694639 556000)) nil (25556 56047 181611 710000) 0 nil])
([nil nil ((2478 . 2482)) nil (25556 56047 181610 762000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -2480) (undo-tree-id1043 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2481) (undo-tree-id1044 . -1) 2482) nil (25556 56047 181609 796000) 0 nil])
([nil nil ((2480 . 2485)) nil (25556 56047 181607 676000) 0 nil])
([nil nil ((2485 . 2486)) nil (25556 56047 181607 91000) 0 nil])
([nil nil ((2486 . 2487)) nil (25556 56047 181606 474000) 0 nil])
([nil nil ((2487 . 2488)) nil (25556 56047 181605 732000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg)) . -2486) (undo-tree-id1042 . -1) 2487) nil (25556 56047 181604 842000) 0 nil])
([nil nil ((2486 . 2489)) nil (25556 56047 181603 86000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -2486) (undo-tree-id1039 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2487) (undo-tree-id1040 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2488) (undo-tree-id1041 . -1) 2489) nil (25556 56047 181601 697000) 0 nil])
([nil nil ((2492 . 2493) (nil syntax-table nil 2494 . 2495) (nil syntax-table (1) 2486 . 2487) (2491 . 2492) (nil syntax-table nil 2493 . 2494) (nil syntax-table (1) 2486 . 2487) (2490 . 2491) (nil syntax-table nil 2492 . 2493) (nil syntax-table (1) 2486 . 2487) (2489 . 2490) (nil syntax-table nil 2491 . 2492) (nil syntax-table (1) 2486 . 2487) (2488 . 2489) (nil syntax-table nil 2490 . 2491) (nil syntax-table (1) 2486 . 2487) (2487 . 2488) (nil syntax-table nil 2489 . 2490) (nil syntax-table (1) 2486 . 2487) (2486 . 2487)) nil (25556 56047 181597 561000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2491) (undo-tree-id1037 . -1) (nil syntax-table nil 2494 . 2495) (nil syntax-table (1) 2486 . 2487) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2492) (undo-tree-id1038 . -1) 2493) nil (25556 56047 181592 375000) 0 nil])
([nil nil ((2491 . 2492) (nil syntax-table nil 2493 . 2494) (nil syntax-table (1) 2486 . 2487)) nil (25556 56047 181582 461000) 0 nil])
([nil nil ((2493 . 2495) (nil syntax-table nil 2496 . 2497) (nil syntax-table (1) 2486 . 2487) (2491 . 2493)) nil (25556 56047 181581 80000) 0 nil])
([nil nil ((2497 . 2498)) nil (25556 56047 181579 261000) 0 nil])
([nil nil ((2498 . 2499)) nil (25556 56047 181574 603000) 0 nil])
([nil nil ((#("    if( ((int)head)==((int)test)){ printf(\"fail \\n \"); }
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t face font-lock-type-face) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t)) . 2444) (undo-tree-id1045 . -33) (undo-tree-id1046 . -33) (undo-tree-id1047 . -33) (undo-tree-id1048 . -57) (undo-tree-id1049 . -4) (undo-tree-id1050 . -33) (undo-tree-id1051 . -33) (undo-tree-id1052 . -55) (undo-tree-id1053 . -55) (undo-tree-id1054 . -55) (undo-tree-id1055 . -57) (undo-tree-id1056 . -57) (undo-tree-id1057 . -57) (undo-tree-id1058 . -57) (undo-tree-id1059 . -57) (undo-tree-id1060 . -57) (undo-tree-id1061 . -57) (t 25556 56047 230764 826000)) nil (25556 56072 883835 605000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2500 . 2501) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (2444 . 2501) (t 25556 56072 922922 523000)) nil (25556 56077 187185 131000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("d" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("a" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("h" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#(")" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("i" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2451) (#("(" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#("(" 0 1 (fontified t ws-butler-chg delete)) . 2451) (#(" " 0 1 (fontified t)) . 2451) (t 25556 56077 222949 19000)) nil (25556 56086 565959 804000) 0 nil])
([nil nil ((2451 . 2454)) nil (25556 56086 565957 224000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t ws-butler-chg chg)) . -2451) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2452) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2453) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) 2454) nil (25556 56086 565955 635000) 0 nil])
([nil nil ((2451 . 2453)) nil (25556 56086 565943 69000) 0 nil])
([nil nil ((2453 . 2455)) nil (25556 56086 565942 161000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 2457) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 2457) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 2457) (#("i" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2457) (#("(" 0 1 (fontified t ws-butler-chg delete)) . 2457) (#("(" 0 1 (fontified t)) . 2457)) nil (25556 56086 565940 43000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2461)) nil (25556 56086 565934 207000) 0 nil])
([nil nil ((2445 . 2449) (#("  " 0 1 (fontified nil ws-butler-chg delete) 1 2 (fontified nil)) . 2445) (2444 . 2445) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 2444) (undo-tree-id1070 . -2) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) 2446 (t 25556 56086 607006 941000)) nil (25556 56101 475147 636000) 0 nil])
([nil nil ((2444 . 2454)) nil (25556 56101 475136 353000) 0 nil])
([nil nil ((2454 . 2455)) nil (25556 56101 475131 791000) 0 nil])
([nil nil ((1815 . 1816) (t 25556 56101 519099 248000)) nil (25556 56113 344363 177000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1816) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1817) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1818) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1819) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1820) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1821) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1822) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) 1823 (t 25556 56113 387172 952000)) nil (25556 56185 353785 705000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2465) (undo-tree-id1126 . -1) 2466 (t 25556 56185 407624 416000)) nil (25556 56202 477537 510000) 0 nil])
([nil nil ((2465 . 2466)) nil (25556 56202 477526 966000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2533) (undo-tree-id1129 . -1) 2534 (t 25556 56202 527732 723000)) nil (25556 56214 981039 549000) 0 nil])
([nil nil ((2533 . 2534)) nil (25556 56214 981037 343000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t ws-butler-chg chg)) . -2533) (undo-tree-id1128 . -1) 2534) nil (25556 56214 981036 146000) 0 nil])
([nil nil ((2533 . 2535)) nil (25556 56214 981033 327000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg delete)) . -2535) (undo-tree-id1127 . -1) 2536) nil (25556 56214 981029 39000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2531) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (#("t" 0 1 (fontified t)) . -2532) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (#("e" 0 1 (fontified t)) . -2533) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("x" 0 1 (fontified t)) . -2534) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (#("t" 0 1 (fontified t)) . -2535) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) 2536 (t 25556 56215 27812 28000)) nil (25556 56241 119529 908000) 0 nil])
([nil nil ((2531 . 2536)) nil (25556 56241 119507 202000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -2524) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) 2525 (t 25556 56241 163978 425000)) nil (25556 56252 867218 819000) 0 nil])
([nil nil ((2524 . 2525)) nil (25556 56252 867203 711000) 0 nil])
([nil nil ((2532 . 2533) (t 25556 56252 931761 52000)) nil (25556 56260 494223 505000) 0 nil])
([nil nil ((#(" head++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 2441) (undo-tree-id1162 . -8) (undo-tree-id1163 . -8) (t 25556 56260 547441 64000)) nil (25556 56271 728511 954000) 0 nil])
([nil nil ((#("   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2438) (undo-tree-id1150 . -3) (undo-tree-id1151 . -3) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) 2441) nil (25556 56271 728506 363000) 0 nil])
([nil nil ((2438 . 2441) 2441 (t 25556 56271 786977 712000)) nil (25556 56276 541919 743000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t face font-lock-string-face)) . 1815) (t 25556 56271 786977 712000)) nil (25556 56276 541918 237000) 0 nil])
([nil nil ((1815 . 1827)) nil (25556 56276 541916 471000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg)) . 2449) 1827) nil (25556 56276 541911 137000) 0 nil])
([nil nil ((2399 . 2400) (t 25556 56276 590782 870000)) nil (25556 56418 176895 557000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2399) (undo-tree-id1164 . -1) 2400) nil (25556 56418 176891 746000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-string-face)) . -2478) (undo-tree-id1180 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -2479) (undo-tree-id1181 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2480) (undo-tree-id1182 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -2481) (undo-tree-id1183 . -1) 2482 (t 25556 56418 229814 569000)) nil (25556 56579 436617 609000) 0 nil])
([nil nil ((2478 . 2484)) nil (25556 56579 436612 295000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2483) (undo-tree-id1179 . -1) 2484) nil (25556 56579 436611 567000) 0 nil])
([nil nil ((2483 . 2484)) nil (25556 56579 436610 260000) 0 nil])
([nil nil ((2479 . 2482)) nil (25556 56579 436609 641000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2479) (undo-tree-id1176 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2480) (undo-tree-id1177 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2481) (undo-tree-id1178 . -1) 2482) nil (25556 56579 436608 435000) 0 nil])
([nil nil ((2479 . 2487)) nil (25556 56579 436605 313000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2488) (undo-tree-id1175 . -1) 2489) nil (25556 56579 436604 472000) 0 nil])
([nil nil ((2488 . 2489)) nil (25556 56579 436602 951000) 0 nil])
([nil nil ((2490 . 2496)) nil (25556 56579 436602 339000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2492) (undo-tree-id1171 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2493) (undo-tree-id1172 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2494) (undo-tree-id1173 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2495) (undo-tree-id1174 . -1) 2496) nil (25556 56579 436601 107000) 0 nil])
([nil nil ((2492 . 2499)) nil (25556 56579 436597 153000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2500) (undo-tree-id1170 . -1) 2501) nil (25556 56579 436596 231000) 0 nil])
([nil nil ((2500 . 2501)) nil (25556 56579 436594 837000) 0 nil])
([nil nil ((2506 . 2507)) nil (25556 56579 436594 229000) 0 nil])
([nil nil ((2507 . 2508)) nil (25556 56579 436593 614000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2507) (undo-tree-id1169 . -1) 2508) nil (25556 56579 436592 839000) 0 nil])
([nil nil ((2507 . 2511)) nil (25556 56579 436591 241000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -2507) (undo-tree-id1165 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2508) (undo-tree-id1166 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2509) (undo-tree-id1167 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2510) (undo-tree-id1168 . -1) 2511) nil (25556 56579 436589 501000) 0 nil])
([nil nil ((2507 . 2511)) nil (25556 56579 436578 836000) 0 nil])
([nil nil ((2511 . 2512)) nil (25556 56579 436577 511000) 0 nil])
([nil nil ((2512 . 2516)) nil (25556 56579 436573 66000) 0 nil])
([nil nil ((#("printf(\" text at %p  head at %p \\n \",text,head)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t)) . 2470) (undo-tree-id1184 . -47) (undo-tree-id1185 . -46) (undo-tree-id1186 . -46) (undo-tree-id1187 . -47) (undo-tree-id1188 . -46) (undo-tree-id1189 . -47) (undo-tree-id1190 . -47) 2517 (t 25556 56579 481662 663000)) nil (25556 56626 964074 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2516 . 2517) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (nil fontified nil 2512 . 2513) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (2470 . 2517)) nil (25556 56626 964056 927000) 0 nil])
([nil nil ((2406 . 2409) (t 25556 56627 8681 362000)) nil (25556 56630 351834 361000) 0 nil])
([nil nil ((2409 . 2410)) nil (25556 56630 351833 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2409) (undo-tree-id1191 . -1) 2410) nil (25556 56630 351831 485000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2455 . 2456) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2435 . 2436) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2420 . 2421) (nil fontified nil 2419 . 2420) (nil fontified nil 2418 . 2419) (nil fontified nil 2417 . 2418) (nil fontified nil 2416 . 2417) (nil fontified nil 2415 . 2416) (nil fontified nil 2414 . 2415) (nil fontified nil 2413 . 2414) (nil fontified nil 2412 . 2413) (nil fontified nil 2411 . 2412) (nil fontified nil 2410 . 2411) (nil fontified nil 2409 . 2410) (2409 . 2456)) nil (25556 56630 351817 466000) 0 nil])
([nil nil ((2456 . 2457) (t 25556 56630 392615 151000)) nil (25556 56631 600041 69000) 0 nil])
([nil nil ((2457 . 2460) (t 25556 56631 640590 850000)) nil (25556 56632 242369 883000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2458) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) 2460) nil (25556 56632 242365 325000) 0 nil])
([nil nil ((2458 . 2460) 2460 (t 25556 56632 292578 176000)) nil (25556 56671 475053 242000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2458) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) 2460 (t 25556 56632 292578 176000)) nil (25556 56671 475051 4000) 0 nil])
([nil nil ((2394 . 2395)) nil (25556 56671 475036 429000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2394) (undo-tree-id1200 . -1) 2395 (t 25556 56671 523846 859000)) nil (25556 56680 97025 175000) 0 nil])
([nil nil ((2501 . 2509) (t 25556 56680 151693 973000)) nil (25556 56734 20543 998000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t ws-butler-chg chg)) . -2505) (undo-tree-id1201 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2506) (undo-tree-id1202 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2507) (undo-tree-id1203 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2508) (undo-tree-id1204 . -1) 2509) nil (25556 56734 20541 856000) 0 nil])
([nil nil ((2505 . 2511)) nil (25556 56734 20528 568000) 0 nil])
([nil nil ((2511 . 2512)) nil (25556 56734 20524 160000) 0 nil])
([nil nil ((2512 . 2517) (t 25556 56734 74799 266000)) nil (25556 56813 233610 890000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2513) (undo-tree-id1206 . -4) 2517) nil (25556 56813 233609 11000) 0 nil])
([nil nil ((2501 . 2506) (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2501) (undo-tree-id1205 . -4) 2505) nil (25556 56813 233603 718000) 0 nil])
([nil nil ((#("head++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 2506) (undo-tree-id1207 . -7) (undo-tree-id1208 . -7) (undo-tree-id1209 . -7) (undo-tree-id1210 . -7) (undo-tree-id1211 . -7) (undo-tree-id1212 . -7) (t 25556 56813 285658 517000)) nil (25556 56815 99408 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2512 . 2513) (nil fontified nil 2512 . 2513) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (2506 . 2513)) nil (25556 56815 99381 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2519 . 2520) (nil fontified nil 2519 . 2520) (nil fontified nil 2518 . 2519) (nil fontified nil 2517 . 2518) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (2513 . 2520) (t 25556 56815 137634 106000)) nil (25556 56815 826170 492000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2526 . 2527) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2520 . 2521) (2520 . 2527) (t 25556 56815 873624 432000)) nil (25556 56816 488165 303000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1815) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1816) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1817) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1818) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1819) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1820) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1821) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1822) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1823) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1824) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1825) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1826) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) 1827 (t 25556 56816 557615 458000)) nil (25556 56824 625221 164000) 0 nil])
([nil nil ((#("head++;head++;head++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (rear-nonsticky t fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (rear-nonsticky t fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (rear-nonsticky t fontified t)) . 2494) (undo-tree-id1399 . -14) (undo-tree-id1400 . -7) (undo-tree-id1401 . -21) (t 25556 56824 673509 951000)) nil (25556 56846 264658 430000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2490) (undo-tree-id1385 . -4) (undo-tree-id1386 . -4) (undo-tree-id1387 . -4) (undo-tree-id1388 . -4) (undo-tree-id1389 . -4) (undo-tree-id1390 . -4) (undo-tree-id1391 . -4) (undo-tree-id1392 . -4) (undo-tree-id1393 . -4) (undo-tree-id1394 . -4) (undo-tree-id1395 . -4) (undo-tree-id1396 . -4) (undo-tree-id1397 . -4) (undo-tree-id1398 . -4) 2494) nil (25556 56846 264651 583000) 0 nil])
([nil nil ((2490 . 2494) 2494 (t 25556 56846 317237 522000)) nil (25556 56858 422212 739000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2489) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2490) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2491) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2492) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2493) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) 2494 (t 25556 56846 317237 522000)) nil (25556 56858 422206 730000) 0 nil])
([nil nil ((5496 . 5497) (t 25556 56858 465090 157000)) nil (25556 56874 290208 22000) 0 nil])
([nil nil ((1815 . 1821) (t 25556 56874 340903 382000)) nil (25556 56901 409809 781000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5502) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) 5503 (t 25556 56901 456599 61000)) nil (25556 57001 225703 254000) 0 nil])
([nil nil ((5450 . 5451) (t 25556 57001 275624 536000)) nil (25556 57023 89995 877000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5450) (undo-tree-id1441 . -1) 5451) nil (25556 57023 89994 932000) 0 nil])
([nil nil ((5450 . 5460)) nil (25556 57023 89993 245000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5459) (undo-tree-id1440 . -1) 5460) nil (25556 57023 89992 437000) 0 nil])
([nil nil ((5459 . 5461)) nil (25556 57023 89990 640000) 0 nil])
([nil nil ((5472 . 5474)) nil (25556 57023 89990 24000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -5473) (undo-tree-id1439 . -1) 5474) nil (25556 57023 89988 683000) 0 nil])
([nil nil ((5473 . 5474)) nil (25556 57023 89980 397000) 0 nil])
([nil nil ((5474 . 5478)) nil (25556 57023 89979 103000) 0 nil])
([nil nil ((5474 . 5475)) nil (25556 57023 89974 644000) 0 nil])
([nil nil ((1402 . 1403) (t 25556 57023 135438 876000)) nil (25556 57087 999326 312000) 0 nil])
([nil nil ((5332 . 5333) (t 25556 57088 38939 646000)) nil (25556 57094 700704 186000) 0 nil])
([nil nil ((5377 . 5378) (t 25556 57094 750892 195000)) nil (25556 57101 326131 649000) 0 nil])
([nil nil ((5389 . 5390) (t 25556 57101 374846 100000)) nil (25556 57121 566267 938000) 0 nil])
([nil nil ((5404 . 5405)) nil (25556 57121 566266 959000) 0 nil])
([nil nil ((5417 . 5418)) nil (25556 57121 566265 622000) 0 nil])
([nil nil ((5526 . 5527)) nil (25556 57121 566261 442000) 0 nil])
([nil nil ((5494 . 5495) (t 25556 57121 606709 678000)) nil (25556 57124 121122 259000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5527) (undo-tree-id1442 . -1) 5528 (t 25556 57124 174692 825000)) nil (25556 57135 427415 196000) 0 nil])
([nil nil ((5527 . 5528) (t 25556 57135 466619 941000)) nil (25556 57141 631551 675000) 0 nil])
([nil nil ((2389 . 2390) (t 25556 57141 674580 698000)) nil (25556 57158 164112 291000) 0 nil])
([nil nil ((2396 . 2397)) nil (25556 57158 164107 814000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2389) (undo-tree-id1443 . -1) 2390 (t 25556 57158 210478 975000)) nil (25556 57163 507051 886000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2395) (undo-tree-id1444 . -1) 2396 (t 25556 57163 578446 817000)) nil (25556 57165 92512 589000) 0 nil])
([nil nil ((2489 . 2490) (t 25556 57165 138437 551000)) nil (25556 57174 165957 815000) 0 nil])
([nil nil ((5474 . 5475) (t 25556 57174 210384 354000)) nil (25556 57200 519883 45000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -5474) (undo-tree-id1445 . -1) 5475) nil (25556 57200 519881 238000) 0 nil])
([nil nil ((5474 . 5475)) nil (25556 57200 519872 252000) 0 nil])
([nil nil ((5483 . 5484)) nil (25556 57200 519868 33000) 0 nil])
([nil nil ((5364 . 5368) (t 25556 57200 566236 325000)) nil (25556 57281 321272 452000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5367) (undo-tree-id1456 . -1) 5368) nil (25556 57281 321271 531000) 0 nil])
([nil nil ((5367 . 5369)) nil (25556 57281 321270 17000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5368) (undo-tree-id1455 . -1) 5369) nil (25556 57281 321269 128000) 0 nil])
([nil nil ((5368 . 5369)) nil (25556 57281 321267 521000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -5365) (undo-tree-id1451 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5366) (undo-tree-id1452 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5367) (undo-tree-id1453 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5368) (undo-tree-id1454 . -1) 5369) nil (25556 57281 321266 273000) 0 nil])
([nil nil ((5365 . 5371)) nil (25556 57281 321260 739000) 0 nil])
([nil nil ((#("Ü" 0 1 (fontified t ws-butler-chg chg)) . -5369) (undo-tree-id1449 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5370) (undo-tree-id1450 . -1) 5371) nil (25556 57281 321259 773000) 0 nil])
([nil nil ((5369 . 5370)) nil (25556 57310 906060 687000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -5365) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (#("h" 0 1 (fontified t)) . -5366) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (#("a" 0 1 (fontified t)) . -5367) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#("r" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5368) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (#("*" 0 1 (fontified t)) . -5369) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) 5370) nil (25556 57316 310116 470000) 0 nil] [nil nil ((5370 . 5374)) ((#(" pts" 0 1 (fontified t) 1 2 (fontified t face font-lock-function-name-face) 2 3 (fontified t face font-lock-function-name-face) 3 4 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . 5370) (undo-tree-id1539 . -4) (undo-tree-id1540 . -4) (undo-tree-id1541 . -3) (undo-tree-id1542 . -4)) (25556 57310 524002 821000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5364) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) 5365) nil (25556 57316 310077 517000) 0 nil])
([nil nil ((5374 . 5375)) ((#("=" 0 1 (fontified t ws-butler-chg chg)) . 5374) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1)) (25556 57310 366842 797000) 0 nil])
([nil nil ((5364 . 5365) 5365 (t 25556 57316 357690 348000)) nil (25556 57317 531520 609000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5373) (undo-tree-id1447 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -5374) (undo-tree-id1448 . -1) 5375) ((5373 . 5375)) (25556 57310 146299 35000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5363) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5364) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) 5365 (t 25556 57316 357690 348000)) nil (25556 57317 531515 329000) 0 nil])
([nil nil ((5373 . 5375)) ((#("r=" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t)) . 5373) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2)) (25556 57309 817907 602000) 0 nil])
([nil nil ((5363 . 5365) (t 25556 57317 577685 420000)) nil (25556 57318 839515 350000) 0 nil])
([nil nil ((5375 . 5376)) ((#("*" 0 1 (fontified t)) . 5375) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1)) (25556 57309 664081 202000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5364) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) 5365) nil (25556 57318 839510 863000) 0 nil])
([nil nil ((5376 . 5377)) ((#("r" 0 1 (fontified t ws-butler-chg chg)) . 5376) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1)) (25556 57309 490062 351000) 0 nil])
([nil nil ((5364 . 5365) 5365 (t 25556 57318 885680 152000)) nil (25556 57357 595623 484000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -5376) (undo-tree-id1446 . -1) 5377) ((5376 . 5377)) (25556 57309 90207 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5364) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) 5365 (t 25556 57318 885680 152000)) nil (25556 57357 595621 680000) 0 nil])
([nil nil ((5376 . 5380)) ((#("head" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 5376) (undo-tree-id1521 . -4) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4)) (25556 57308 935556 502000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2489) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) 2490) nil (25556 57357 595615 939000) 0 nil])
([nil nil ((5380 . 5381)) ((#(";" 0 1 (fontified t)) . 5380)) (25556 57308 766544 753000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1401) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) 1402 (t 25556 57357 645532 169000)) nil (25556 57364 392029 744000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5394) (undo-tree-id1458 . -1) (undo-tree-id1460 . -1) (#("*" 0 1 (fontified t)) . -5395) (undo-tree-id1462 . -1) (undo-tree-id1464 . -1) (#("h" 0 1 (fontified t)) . -5396) (undo-tree-id1466 . -1) (#("e" 0 1 (fontified t)) . -5397) (undo-tree-id1468 . -1) (#("a" 0 1 (fontified t)) . -5398) (undo-tree-id1470 . -1) (#("d" 0 1 (fontified t)) . -5399) (undo-tree-id1472 . -1) 5400 (t 25556 57281 369838 615000)) ((5394 . 5400)) (25556 57308 598436 451000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5330) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) 5331 (t 25556 57364 425507 841000)) nil (25556 57368 110060 722000) 0 nil])
([nil nil ((5394 . 5395)) ((#("*" 0 1 (fontified t)) . 5394) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1)) (25556 57307 854838 574000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5375) (undo-tree-id1663 . -1) 5376 (t 25556 57368 153494 653000)) nil (25556 57378 262164 779000) 0 nil])
([nil nil ((5395 . 5398)) ((#("ptr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 5395) (undo-tree-id1517 . -3)) (25556 57307 719729 640000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 5386) (t 25556 57378 305459 421000)) nil (25556 57385 720178 463000) 0 nil])
([nil nil ((#("*ptr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 5394) (undo-tree-id1473 . -4) (undo-tree-id1475 . -4) (undo-tree-id1477 . -4) (undo-tree-id1479 . -4) (t 25556 57291 413794 656000)) ((5394 . 5398)) (25556 57307 574333 841000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 5400)) nil (25556 57385 720177 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5397 . 5398) (nil fontified nil 5397 . 5398) (nil fontified nil 5396 . 5397) (nil fontified nil 5395 . 5396) (nil fontified nil 5394 . 5395) (5394 . 5398)) ((#("*ptr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 5394) (undo-tree-id1516 . -4) (nil rear-nonsticky t 5397 . 5398)) (25556 57307 448919 91000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 5412)) nil (25556 57385 720175 806000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5406) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1484 . -1) (undo-tree-id1486 . -1) (#("h" 0 1 (fontified t)) . -5407) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1491 . -1) (#("e" 0 1 (fontified t)) . -5408) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1497 . -1) (#("a" 0 1 (fontified t)) . -5409) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (#("d" 0 1 (fontified t)) . -5410) (undo-tree-id1502 . -1) 5411 (t 25556 57293 197786 968000)) ((5406 . 5411)) (25556 57307 297407 16000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 5467)) nil (25556 57385 720164 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5409 . 5410) (nil fontified nil 5409 . 5410) (nil fontified nil 5408 . 5409) (nil fontified nil 5407 . 5408) (nil fontified nil 5406 . 5407) (5406 . 5410)) ((#("*ptr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 5406) (undo-tree-id1515 . -4) (nil rear-nonsticky t 5409 . 5410)) (25556 57307 163271 60000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 5489) (t 25556 57385 757434 183000)) nil (25556 57388 284004 582000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5405) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1507 . -1) (undo-tree-id1509 . -1) 5406 (t 25556 57296 133774 393000)) ((5405 . 5406)) (25556 57307 48443 603000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5521) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) 5522 (t 25556 57388 333425 583000)) nil (25556 57417 321667 551000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg delete)) . 5418) (#("a" 0 1 (fontified t ws-butler-chg delete)) . 5418) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 5418) (#("h" 0 1 (fontified t ws-butler-chg delete)) . 5418) (#("*" 0 1 (fontified t ws-butler-chg delete)) . 5418) (#("*" 0 1 (fontified t)) . 5418) (t 25556 57297 909766 833000)) ((nil ws-butler-chg delete 5419 . 5420) (5418 . 5419) (nil ws-butler-chg delete 5419 . 5420) (5418 . 5419) (nil ws-butler-chg delete 5419 . 5420) (5418 . 5419) (nil ws-butler-chg delete 5419 . 5420) (5418 . 5419) (nil ws-butler-chg delete 5419 . 5420) (5418 . 5419) (5418 . 5419)) (25556 57306 897254 284000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5475) (undo-tree-id1672 . -1) 5476 (t 25556 57417 373332 795000)) nil (25556 57433 462916 242000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5421 . 5422) (nil fontified nil 5421 . 5422) (nil fontified nil 5420 . 5421) (nil fontified nil 5419 . 5420) (nil fontified nil 5418 . 5419) (5418 . 5422)) ((#("*ptr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 5418) (undo-tree-id1514 . -4) (nil rear-nonsticky t 5421 . 5422)) (25556 57306 781243 201000) 0 nil])
([nil nil ((5331 . 5332) (t 25556 57433 505284 475000)) nil (25556 57506 331806 192000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg delete)) . 5429) (#("a" 0 1 (fontified t ws-butler-chg delete)) . 5429) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 5429) (#("h" 0 1 (fontified t ws-butler-chg delete)) . 5429) (#("*" 0 1 (fontified t ws-butler-chg delete)) . 5429) (#("*" 0 1 (fontified t)) . 5429) (t 25556 57301 509751 614000)) ((nil ws-butler-chg delete 5430 . 5431) (5429 . 5430) (nil ws-butler-chg delete 5430 . 5431) (5429 . 5430) (nil ws-butler-chg delete 5430 . 5431) (5429 . 5430) (nil ws-butler-chg delete 5430 . 5431) (5429 . 5430) (nil ws-butler-chg delete 5430 . 5431) (5429 . 5430) (5429 . 5430)) (25556 57306 631187 592000) 0 nil])
([nil nil ((1402 . 1403) (t 25556 57506 373092 822000)) nil (25556 57513 561127 804000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5432 . 5433) (nil fontified nil 5432 . 5433) (nil fontified nil 5431 . 5432) (nil fontified nil 5430 . 5431) (nil fontified nil 5429 . 5430) (5429 . 5433)) ((#("*ptr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 5429) (undo-tree-id1511 . -4) (undo-tree-id1512 . -4) (undo-tree-id1513 . -4) (nil rear-nonsticky t 5432 . 5433) (t 25556 57304 441739 325000)) (25556 57304 401287 541000) 0 nil])
([nil nil ((5363 . 5365) (t 25556 57513 617076 10000)) nil (25556 57539 332945 667000) 0 nil])
nil
([nil nil ((5364 . 5366) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 5364) (undo-tree-id1678 . -1) 5365) nil (25556 57539 332944 630000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5364) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5365) (undo-tree-id1677 . -1) 5366) nil (25556 57539 332942 386000) 0 nil])
([nil nil ((5364 . 5365)) nil (25556 57539 332937 691000) 0 nil])
([nil nil ((5524 . 5525)) nil (25556 57539 332936 526000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5364) (undo-tree-id1673 . -1) 5525) nil (25556 57539 332932 867000) 0 nil])
([nil nil ((5377 . 5379) (t 25556 57539 373019 286000)) nil (25556 57565 611627 149000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -5378) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) 5379) nil (25556 57565 611626 36000) 0 nil])
([nil nil ((5383 . 5384)) nil (25556 57565 611623 951000) 0 nil])
([nil nil ((5377 . 5378)) nil (25556 57565 611623 268000) 0 nil])
([nil nil ((5377 . 5378)) nil (25556 57565 611622 590000) 0 nil])
([nil nil ((#("*(*head)" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg delete) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t ws-butler-chg chg)) . 5378) (undo-tree-id1702 . -8) (undo-tree-id1703 . -4) (undo-tree-id1704 . -8) (undo-tree-id1705 . -8) (undo-tree-id1706 . -8) (undo-tree-id1707 . -8)) nil (25556 57565 611621 91000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5385 . 5386) (nil fontified nil 5385 . 5386) (nil fontified nil 5384 . 5385) (nil fontified nil 5383 . 5384) (nil fontified nil 5382 . 5383) (nil fontified nil 5381 . 5382) (nil fontified nil 5380 . 5381) (nil fontified nil 5379 . 5380) (nil fontified nil 5378 . 5379) (5378 . 5386)) nil (25556 57565 611585 224000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5393) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (#("h" 0 1 (fontified t)) . -5394) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (#("e" 0 1 (fontified t)) . -5395) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (#("a" 0 1 (fontified t)) . -5396) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (#("d" 0 1 (fontified t)) . -5397) (undo-tree-id1701 . -1) 5398) nil (25556 57565 611580 958000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5400 . 5401) (nil fontified nil 5400 . 5401) (nil fontified nil 5399 . 5400) (nil fontified nil 5398 . 5399) (nil fontified nil 5397 . 5398) (nil fontified nil 5396 . 5397) (nil fontified nil 5395 . 5396) (nil fontified nil 5394 . 5395) (nil fontified nil 5393 . 5394) (5393 . 5401)) nil (25556 57565 611553 236000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5410) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (#("h" 0 1 (fontified t)) . -5411) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (#("e" 0 1 (fontified t)) . -5412) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#("a" 0 1 (fontified t)) . -5413) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (#("d" 0 1 (fontified t)) . -5414) (undo-tree-id1722 . -1) 5415 (t 25556 57565 656966 134000)) nil (25556 57569 190854 393000) 0 nil])
([nil nil ((5410 . 5411)) nil (25556 57569 190837 490000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5418 . 5419) (nil fontified nil 5418 . 5419) (nil fontified nil 5417 . 5418) (nil fontified nil 5416 . 5417) (nil fontified nil 5415 . 5416) (nil fontified nil 5414 . 5415) (nil fontified nil 5413 . 5414) (nil fontified nil 5412 . 5413) (nil fontified nil 5411 . 5412) (5411 . 5419)) nil (25556 57569 190832 337000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5426) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (#("h" 0 1 (fontified t)) . -5427) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (#("e" 0 1 (fontified t)) . -5428) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (#("a" 0 1 (fontified t)) . -5429) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (#("d" 0 1 (fontified t)) . -5430) (undo-tree-id1745 . -1) 5431 (t 25556 57569 248959 225000)) nil (25556 57576 5779 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5433 . 5434) (nil fontified nil 5433 . 5434) (nil fontified nil 5432 . 5433) (nil fontified nil 5431 . 5432) (nil fontified nil 5430 . 5431) (nil fontified nil 5429 . 5430) (nil fontified nil 5428 . 5429) (nil fontified nil 5427 . 5428) (nil fontified nil 5426 . 5427) (5426 . 5434)) nil (25556 57576 5752 268000) 0 nil])
([nil nil ((5448 . 5450) (t 25556 57576 52946 372000)) nil (25556 57589 909189 288000) 0 nil])
([nil nil ((5507 . 5508)) nil (25556 57589 909184 222000) 0 nil])
([nil nil ((2489 . 2490) (t 25556 57589 956921 32000)) nil (25556 57629 688429 988000) 0 nil])
([nil nil ((2395 . 2396) (t 25556 57629 736855 107000)) nil (25556 57663 347948 94000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2395) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) 2396 (t 25556 57663 392806 525000)) nil (25556 57668 864613 817000) 0 nil])
([nil nil ((#("printf(\" text at %p  head at %p \\n \",text,head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (rear-nonsticky t fontified t) 47 48 (fontified t)) . 2404) (undo-tree-id1767 . -20) (undo-tree-id1768 . -48) (t 25556 57668 912799 157000)) nil (25556 57700 430270 279000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 2402) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (undo-tree-id1754 . -2) (undo-tree-id1755 . -2) (undo-tree-id1756 . -2) (undo-tree-id1757 . -2) (undo-tree-id1758 . -2) (undo-tree-id1759 . -2) (undo-tree-id1760 . -2) (undo-tree-id1761 . -2) (undo-tree-id1762 . -2) (undo-tree-id1763 . -2) (undo-tree-id1764 . -2) (undo-tree-id1765 . -2) (undo-tree-id1766 . -2) 2404) nil (25556 57700 430262 838000) 0 nil])
([nil nil ((2402 . 2404) 2404 (t 25556 57700 476760 109000)) nil (25556 57703 719505 93000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2402) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2403) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) 2404 (t 25556 57700 476760 109000)) nil (25556 57703 719500 717000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2447) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (#("
" 0 1 (fontified t)) . -2448) (undo-tree-id1784 . -1) 2449 (t 25556 57703 760756 344000)) nil (25556 57707 528303 331000) 0 nil])
([nil nil ((2447 . 2448)) nil (25556 57707 528288 186000) 0 nil])
([nil nil ((2566 . 2571) (t 25556 57707 568752 42000)) nil (25556 57719 699870 682000) 0 nil])
([nil nil ((2567 . 2572) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2567) (undo-tree-id1789 . -4) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) 2571) nil (25556 57719 699868 954000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2568) (undo-tree-id1785 . -4) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) 2572) nil (25556 57719 699861 624000) 0 nil])
([nil nil ((2568 . 2572) 2572 (t 25556 57719 744738 767000)) nil (25556 57875 565822 512000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2568) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) 2572 (t 25556 57719 744738 767000)) nil (25556 57875 565821 230000) 0 nil])
([nil nil ((#("printf(\" Head At Positons %c \\n \", *head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t)) . 2524) (undo-tree-id1805 . -27) (undo-tree-id1806 . -27) (undo-tree-id1807 . -42) (undo-tree-id1808 . -11) (undo-tree-id1809 . -29) (undo-tree-id1810 . -34) (undo-tree-id1811 . -34) (undo-tree-id1812 . -6) (undo-tree-id1813 . -27) (undo-tree-id1814 . -35)) nil (25556 57875 565818 410000) 0 nil])
([nil nil ((2447 . 2451)) nil (25556 57875 565809 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2492 . 2493) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (2451 . 2493)) nil (25556 57875 565807 238000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2566) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -4) (undo-tree-id1796 . -4) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) 2493) nil (25556 57875 565796 427000) 0 nil])
([nil nil ((2493 . 2498) (t 25556 57875 612627 42000)) nil (25556 57877 2622 235000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2494) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) 2498) nil (25556 57877 2620 947000) 0 nil])
([nil nil ((2447 . 2452) (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2447) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) 2451) nil (25556 57877 2615 672000) 0 nil])
([nil nil ((2448 . 2453) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2448) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) 2452) nil (25556 57877 2607 439000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5334) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) 5335 (t 25556 57877 40626 463000)) nil (25556 57942 978504 980000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -5339) (undo-tree-id1829 . -1) 5340) nil (25556 57942 978495 796000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5347) (undo-tree-id1837 . -1) 5348 (t 25556 57943 24607 415000)) nil (25556 57944 813436 339000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -5352) (undo-tree-id1838 . -1) 5353 (t 25556 57944 856607 91000)) nil (25556 57948 76545 370000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5363) (undo-tree-id1839 . -1) 5364 (t 25556 57948 124606 537000)) nil (25556 57949 737747 419000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -5368) (undo-tree-id1840 . -1) 5369 (t 25556 57949 780606 269000)) nil (25556 57951 237946 249000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5376) (undo-tree-id1841 . -1) 5377 (t 25556 57951 292606 29000)) nil (25556 57953 40708 456000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -5381) (undo-tree-id1842 . -1) 5382 (t 25556 57953 84605 760000)) nil (25556 57954 783588 106000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5385) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) 5386 (t 25556 57954 828605 506000)) nil (25556 57957 618773 790000) 0 nil])
([nil nil ((5355 . 5356) (t 25556 57957 672605 106000)) nil (25556 57963 713304 873000) 0 nil])
([nil nil ((5390 . 5391) (t 25556 57963 764604 333000)) nil (25556 57997 798182 859000) 0 nil])
([nil nil ((5390 . 5391)) nil (25556 57997 798181 797000) 0 nil])
([nil nil ((5329 . 5330)) nil (25556 57997 798181 68000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5329) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) 5330) nil (25556 57997 798179 992000) 0 nil])
([nil nil ((5329 . 5330)) nil (25556 57997 798177 508000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5329) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) 5330) nil (25556 57997 798176 452000) 0 nil])
([nil nil ((5329 . 5330)) nil (25556 57997 798173 699000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5329) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) 5330) nil (25556 57997 798169 321000) 0 nil])
([nil nil ((5319 . 5320) (t 25556 57997 844602 62000)) nil (25556 58020 165444 411000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5319) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) 5320) nil (25556 58020 165439 932000) 0 nil])
([nil nil ((5319 . 5320) 5320 (t 25556 58020 212602 399000)) nil (25556 58051 751122 732000) 0 nil])
([nil nil ((2448 . 2452) (t 25556 58020 212602 399000)) nil (25556 58051 751121 691000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2492) (undo-tree-id1854 . -1) 2493) nil (25556 58051 751120 484000) 0 nil])
([nil nil ((2492 . 2493)) nil (25556 58051 751111 419000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg)) . 5319) (#("    " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . 2448) 2493) nil (25556 58051 751106 368000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -2480) (undo-tree-id1855 . -1) 2481 (t 25556 58051 804605 129000)) nil (25556 58054 478834 52000) 0 nil])
([nil nil ((2480 . 2481)) nil (25556 58054 478821 328000) 0 nil])
([nil nil ((#("printf(\" Head At Positons %p \\n \", &head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 2453) (undo-tree-id1856 . -28) (undo-tree-id1857 . -28) (undo-tree-id1858 . -42) (t 25556 58054 512605 485000)) nil (25556 58055 899311 276000) 0 nil])
([nil nil ((nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (2453 . 2495)) nil (25556 58055 899295 521000) 0 nil])
([nil nil ((2495 . 2500) (t 25556 58055 944605 681000)) nil (25556 58057 691561 978000) 0 nil])
([nil nil ((2500 . 2501)) nil (25556 58057 691560 997000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2500) (undo-tree-id1859 . -1) 2501) nil (25556 58057 691559 358000) 0 nil])
([nil nil ((nil fontified nil 2541 . 2542) (nil fontified nil 2540 . 2541) (nil fontified nil 2539 . 2540) (nil fontified nil 2538 . 2539) (nil fontified nil 2537 . 2538) (nil fontified nil 2536 . 2537) (nil fontified nil 2535 . 2536) (nil fontified nil 2534 . 2535) (nil fontified nil 2533 . 2534) (nil fontified nil 2532 . 2533) (nil fontified nil 2531 . 2532) (nil fontified nil 2530 . 2531) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2527 . 2528) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2520 . 2521) (nil fontified nil 2519 . 2520) (nil fontified nil 2518 . 2519) (nil fontified nil 2517 . 2518) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (nil fontified nil 2512 . 2513) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (2500 . 2542)) nil (25556 58057 691545 898000) 0 nil])
([nil nil ((2495 . 2500) (t 25556 58057 732605 929000)) nil (25556 58058 925224 601000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2496) (undo-tree-id1860 . -4) (undo-tree-id1861 . -4) (undo-tree-id1862 . -4) (undo-tree-id1863 . -4) 2500) nil (25556 58058 925220 104000) 0 nil])
([nil nil ((2496 . 2500) 2500 (t 25556 58058 980606 110000)) nil (25556 58073 562910 419000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2496) (undo-tree-id1865 . -4) 2500 (t 25556 58058 980606 110000)) nil (25556 58073 562909 88000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2536) (undo-tree-id1864 . -1) 2537) nil (25556 58073 562905 747000) 0 nil])
([nil nil ((2540 . 2542)) nil (25556 58073 562892 707000) 0 nil])
([nil nil ((2415 . 2420) (t 25556 58073 616608 506000)) nil (25556 58097 365609 124000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2416) (undo-tree-id1897 . -4) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (undo-tree-id1900 . -4) (undo-tree-id1901 . -4) 2420) nil (25556 58097 365607 739000) 0 nil])
([nil nil ((#("printf(\" Head At Positons %p \\n \", &head);

    printf(\" Head At Positons %p \\n \", head++);
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t face font-lock-string-face) 56 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-string-face) 62 63 (fontified t face font-lock-string-face) 63 64 (fontified t face font-lock-string-face) 64 65 (fontified t face font-lock-string-face) 65 66 (fontified t face font-lock-string-face) 66 67 (fontified t face font-lock-string-face) 67 68 (fontified t face font-lock-string-face) 68 69 (fontified t face font-lock-string-face) 69 70 (fontified t face font-lock-string-face) 70 71 (fontified t face font-lock-string-face) 71 72 (fontified t face font-lock-string-face) 72 73 (fontified t face font-lock-string-face) 73 74 (fontified t face font-lock-string-face) 74 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (rear-nonsticky t fontified t) 91 92 (fontified t)) . 2454) (undo-tree-id1888 . -92) (undo-tree-id1889 . -48) (undo-tree-id1890 . -89) (undo-tree-id1891 . -89) (undo-tree-id1892 . -89) (undo-tree-id1893 . -48) (undo-tree-id1894 . -92) (undo-tree-id1895 . -92) (undo-tree-id1896 . -92) 2546) nil (25556 58097 365603 576000) 0 nil])
([nil nil ((2416 . 2421)) nil (25556 58097 365597 106000) 0 nil])
([nil nil ((2417 . 2422) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2417) (undo-tree-id1885 . -4) (undo-tree-id1886 . -4) (undo-tree-id1887 . -4) 2421) nil (25556 58097 365596 35000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2418) (undo-tree-id1880 . -4) (undo-tree-id1881 . -4) (undo-tree-id1882 . -4) (undo-tree-id1883 . -4) (undo-tree-id1884 . -4) 2422) nil (25556 58097 365592 498000) 0 nil])
([nil nil ((2417 . 2421) (nil rear-nonsticky nil 2508 . 2509) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2461 . 2465) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2435 . 2436) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2420 . 2421) (nil fontified nil 2419 . 2420) (nil fontified nil 2418 . 2419) (nil fontified nil 2417 . 2418) (2417 . 2509)) nil (25556 58097 365584 214000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2548) (undo-tree-id1866 . -4) (undo-tree-id1867 . -4) (undo-tree-id1868 . -4) (undo-tree-id1869 . -4) (undo-tree-id1870 . -4) (undo-tree-id1871 . -4) (undo-tree-id1872 . -4) (undo-tree-id1873 . -4) (undo-tree-id1874 . -4) (undo-tree-id1875 . -4) (undo-tree-id1876 . -4) (undo-tree-id1877 . -4) (undo-tree-id1878 . -4) (undo-tree-id1879 . -4) 2513) nil (25556 58097 365566 762000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2545) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) 2546 (t 25556 58097 416613 523000)) nil (25556 58098 569659 82000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2513) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) 2514 (t 25556 58098 616613 810000)) nil (25556 58123 653479 155000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2544) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) 2545 (t 25556 58123 700620 583000)) nil (25556 58124 966335 541000) 0 nil])
([nil nil ((#(" if(head==text){ printf(\" text at %p  head at %p \\n \",text,head); }" 0 1 (fontified t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (rear-nonsticky t fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t)) . 2549) (undo-tree-id1934 . -66) (undo-tree-id1935 . -15) (undo-tree-id1936 . -17) (undo-tree-id1937 . -2) (undo-tree-id1938 . -67) (t 25556 58125 620 972000)) nil (25556 58132 895158 751000) 0 nil])
([nil nil ((2513 . 2518)) nil (25556 58132 895153 901000) 0 nil])
([nil nil ((2514 . 2518) (#("     " 0 4 (fontified nil ws-butler-chg chg) 4 5 (ws-butler-chg chg fontified nil)) . 2514) (undo-tree-id1929 . -4) (undo-tree-id1930 . -4) (undo-tree-id1931 . -4) (undo-tree-id1932 . -4) (undo-tree-id1933 . -4) (nil rear-nonsticky nil 2584 . 2585) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2582 . 2583) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2579 . 2580) (nil fontified nil 2578 . 2579) (nil fontified nil 2577 . 2578) (nil fontified nil 2576 . 2577) (nil fontified nil 2575 . 2576) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2572 . 2573) (nil fontified nil 2571 . 2572) (nil fontified nil 2570 . 2571) (nil fontified nil 2569 . 2570) (nil fontified nil 2568 . 2569) (nil fontified nil 2567 . 2568) (nil fontified nil 2566 . 2567) (nil fontified nil 2565 . 2566) (nil fontified nil 2564 . 2565) (nil fontified nil 2563 . 2564) (nil fontified nil 2562 . 2563) (nil fontified nil 2561 . 2562) (nil fontified nil 2560 . 2561) (nil fontified nil 2559 . 2560) (nil fontified nil 2558 . 2559) (nil fontified nil 2557 . 2558) (nil fontified nil 2556 . 2557) (nil fontified nil 2555 . 2556) (nil fontified nil 2554 . 2555) (nil fontified nil 2553 . 2554) (nil fontified nil 2552 . 2553) (nil fontified nil 2551 . 2552) (nil fontified nil 2550 . 2551) (nil fontified nil 2549 . 2550) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2546 . 2547) (nil fontified nil 2545 . 2546) (nil fontified nil 2544 . 2545) (nil fontified nil 2543 . 2544) (nil fontified nil 2542 . 2543) (nil fontified nil 2541 . 2542) (nil fontified nil 2540 . 2541) (nil fontified nil 2539 . 2540) (nil fontified nil 2538 . 2539) (nil fontified nil 2537 . 2538) (nil fontified nil 2536 . 2537) (nil fontified nil 2535 . 2536) (nil fontified nil 2534 . 2535) (nil fontified nil 2533 . 2534) (nil fontified nil 2532 . 2533) (nil fontified nil 2531 . 2532) (nil fontified nil 2530 . 2531) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2527 . 2528) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2520 . 2521) (nil fontified nil 2519 . 2520) (nil fontified nil 2518 . 2519) (2518 . 2585)) nil (25556 58132 895150 68000) 0 nil])
([nil nil ((#("   " 0 1 (fontified t) 1 3 (fontified t)) . 2617) (undo-tree-id1916 . -3) (undo-tree-id1917 . -3) (undo-tree-id1918 . -3) (undo-tree-id1919 . -3) (undo-tree-id1920 . -3) (undo-tree-id1921 . -3) (undo-tree-id1922 . -3) (undo-tree-id1923 . -3) (undo-tree-id1924 . -3) (undo-tree-id1925 . -3) (undo-tree-id1926 . -3) (undo-tree-id1927 . -3) (undo-tree-id1928 . -3) 2584) nil (25556 58132 895132 217000) 0 nil])
([nil nil ((2584 . 2589) (t 25556 58132 944623 423000)) nil (25556 58133 705538 784000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2585) (undo-tree-id1939 . -4) (undo-tree-id1940 . -4) (undo-tree-id1941 . -4) (undo-tree-id1942 . -4) 2589) nil (25556 58133 705534 319000) 0 nil])
([nil nil ((2585 . 2589) 2589 (t 25556 58133 744623 678000)) nil (25556 58145 450793 184000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2585) (undo-tree-id1956 . -4) (undo-tree-id1957 . -4) (undo-tree-id1958 . -4) (undo-tree-id1959 . -4) 2589 (t 25556 58133 744623 678000)) nil (25556 58145 450791 356000) 0 nil])
([nil nil ((#(" printf(\" Head At Positons %p \\n \", head++);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (rear-nonsticky t fontified t)) . 2468) (undo-tree-id1955 . -44)) nil (25556 58145 450786 636000) 0 nil])
([nil nil ((2541 . 2546)) nil (25556 58145 450785 311000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2542) (undo-tree-id1950 . -4) (undo-tree-id1951 . -4) (undo-tree-id1952 . -4) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) 2546) nil (25556 58145 450784 236000) 0 nil])
([nil nil ((2542 . 2546) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 2542) (nil fontified nil 2585 . 2586) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2582 . 2583) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2579 . 2580) (nil fontified nil 2578 . 2579) (nil fontified nil 2577 . 2578) (nil fontified nil 2576 . 2577) (nil fontified nil 2575 . 2576) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2572 . 2573) (nil fontified nil 2571 . 2572) (nil fontified nil 2570 . 2571) (nil fontified nil 2569 . 2570) (nil fontified nil 2568 . 2569) (nil fontified nil 2567 . 2568) (nil fontified nil 2566 . 2567) (nil fontified nil 2565 . 2566) (nil fontified nil 2564 . 2565) (nil fontified nil 2563 . 2564) (nil fontified nil 2562 . 2563) (nil fontified nil 2561 . 2562) (nil fontified nil 2560 . 2561) (nil fontified nil 2559 . 2560) (nil fontified nil 2558 . 2559) (nil fontified nil 2557 . 2558) (nil fontified nil 2556 . 2557) (nil fontified nil 2555 . 2556) (nil fontified nil 2554 . 2555) (nil fontified nil 2553 . 2554) (nil fontified nil 2552 . 2553) (nil fontified nil 2551 . 2552) (nil fontified nil 2550 . 2551) (nil fontified nil 2549 . 2550) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2546 . 2547) (nil fontified nil 2545 . 2546) (nil fontified nil 2544 . 2545) (nil fontified nil 2543 . 2544) (nil fontified nil 2542 . 2543) (2542 . 2586)) nil (25556 58145 450777 751000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . 2465) (undo-tree-id1943 . -3) (undo-tree-id1944 . -3) (undo-tree-id1945 . -3) (undo-tree-id1946 . -3) (undo-tree-id1947 . -3) (undo-tree-id1948 . -3) (undo-tree-id1949 . -3) 2589) nil (25556 58145 450766 403000) 0 nil])
([nil nil ((2586 . 2591) (t 25556 58145 496627 583000)) nil (25556 58146 240838 660000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2587) (undo-tree-id1960 . -4) (undo-tree-id1961 . -4) (undo-tree-id1962 . -4) (undo-tree-id1963 . -4) 2591) nil (25556 58146 240834 552000) 0 nil])
([nil nil ((2587 . 2591) 2591 (t 25556 58146 288627 857000)) nil (25556 58195 971787 559000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2587) (undo-tree-id1970 . -4) 2591 (t 25556 58146 288627 857000)) nil (25556 58195 971786 157000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -2582) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (#("+" 0 1 (fontified t)) . -2583) (undo-tree-id1969 . -1) 2584) nil (25556 58195 971782 841000) 0 nil])
([nil nil ((2578 . 2580)) nil (25556 58195 971766 717000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2618) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (#("
" 0 1 (fontified t)) . -2619) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -2620) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (#("
" 0 1 (fontified t)) . -2621) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (#("
" 0 1 (fontified t)) . -2622) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) 2623 (t 25556 58196 12647 633000)) nil (25556 58249 954637 683000) 0 nil])
([nil nil ((5366 . 5368) (t 25556 58250 12674 460000)) nil (25556 58268 176810 12000) 0 nil])
([nil nil ((5368 . 5369)) nil (25556 58268 176809 216000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5368) (undo-tree-id2100 . -1) 5369) nil (25556 58268 176808 306000) 0 nil])
([nil nil ((5368 . 5371)) nil (25556 58268 176806 562000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -5368) (undo-tree-id2097 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5369) (undo-tree-id2098 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5370) (undo-tree-id2099 . -1) 5371) nil (25556 58268 176804 928000) 0 nil])
([nil nil ((5368 . 5375)) nil (25556 58268 176794 209000) 0 nil])
([nil nil ((5375 . 5376)) nil (25556 58268 176793 326000) 0 nil])
([nil nil ((5376 . 5380)) nil (25556 58268 176792 59000) 0 nil])
([nil nil ((5380 . 5381)) nil (25556 58268 176787 542000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5382) (t 25556 58268 232684 663000)) nil (25556 58293 611950 296000) 0 nil])
([nil nil ((5382 . 5383) (t 25556 58293 648699 846000)) nil (25556 58302 361455 1000) 0 nil])
([nil nil ((5383 . 5385) (#(" " 0 1 (fontified t)) . 5383) (undo-tree-id2105 . -1) 5384) nil (25556 58302 361453 701000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5383) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5384) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) 5385) nil (25556 58302 361450 563000) 0 nil])
([nil nil ((5383 . 5384)) nil (25556 58302 361436 64000) 0 nil])
([nil nil ((nil fontified t 5402 . 5403) (t 25556 58302 412517 332000) (nil fontified t 5401 . 5402) (t 25556 58302 412517 332000) (nil fontified t 5400 . 5401) (t 25556 58302 412517 332000) (nil fontified t 5399 . 5400) (t 25556 58302 412517 332000) (nil fontified t 5398 . 5399) (t 25556 58302 412517 332000) (#("*head" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5397) (t 25556 58302 412517 332000) (5402 . 5408) (t 25556 58302 412517 332000)) nil (25556 58321 2261 831000) 0 nil])
([nil nil ((nil fontified t 5416 . 5417) (nil fontified t 5415 . 5416) (nil fontified t 5414 . 5415) (nil fontified t 5413 . 5414) (nil fontified t 5412 . 5413) (#("*head" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5411) (5416 . 5422)) nil (25556 58321 2259 34000) 0 nil])
([nil nil ((nil fontified t 5434 . 5435) (nil fontified t 5433 . 5434) (nil fontified t 5432 . 5433) (nil fontified t 5431 . 5432) (nil fontified t 5430 . 5431) (#("*head" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5429) (5434 . 5440)) nil (25556 58321 2257 229000) 0 nil])
([nil nil ((nil fontified t 5448 . 5449) (nil fontified t 5447 . 5448) (nil fontified t 5446 . 5447) (nil fontified t 5445 . 5446) (nil fontified t 5444 . 5445) (#("*head" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5443) (5448 . 5454)) nil (25556 58321 2255 446000) 0 nil])
([nil nil ((nil c-in-sws t 5507 . 5508) (nil fontified t 5507 . 5508) (nil face font-lock-comment-face 5507 . 5508) (nil c-in-sws t 5506 . 5507) (nil fontified t 5506 . 5507) (nil face font-lock-comment-face 5506 . 5507) (nil c-in-sws t 5505 . 5506) (nil fontified t 5505 . 5506) (nil face font-lock-comment-face 5505 . 5506) (nil c-in-sws t 5504 . 5505) (nil fontified t 5504 . 5505) (nil face font-lock-comment-face 5504 . 5505) (nil c-in-sws t 5503 . 5504) (nil fontified t 5503 . 5504) (nil face font-lock-comment-face 5503 . 5504) (#("*head" 0 1 (c-in-sws t fontified t face font-lock-comment-face) 1 2 (c-in-sws t fontified t face font-lock-comment-face) 2 3 (c-in-sws t fontified t face font-lock-comment-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face)) . -5502) (5507 . 5513)) nil (25556 58321 2253 15000) 0 nil])
([nil nil ((nil fontified t 5527 . 5531) (nil fontified t 5526 . 5527) (#("*head" 0 1 (fontified t) 1 5 (fontified t)) . -5525) (5530 . 5536)) nil (25556 58321 2249 308000) 0 nil])
([nil nil ((nil fontified t 5563 . 5564) (nil fontified t 5562 . 5563) (nil fontified t 5561 . 5562) (nil fontified t 5560 . 5561) (nil fontified t 5559 . 5560) (#("*head" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5558) (5563 . 5569)) nil (25556 58321 2243 989000) 0 nil])
([nil nil ((5368 . 5373) (t 25556 58321 52067 862000)) nil (25556 58332 467448 224000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -5371) (undo-tree-id2109 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5372) (undo-tree-id2110 . -1) 5373) nil (25556 58332 467446 945000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -5368) (undo-tree-id2106 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -5369) (undo-tree-id2107 . -1) (#("j" 0 1 (fontified t ws-butler-chg chg)) . -5370) (undo-tree-id2108 . -1) 5371) nil (25556 58332 467443 553000) 0 nil])
([nil nil ((5368 . 5372)) nil (25556 58332 467433 715000) 0 nil])
([nil nil ((5372 . 5373)) nil (25556 58332 467432 296000) 0 nil])
([nil nil ((5373 . 5374)) nil (25556 58332 467428 53000) 0 nil])
([nil nil ((5573 . 5577) (t 25556 58332 515798 956000)) nil (25556 58364 748377 711000) 0 nil])
([nil nil ((5577 . 5581)) nil (25556 58364 748376 717000) 0 nil])
([nil nil ((5577 . 5578)) nil (25556 58364 748375 913000) 0 nil])
([nil nil ((5582 . 5584)) nil (25556 58364 748374 574000) 0 nil])
([nil nil ((5584 . 5585)) nil (25556 58364 748369 677000) 0 nil])
([nil nil ((5585 . 5589) (t 25556 58364 799071 252000)) nil (25556 58374 445769 519000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg)) . 5586) (undo-tree-id2111 . -3) (undo-tree-id2112 . -3) (undo-tree-id2113 . -3) (undo-tree-id2114 . -3) 5589) nil (25556 58374 445765 431000) 0 nil])
([nil nil ((5586 . 5589) 5589 (t 25556 58374 498860 850000)) nil (25556 58376 336294 771000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5585) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5586) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5587) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5588) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) 5589 (t 25556 58374 498860 850000)) nil (25556 58376 336289 658000) 0 nil])
([nil nil ((5582 . 5583) (t 25556 58376 390820 240000)) nil (25556 58429 61375 334000) 0 nil])
([nil nil ((5577 . 5578)) nil (25556 58429 61369 821000) 0 nil])
([nil nil ((#("    Regex_JumpToLetter(&head);
" 0 4 (fontified t) 4 5 (fontified t) 5 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t)) . 2588) (undo-tree-id2139 . -30) (undo-tree-id2140 . -30) (undo-tree-id2141 . -30) (undo-tree-id2142 . -30) (undo-tree-id2143 . -30) (undo-tree-id2144 . -30) (undo-tree-id2145 . -30) (undo-tree-id2146 . -30) (undo-tree-id2147 . -30) (undo-tree-id2148 . -30) (undo-tree-id2149 . -30) (undo-tree-id2150 . -30) (undo-tree-id2151 . -30) (undo-tree-id2152 . -30) (undo-tree-id2153 . -30) (undo-tree-id2154 . -30) (undo-tree-id2155 . -30) (undo-tree-id2156 . -30) (undo-tree-id2157 . -23) (undo-tree-id2158 . -23) (undo-tree-id2159 . -31) (undo-tree-id2160 . -30) (undo-tree-id2161 . -30) (undo-tree-id2162 . -30) (undo-tree-id2163 . -23) (undo-tree-id2164 . -30) (undo-tree-id2165 . -30) (undo-tree-id2166 . -30) (undo-tree-id2167 . -30) (undo-tree-id2168 . -31) (t 25556 58429 125742 664000)) nil (25556 58451 489685 365000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2495 . 2496) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2470 . 2488) (nil fontified nil 2469 . 2470) (nil fontified nil 2465 . 2469) (2465 . 2496)) nil (25556 58451 489548 337000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -2495) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) 2496 (t 25556 58451 537314 922000)) nil (25556 58452 568671 622000) 0 nil])
([nil nil ((#("printf(\" Head At Positons %p \\n \", ++head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (rear-nonsticky t fontified t)) . 2573) (undo-tree-id2187 . -41) (undo-tree-id2188 . -43) (undo-tree-id2189 . -43) (t 25556 58452 609294 891000)) nil (25556 58457 609678 523000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2569) (undo-tree-id2174 . -4) (undo-tree-id2175 . -4) (undo-tree-id2176 . -4) (undo-tree-id2177 . -4) (undo-tree-id2178 . -4) (undo-tree-id2179 . -4) (undo-tree-id2180 . -4) (undo-tree-id2181 . -4) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) 2573) nil (25556 58457 609670 954000) 0 nil])
([nil nil ((2569 . 2573) 2573 (t 25556 58457 665200 943000)) nil (25556 58460 126586 312000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2567) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (#("
" 0 1 (fontified t)) . -2568) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2569) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2570) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2571) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2572) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) 2573 (t 25556 58457 665200 943000)) nil (25556 58460 126581 768000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2568) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) 2569) nil (25556 58460 126509 766000) 0 nil])
([nil nil ((2568 . 2573) (t 25556 58460 185154 435000)) nil (25556 58461 247449 139000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2569) (undo-tree-id2284 . -4) (undo-tree-id2285 . -4) (undo-tree-id2286 . -4) (undo-tree-id2287 . -4) 2573) nil (25556 58461 247445 149000) 0 nil])
([nil nil ((2569 . 2573) 2573 (t 25556 58461 293134 54000)) nil (25556 58467 402976 172000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2569) (undo-tree-id2295 . -4) 2573 (t 25556 58461 293134 54000)) nil (25556 58467 402974 340000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5527) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) 5528) nil (25556 58467 402968 815000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5532) (undo-tree-id2296 . -1) 5533 (t 25556 58467 449021 539000)) nil (25556 58468 972266 550000) 0 nil])
([nil nil ((5532 . 5533) (t 25556 58469 20993 4000)) nil (25556 58522 471359 155000) 0 nil])
([nil nil ((5527 . 5528)) nil (25556 58522 471354 376000) 0 nil])
([nil nil ((#("    printf(\" Head At Positons %p \\n \", &head);
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (rear-nonsticky t fontified t) 46 47 (fontified t)) . 2417) (undo-tree-id2297 . -47) (t 25556 58522 528068 171000)) nil (25556 58545 309007 375000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2463 . 2464) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2435 . 2436) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2417 . 2421) (2417 . 2464)) nil (25556 58545 308993 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2615 . 2616) (nil fontified nil 2615 . 2616) (nil fontified nil 2614 . 2615) (nil fontified nil 2613 . 2614) (nil fontified nil 2612 . 2613) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (nil fontified nil 2602 . 2603) (nil fontified nil 2601 . 2602) (nil fontified nil 2600 . 2601) (nil fontified nil 2599 . 2600) (nil fontified nil 2598 . 2599) (nil fontified nil 2597 . 2598) (nil fontified nil 2596 . 2597) (nil fontified nil 2595 . 2596) (nil fontified nil 2594 . 2595) (nil fontified nil 2593 . 2594) (nil fontified nil 2592 . 2593) (nil fontified nil 2591 . 2592) (nil fontified nil 2590 . 2591) (nil fontified nil 2589 . 2590) (nil fontified nil 2588 . 2589) (nil fontified nil 2587 . 2588) (nil fontified nil 2586 . 2587) (nil fontified nil 2585 . 2586) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2582 . 2583) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2579 . 2580) (nil fontified nil 2578 . 2579) (nil fontified nil 2577 . 2578) (nil fontified nil 2576 . 2577) (nil fontified nil 2575 . 2576) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2569 . 2573) (2569 . 2616) (t 25556 58545 363699 535000)) nil (25556 58546 761915 735000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-string-face)) . -2438) (undo-tree-id2300 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2439) (undo-tree-id2301 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2440) (undo-tree-id2302 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2441) (undo-tree-id2303 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2442) (undo-tree-id2304 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2443) (undo-tree-id2305 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2444) (undo-tree-id2306 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2445) (undo-tree-id2307 . -1) 2446 (t 25556 58546 803676 785000)) nil (25556 58558 526390 499000) 0 nil])
([nil nil ((2438 . 2440)) nil (25556 58558 526383 689000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2439) (undo-tree-id2299 . -1) 2440) nil (25556 58558 526382 815000) 0 nil])
([nil nil ((2439 . 2443)) nil (25556 58558 526380 756000) 0 nil])
([nil nil ((2443 . 2445)) nil (25556 58558 526379 201000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2607) (undo-tree-id2298 . -1) 2608) nil (25556 58558 526375 291000) 0 nil])
([nil nil ((#("   printf(\" Head At Positons %p \\n \", head);" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (rear-nonsticky t fontified t)) . 2569) (undo-tree-id2308 . -38) (undo-tree-id2309 . -44) (t 25556 58558 571493 28000)) nil (25556 58572 214363 324000) 0 nil])
([nil nil ((nil fontified nil 2612 . 2613) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (nil fontified nil 2602 . 2603) (nil fontified nil 2601 . 2602) (nil fontified nil 2600 . 2601) (nil fontified nil 2599 . 2600) (nil fontified nil 2598 . 2599) (nil fontified nil 2597 . 2598) (nil fontified nil 2596 . 2597) (nil fontified nil 2595 . 2596) (nil fontified nil 2594 . 2595) (nil fontified nil 2593 . 2594) (nil fontified nil 2592 . 2593) (nil fontified nil 2591 . 2592) (nil fontified nil 2590 . 2591) (nil fontified nil 2589 . 2590) (nil fontified nil 2588 . 2589) (nil fontified nil 2587 . 2588) (nil fontified nil 2586 . 2587) (nil fontified nil 2585 . 2586) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2582 . 2583) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2579 . 2580) (nil fontified nil 2578 . 2579) (nil fontified nil 2577 . 2578) (nil fontified nil 2576 . 2577) (nil fontified nil 2575 . 2576) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2572 . 2573) (nil fontified nil 2569 . 2572) (2569 . 2613)) nil (25556 58572 214352 620000) 0 nil])
([nil nil ((2463 . 2467) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2463) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2463 . 2466) (2463 . 2507)) nil (25556 58572 214340 865000) 0 nil])
([nil nil ((2463 . 2468) (#("    " 0 4 (fontified t)) . 2463) (undo-tree-id2311 . -4) 2467 (t 25556 58572 271283 857000)) nil (25556 58573 965534 279000) 0 nil])
([nil nil ((2510 . 2515) (#("    " 0 4 (fontified t)) . 2510) (undo-tree-id2310 . -4) 2514) nil (25556 58573 965528 203000) 0 nil])
([nil nil ((#(" if(head==text){ printf(\" text at %p  head at %p \\n \",text,head); }" 0 1 (fontified t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (rear-nonsticky t fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (rear-nonsticky t fontified t)) . 2546) (undo-tree-id2328 . -67) (undo-tree-id2329 . -67) (undo-tree-id2330 . -67) (undo-tree-id2331 . -67) (undo-tree-id2332 . -67) (t 25556 58574 11257 651000)) nil (25556 58596 774966 55000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . 2543) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) 2546) nil (25556 58596 774958 511000) 0 nil])
([nil nil ((2543 . 2546) 2546 (t 25556 58596 822921 390000)) nil (25556 58609 561737 880000) 0 nil])
([nil nil ((#(" printf(\" Head At Positons %p \\n \", head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 2551) (undo-tree-id2696 . -42) (t 25556 58596 822921 390000)) ((2551 . 2593)) (25556 58610 614027 790000) 0 nil])
([nil nil ((2546 . 2547)) nil (25556 58623 929379 687000) 0 nil] [nil nil ((#("d" 0 1 (fontified t)) . -2538) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (#(")" 0 1 (fontified t)) . -2539) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (#(";" 0 1 (fontified t)) . -2540) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -2541) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (#("
" 0 1 (fontified t)) . -2542) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2543) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2544) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2545) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (#("
" 0 1 (fontified t)) . -2546) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (#("
" 0 1 (fontified t)) . -2547) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (#(" " 0 1 (fontified t)) . -2548) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (#(" " 0 1 (fontified t)) . -2549) (undo-tree-id2694 . -1) (#(" " 0 1 (fontified t)) . -2550) (undo-tree-id2695 . -1) 2551) ((2539 . 2551) (nil ws-butler-chg delete 2539 . 2540) (2538 . 2539)) (25556 58601 584345 857000) 0 nil])
([nil nil ((2543 . 2548) (#("    " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . 2543) (undo-tree-id2812 . -3) (undo-tree-id2813 . -4) 2547) nil (25556 58623 929378 774000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2546) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2547) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) 2548) nil (25556 58623 929376 352000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2542) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2543) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2544) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2545) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) 2546) nil (25556 58623 929371 946000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t ws-butler-chg delete)) . 2544) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2544) (undo-tree-id2789 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2544) (#(" " 0 1 (fontified t)) . 2544) (undo-tree-id2790 . -1)) nil (25556 58623 929346 481000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2541) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -2542) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (#("
" 0 1 (fontified t)) . -2543) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) 2544) nil (25556 58623 929340 150000) 0 nil])
([nil nil ((2541 . 2546)) nil (25556 58623 929212 310000) 0 nil])
([nil nil ((2542 . 2547) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2542) (undo-tree-id2701 . -4) (undo-tree-id2702 . -4) (undo-tree-id2703 . -4) 2546) nil (25556 58623 929210 574000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2543) (undo-tree-id2697 . -4) (undo-tree-id2698 . -4) (undo-tree-id2699 . -4) (undo-tree-id2700 . -4) 2547) nil (25556 58623 929203 435000) 0 nil])
([nil nil ((2543 . 2547) 2547 (t 25556 58623 978538 224000)) nil (25556 58626 2052 833000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2543) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) 2547 (t 25556 58623 978538 224000)) nil (25556 58626 2051 92000) 0 nil])
([nil nil ((#("exit(1);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 2548) (undo-tree-id2889 . -8) (undo-tree-id2890 . -8) (undo-tree-id2891 . -8) (undo-tree-id2892 . -8) (undo-tree-id2893 . -8)) nil (25556 58626 2045 710000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2542) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -2543) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (#(" " 0 1 (fontified t)) . -2544) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (#(" " 0 1 (fontified t)) . -2545) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (#(" " 0 1 (fontified t)) . -2546) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (#(" " 0 1 (fontified t)) . -2547) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) 2548) nil (25556 58626 2035 659000) 0 nil])
([nil nil ((#(" printf(\" Head At Positons %p \\n \", head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 2467) (undo-tree-id3018 . -42) (undo-tree-id3019 . -42) (t 25556 58626 82509 294000)) nil (25556 58691 721481 420000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2466) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) 2467) nil (25556 58691 721478 582000) 0 nil])
([nil nil ((#("  printf(\" Head At Adreess %p \\n \", &head);" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (rear-nonsticky t fontified t)) . 2419) (undo-tree-id3005 . -43)) nil (25556 58691 721469 759000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2417) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (#(" " 0 1 (fontified t)) . -2418) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) 2419) nil (25556 58691 721467 477000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2416) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (#("
" 0 1 (fontified t rear-nonsticky t ws-butler-chg delete)) . -2417) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (#("
" 0 1 (fontified t)) . -2418) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (#(" " 0 1 (fontified t)) . -2419) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (#(" " 0 1 (fontified t)) . -2420) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t)) . -2421) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) 2422) nil (25556 58691 721455 148000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2447) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) 2448 (t 25556 58691 769657 49000)) nil (25556 58709 15262 213000) 0 nil])
([nil nil ((#("//printf(\"head at %c address %p \\n \", string , head);" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face)) . 5285) (undo-tree-id3057 . -21) (undo-tree-id3058 . -38) (undo-tree-id3059 . -38)) nil (25556 58709 15256 199000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5281) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -5282) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -5283) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -5284) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) 5285) nil (25556 58709 15248 510000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2400) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (#("
" 0 1 (fontified t)) . -2401) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) 2402 (t 25556 58709 57448 347000)) nil (25556 58736 563024 203000) 0 nil])
([nil nil ((2401 . 2404) (t 25556 58736 633127 938000)) nil (25556 58782 985230 334000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2402) (undo-tree-id3100 . -2) 2404) nil (25556 58782 985229 414000) 0 nil])
([nil nil ((2401 . 2415)) nil (25556 58782 985227 990000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -2414) (undo-tree-id3099 . -1) 2415) nil (25556 58782 985227 187000) 0 nil])
([nil nil ((2414 . 2418)) nil (25556 58782 985225 705000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2417) (undo-tree-id3098 . -1) 2418) nil (25556 58797 775084 24000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2400) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (#(" " 0 1 (fontified t)) . -2401) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (#(" " 0 1 (fontified t)) . -2402) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (#("u" 0 1 (fontified t)) . -2403) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (#("i" 0 1 (fontified t)) . -2404) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (#("n" 0 1 (fontified t)) . -2405) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (#("t" 0 1 (fontified t)) . -2406) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (#("8" 0 1 (fontified t)) . -2407) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (#("_" 0 1 (fontified t)) . -2408) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (#("t" 0 1 (fontified t)) . -2409) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (#(" " 0 1 (fontified t)) . -2410) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -2411) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -2412) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (#("d" 0 1 (fontified t face font-lock-function-name-face)) . -2413) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -2414) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -2415) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (#("f" 0 1 (fontified t face font-lock-function-name-face)) . -2416) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) 2417) nil (25556 58803 217523 526000) 0 nil] [nil nil ((2417 . 2422)) ((#("_text" 0 1 (fontified t face font-lock-function-name-face) 1 2 (fontified t face font-lock-function-name-face) 2 3 (fontified t face font-lock-function-name-face) 3 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t face font-lock-function-name-face)) . 2417) (undo-tree-id3124 . -5) (undo-tree-id3125 . -5) (undo-tree-id3126 . -5) (undo-tree-id3127 . -5)) (25556 58797 299156 838000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -5302) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (#("e" 0 1 (fontified t)) . -5303) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (#("t" 0 1 (fontified t)) . -5304) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (#("u" 0 1 (fontified t)) . -5305) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (#("r" 0 1 (fontified t)) . -5306) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -5307) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (#(" " 0 1 (fontified t)) . -5308) (undo-tree-id3478 . -1) (#("N" 0 1 (fontified t)) . -5309) (undo-tree-id3479 . -1) (#("U" 0 1 (fontified t)) . -5310) (undo-tree-id3480 . -1) (#("L" 0 1 (fontified t)) . -5311) (undo-tree-id3481 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -5312) (undo-tree-id3482 . -1) 5313 (t 25556 58803 272412 637000)) nil (25556 58821 639351 541000) 0 nil])
([nil nil ((2422 . 2423)) ((#("," 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start)) . 2422) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1)) (25556 58796 986037 752000) 0 nil])
([nil nil ((5302 . 5306)) nil (25556 58821 639303 350000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start)) . -2422) (undo-tree-id3097 . -1) 2423) ((2422 . 2423)) (25556 58796 761201 981000) 0 nil])
([nil nil ((5302 . 5303)) nil (25556 58821 639302 97000) 0 nil])
([nil nil ((2422 . 2424)) ((#("=0" 0 1 (fontified t) 1 2 (fontified t ws-butler-chg chg)) . 2422) (undo-tree-id3117 . -2) (undo-tree-id3118 . -2) (undo-tree-id3119 . -1) (undo-tree-id3120 . -2)) (25556 58796 567198 202000) 0 nil])
([nil nil ((5307 . 5312)) nil (25556 58821 639297 497000) 0 nil])
([nil nil ((2424 . 2425)) ((#(";" 0 1 (fontified t)) . 2424)) (25556 58796 362020 225000) 0 nil])
([nil nil ((2511 . 2516) (t 25556 58821 708228 447000)) nil (25556 58868 115008 652000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -2423) (undo-tree-id3096 . -1) 2424) ((2423 . 2424)) (25556 58796 130614 966000) 0 nil])
([nil nil ((2512 . 2517) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2512) (undo-tree-id3488 . -4) 2516) nil (25556 58868 115007 642000) 0 nil])
([nil nil ((2423 . 2424)) ((#("1" 0 1 (fontified t ws-butler-chg chg)) . 2423) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1)) (25556 58795 350127 227000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2513) (undo-tree-id3487 . -4) 2517) nil (25556 58868 115005 819000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -2423) (undo-tree-id3095 . -1) 2424) ((2423 . 2424)) (25556 58794 226519 951000) 0 nil])
([nil nil ((2512 . 2517)) nil (25556 58868 115004 343000) 0 nil])
([nil nil ((2423 . 2424)) ((#("0" 0 1 (fontified t)) . 2423) (t 25556 58783 36621 440000)) (25556 58794 23916 38000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2516) (undo-tree-id3486 . -1) 2517) nil (25556 58868 115003 450000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2479) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (#("e" 0 1 (fontified t)) . -2480) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (#("a" 0 1 (fontified t)) . -2481) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (#("d" 0 1 (fontified t)) . -2482) (undo-tree-id3110 . -1) 2483 (t 25556 58783 36621 440000)) ((2480 . 2483) (nil ws-butler-chg delete 2480 . 2481) (2479 . 2480)) (25556 58793 864242 394000) 0 nil])
([nil nil ((2516 . 2525)) nil (25556 58868 115001 791000) 0 nil])
([nil nil ((2479 . 2482)) ((#("end" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . 2479) (undo-tree-id3111 . -3) (undo-tree-id3112 . -3) (undo-tree-id3113 . -3)) (25556 58792 450904 966000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2522) (undo-tree-id3483 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2523) (undo-tree-id3484 . -1) (#("9" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2524) (undo-tree-id3485 . -1) 2525) nil (25556 58868 115000 288000) 0 nil])
nil
([nil nil ((2522 . 2524)) nil (25556 58868 114991 793000) 0 nil])
([nil nil ((2524 . 2525) (nil syntax-table nil 2525 . 2526) (nil syntax-table (1) 2523 . 2524) (2523 . 2524)) nil (25556 58868 114990 942000) 0 nil])
([nil nil ((2524 . 2538)) nil (25556 58868 114977 51000) 0 nil])
([nil nil ((2538 . 2541)) nil (25556 58868 114976 424000) 0 nil])
([nil nil ((2542 . 2544) (nil syntax-table nil 2544 . 2545) (nil syntax-table (1) 2523 . 2524) (2541 . 2542)) nil (25556 58868 114975 476000) 0 nil])
([nil nil ((2545 . 2546)) nil (25556 58868 114974 178000) 0 nil])
([nil nil ((2546 . 2547)) nil (25556 58868 114973 308000) 0 nil])
([nil nil ((2547 . 2548)) nil (25556 58868 114972 484000) 0 nil])
([nil nil ((2548 . 2552)) nil (25556 58868 114971 114000) 0 nil])
([nil nil ((2553 . 2554)) nil (25556 58868 114950 512000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . -4470) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -4471) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) 4472 (t 25556 58868 167788 457000)) nil (25556 58915 747950 261000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2587) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (#("e" 0 1 (fontified t)) . -2588) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (#("x" 0 1 (fontified t)) . -2589) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (#("t" 0 1 (fontified t)) . -2590) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (#("," 0 1 (fontified t)) . -2591) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (#("p" 0 1 (fontified t)) . -2592) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (#("o" 0 1 (fontified t)) . -2593) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (#("s" 0 1 (fontified t)) . -2594) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) 2595 (t 25556 58915 807370 666000)) nil (25556 59012 949416 60000) 0 nil])
([nil nil ((2587 . 2591)) nil (25556 59012 949392 390000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -2587) (undo-tree-id3507 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2588) (undo-tree-id3508 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2589) (undo-tree-id3509 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2590) (undo-tree-id3510 . -1) 2591) nil (25556 59012 949391 67000) 0 nil])
([nil nil ((2587 . 2588)) nil (25556 59012 949387 373000) 0 nil])
([nil nil ((#("Ü" 0 1 (fontified t ws-butler-chg chg)) . -2587) (undo-tree-id3506 . -1) 2588) nil (25556 59012 949386 636000) 0 nil])
([nil nil ((2587 . 2591)) nil (25556 59012 949385 53000) 0 nil])
([nil nil ((2591 . 2592)) nil (25556 59012 949384 389000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -2587) (undo-tree-id3501 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2588) (undo-tree-id3502 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2589) (undo-tree-id3503 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2590) (undo-tree-id3504 . -1) (#("," 0 1 (fontified t ws-butler-chg chg)) . -2591) (undo-tree-id3505 . -1) 2592) nil (25556 59012 949382 491000) 0 nil])
([nil nil ((2587 . 2588)) nil (25556 59012 949377 618000) 0 nil])
([nil nil ((2588 . 2592)) nil (25556 59012 949376 874000) 0 nil])
([nil nil ((2592 . 2593)) nil (25556 59012 949375 553000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -2592) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) 2593) nil (25556 59012 949371 478000) 0 nil])
([nil nil ((2746 . 2750) (nil rear-nonsticky nil 2798 . 2799) (nil fontified nil 2798 . 2799) (nil fontified nil 2797 . 2798) (nil fontified nil 2796 . 2797) (nil fontified nil 2795 . 2796) (nil fontified nil 2794 . 2795) (nil fontified nil 2793 . 2794) (nil fontified nil 2792 . 2793) (nil fontified nil 2791 . 2792) (nil fontified nil 2790 . 2791) (nil fontified nil 2784 . 2790) (nil fontified nil 2783 . 2784) (nil fontified nil 2782 . 2783) (nil fontified nil 2781 . 2782) (nil fontified nil 2780 . 2781) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2773 . 2774) (nil fontified nil 2772 . 2773) (nil fontified nil 2771 . 2772) (nil fontified nil 2770 . 2771) (nil fontified nil 2769 . 2770) (nil fontified nil 2768 . 2769) (nil fontified nil 2767 . 2768) (nil fontified nil 2766 . 2767) (nil fontified nil 2765 . 2766) (nil fontified nil 2764 . 2765) (nil fontified nil 2763 . 2764) (nil fontified nil 2762 . 2763) (nil fontified nil 2761 . 2762) (nil fontified nil 2760 . 2761) (nil fontified nil 2759 . 2760) (nil fontified nil 2758 . 2759) (nil fontified nil 2757 . 2758) (nil fontified nil 2756 . 2757) (nil fontified nil 2755 . 2756) (nil fontified nil 2754 . 2755) (nil fontified nil 2753 . 2754) (nil fontified nil 2752 . 2753) (nil fontified nil 2751 . 2752) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2747 . 2748) (nil fontified nil 2746 . 2747) (2746 . 2799) (t 25556 59012 994611 40000)) nil (25556 59066 680932 173000) 0 nil])
([nil nil ((#("//printf(\"head at %c address %p \\n \", string , head);" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t rear-nonsticky t face font-lock-comment-face)) . 2750) (t 25556 59066 750237 820000)) nil (25556 59084 682758 858000) 0 nil])
([nil nil ((2746 . 2751) (#("    " 0 4 (fontified t c-in-sws t c-is-sws t)) . 2746) (undo-tree-id3723 . -4) 2750) nil (25556 59084 682757 886000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2747) (undo-tree-id3722 . -4) 2751) nil (25556 59084 682756 98000) 0 nil])
([nil nil ((#("while(text[pos]!=' '){
      pos++;

      if(text[pos]=='\\0'){
        printf(\" Couldnt Find Object\"); return 0;" 0 1 (c-is-sws t fontified t face font-lock-keyword-face) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 20 (fontified t face font-lock-string-face) 20 23 (fontified t) 23 29 (fontified t) 29 30 (fontified t) 30 32 (fontified t) 32 35 (fontified t) 35 36 (fontified t) 36 43 (fontified t) 43 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t face font-lock-keyword-face) 45 53 (fontified t) 53 55 (fontified t) 55 57 (fontified t) 57 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face) 61 64 (fontified t) 64 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 79 (fontified t) 79 83 (fontified t face font-lock-string-face) 83 100 (fontified t face font-lock-string-face) 100 101 (fontified t face font-lock-string-face) 101 103 (fontified t) 103 104 (fontified t) 104 110 (fontified t face font-lock-keyword-face) 110 113 (fontified t)) . 2752) (undo-tree-id3716 . -113) (undo-tree-id3717 . -113) (undo-tree-id3718 . -41) (undo-tree-id3719 . -68) (undo-tree-id3720 . -64) (undo-tree-id3721 . -113) 2865) nil (25556 59084 682753 931000) 0 nil])
([nil nil ((#("      }
    }
" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 2753) (undo-tree-id3711 . -14) (undo-tree-id3712 . -14) (undo-tree-id3713 . -14) (undo-tree-id3714 . -14) (undo-tree-id3715 . -14) 2761) nil (25556 59084 682747 196000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2745) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2746) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -2747) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -2748) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -2749) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -2750) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -2751) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -2752) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) 2753) nil (25556 59084 682733 539000) 0 nil])
([nil nil ((2745 . 2750) (t 25556 59084 734119 633000)) nil (25556 59086 620604 166000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2746) (undo-tree-id3724 . -4) (undo-tree-id3725 . -4) (undo-tree-id3726 . -4) (undo-tree-id3727 . -4) 2750) nil (25556 59086 620600 357000) 0 nil])
([nil nil ((2746 . 2750) 2750 (t 25556 59086 678107 50000)) nil (25556 59125 429501 723000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2746) (undo-tree-id3737 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2747) (undo-tree-id3738 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2748) (undo-tree-id3739 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2749) (undo-tree-id3740 . -1) 2750 (t 25556 59086 678107 50000)) nil (25556 59125 429500 218000) 0 nil])
([nil nil ((2750 . 2753)) nil (25556 59125 429496 63000) 0 nil])
([nil nil ((2751 . 2754) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2751) (undo-tree-id3736 . -2) 2753) nil (25556 59125 429495 113000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2752) (undo-tree-id3735 . -2) 2754) nil (25556 59125 429493 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -2746) (undo-tree-id3732 . -1) (#(" " 0 1 (fontified t)) . -2747) (undo-tree-id3733 . -1) (#(" " 0 1 (fontified t)) . -2748) (undo-tree-id3734 . -1) 2749) nil (25556 59125 429491 118000) 0 nil])
([nil nil ((2746 . 2748)) nil (25556 59125 429487 668000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2749) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) 2750) nil (25556 59125 429486 330000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -2749) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) 2750) nil (25556 59125 429480 810000) 0 nil])
([nil nil ((2745 . 2750) (t 25556 59125 477863 382000)) nil (25556 59131 343764 131000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2746) (undo-tree-id3741 . -4) (undo-tree-id3742 . -4) (undo-tree-id3743 . -4) (undo-tree-id3744 . -4) 2750) nil (25556 59131 343759 814000) 0 nil])
([nil nil ((2746 . 2750) 2750 (t 25556 59131 401827 403000)) nil (25556 59133 452350 902000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2746) (undo-tree-id3745 . -4) (undo-tree-id3746 . -4) (undo-tree-id3747 . -4) (undo-tree-id3748 . -4) 2750 (t 25556 59131 401827 403000)) nil (25556 59133 452346 696000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1353) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (#("u" 0 1 (fontified t)) . -1354) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (#("i" 0 1 (fontified t)) . -1355) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (#("n" 0 1 (fontified t)) . -1356) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (#("t" 0 1 (fontified t)) . -1357) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (#("6" 0 1 (fontified t)) . -1358) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (#("4" 0 1 (fontified t)) . -1359) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (#("_" 0 1 (fontified t)) . -1360) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1361) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (#(" " 0 1 (fontified t)) . -1362) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -1363) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -1364) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -1365) (undo-tree-id3809 . -1) 1366 (t 25556 59133 509814 671000)) nil (25556 59145 435409 857000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1348) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1349) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -1350) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1351) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -1352) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) 1353) nil (25556 59145 435339 8000) 0 nil])
([nil nil ((1348 . 1350)) nil (25556 59145 435309 36000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1348) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1349) (undo-tree-id3752 . -1) 1350) nil (25556 59145 435307 119000) 0 nil])
([nil nil ((1348 . 1352)) nil (25556 59145 435282 896000) 0 nil])
([nil nil ((1347 . 1348)) nil (25556 59145 435278 482000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2774) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2775) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -2776) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2777) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -2778) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (#(" " 0 1 (fontified t)) . -2779) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (#("u" 0 1 (fontified t)) . -2780) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (#("i" 0 1 (fontified t)) . -2781) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (#("n" 0 1 (fontified t)) . -2782) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (#("t" 0 1 (fontified t)) . -2783) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (#("6" 0 1 (fontified t)) . -2784) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (#("4" 0 1 (fontified t)) . -2785) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (#("_" 0 1 (fontified t)) . -2786) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -2787) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (#(" " 0 1 (fontified t)) . -2788) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -2789) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -2790) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -2791) (undo-tree-id3872 . -1) 2792 (t 25556 59145 493743 57000)) nil (25556 59197 178742 118000) 0 nil])
([nil nil ((2774 . 2778)) nil (25556 59197 178633 963000) 0 nil])
([nil nil ((2773 . 2774)) nil (25556 59197 178629 705000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2815) (undo-tree-id3874 . -1) (#("e" 0 1 (fontified t)) . -2816) (undo-tree-id3875 . -1) (#("x" 0 1 (fontified t)) . -2817) (undo-tree-id3876 . -1) (#("t" 0 1 (fontified t)) . -2818) (undo-tree-id3877 . -1) (#("[" 0 1 (fontified t)) . -2819) (undo-tree-id3878 . -1) (#("p" 0 1 (fontified t)) . -2820) (undo-tree-id3879 . -1) (#("o" 0 1 (fontified t)) . -2821) (undo-tree-id3880 . -1) (#("s" 0 1 (fontified t)) . -2822) (undo-tree-id3881 . -1) (#("]" 0 1 (fontified t)) . -2823) (undo-tree-id3882 . -1) 2824 (t 25556 59197 245447 712000)) nil (25556 59216 986381 229000) 0 nil])
([nil nil ((2815 . 2821)) nil (25556 59216 986372 734000) 0 nil])
([nil nil ((2820 . 2822)) nil (25556 59216 986371 819000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -2821) (undo-tree-id3873 . -1) 2822) nil (25556 59216 986370 18000) 0 nil])
([nil nil ((2821 . 2823)) nil (25556 59216 986357 447000) 0 nil])
([nil nil ((nil fontified t 2821 . 2822) (t 25556 59217 53340 334000) (nil fontified t 2820 . 2821) (t 25556 59217 53340 334000) (nil fontified t 2819 . 2820) (t 25556 59217 53340 334000) (nil fontified t 2818 . 2819) (t 25556 59217 53340 334000) (nil fontified t 2817 . 2818) (t 25556 59217 53340 334000) (nil fontified t 2816 . 2817) (t 25556 59217 53340 334000) (nil fontified t 2815 . 2816) (t 25556 59217 53340 334000) (#("text[pos]" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . -2815) (t 25556 59217 53340 334000) (2824 . 2831) (t 25556 59217 53340 334000)) nil (25556 59260 130509 663000) 0 nil])
([nil nil ((#("text[pos]" 0 9 (fontified t)) . -2829) (2838 . 2845)) nil (25556 59260 130506 672000) 0 nil])
([nil nil ((#("text[pos]" 0 4 (fontified t) 4 9 (fontified t)) . -2845) (2854 . 2861)) nil (25556 59260 130505 914000) 0 nil])
([nil nil ((#("text[pos]" 0 9 (fontified t)) . -2859) (2868 . 2875)) nil (25556 59260 130505 141000) 0 nil])
([nil nil ((nil fontified t 2926 . 2928) (nil fontified t 2924 . 2926) (#("text[pos]" 0 5 (fontified t) 5 7 (fontified t) 7 9 (fontified t)) . -2921) (2930 . 2937)) nil (25556 59260 130504 162000) 0 nil])
([nil nil ((#("text[pos]" 0 9 (fontified t)) . -2970) (2979 . 2986)) nil (25556 59260 130502 972000) 0 nil])
([nil nil ((#("text[pos]" 0 9 (fontified t)) . -2987) (2996 . 3003)) nil (25556 59260 130502 40000) 0 nil])
([nil nil ((nil fontified t 3072 . 3076) (#("text[pos]" 0 5 (fontified t) 5 9 (fontified t)) . -3069) (3078 . 3085)) nil (25556 59260 130501 180000) 0 nil])
([nil nil ((2804 . 2810)) nil (25556 59260 130500 163000) 0 nil])
([nil nil ((2810 . 2811)) nil (25556 59260 130499 490000) 0 nil])
([nil nil ((2811 . 2823)) nil (25556 59260 130498 803000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t)) . -2821) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -2822) (undo-tree-id3890 . -1) 2823) nil (25556 59260 130497 654000) 0 nil])
([nil nil ((2821 . 2822)) nil (25556 59260 130492 484000) 0 nil])
([nil nil ((2822 . 2826)) nil (25556 59260 130491 782000) 0 nil])
([nil nil ((2826 . 2827)) nil (25556 59260 130490 845000) 0 nil])
([nil nil ((2827 . 2830)) nil (25556 59260 130489 495000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 2828) (undo-tree-id3883 . -2) (undo-tree-id3884 . -2) (undo-tree-id3885 . -2) (undo-tree-id3886 . -2) 2830) nil (25556 59260 130485 744000) 0 nil])
([nil nil ((2828 . 2830) 2830 (t 25556 59260 193116 572000)) nil (25556 59264 615872 878000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2828) (undo-tree-id3897 . -2) (undo-tree-id3898 . -2) 2830 (t 25556 59260 193116 572000)) nil (25556 59264 615871 118000) 0 nil])
([nil nil ((#("pos++;" 0 1 (fontified t) 1 6 (fontified t)) . 2977) (undo-tree-id3896 . -6)) nil (25556 59264 615867 680000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2973) (undo-tree-id3891 . -4) (undo-tree-id3892 . -4) (undo-tree-id3893 . -4) (undo-tree-id3894 . -4) (undo-tree-id3895 . -4) 2977) nil (25556 59264 615862 375000) 0 nil])
([nil nil ((2973 . 2977) 2977 (t 25556 59264 669094 110000)) nil (25556 59268 893058 558000) 0 nil])
([nil nil ((2977 . 2985) (t 25556 59264 669094 110000)) nil (25556 59268 893056 923000) 0 nil])
([nil nil ((2985 . 2986)) nil (25556 59268 893052 123000) 0 nil])
([nil nil ((2986 . 2991) (t 25556 59268 945072 781000)) nil (25556 59276 314005 550000) 0 nil])
([nil nil ((2991 . 2992)) nil (25556 59276 314004 666000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2991) (undo-tree-id3899 . -1) 2992) nil (25556 59276 314003 383000) 0 nil])
([nil nil ((2991 . 2993)) nil (25556 59276 313995 492000) 0 nil])
([nil nil ((2992 . 2993)) nil (25556 59276 313994 724000) 0 nil])
([nil nil ((2993 . 2996)) nil (25556 59276 313994 1000) 0 nil])
([nil nil ((2996 . 2997)) nil (25556 59276 313993 111000) 0 nil])
([nil nil ((2998 . 3000)) nil (25556 59276 313991 812000) 0 nil])
([nil nil ((3000 . 3001)) nil (25556 59276 313987 35000) 0 nil])
([nil nil ((2904 . 2905) (t 25556 59276 381035 987000)) nil (25556 59290 833424 932000) 0 nil])
([nil nil ((#("K" 0 1 (fontified t ws-butler-chg chg)) . -2904) (undo-tree-id3910 . -1) 2905) nil (25556 59290 833423 711000) 0 nil])
([nil nil ((#("printf(\" Found Letter %c at pos %d \\n \", *string,pos);" 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 7 (fontified t) 7 18 (fontified t face font-lock-string-face) 18 39 (fontified t face font-lock-string-face) 39 41 (fontified t) 41 48 (fontified t) 48 49 (fontified t) 49 54 (fontified t)) . 2904) (undo-tree-id3907 . -6) (undo-tree-id3908 . -54) (undo-tree-id3909 . -54)) nil (25556 59290 833420 40000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2900) (undo-tree-id3900 . -4) (undo-tree-id3901 . -4) (undo-tree-id3902 . -4) (undo-tree-id3903 . -4) (undo-tree-id3904 . -4) (undo-tree-id3905 . -4) (undo-tree-id3906 . -4) 2904) nil (25556 59290 833413 534000) 0 nil])
([nil nil ((2900 . 2904) 2904 (t 25556 59290 888965 263000)) nil (25556 59292 307076 988000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2899) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2900) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2901) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2902) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2903) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) 2904 (t 25556 59290 888965 263000)) nil (25556 59292 307070 945000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2827) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) 2828 (t 25556 59292 372958 108000)) nil (25556 59296 921845 428000) 0 nil])
([nil nil ((2827 . 2830) (t 25556 59296 972936 14000)) nil (25556 59297 740975 348000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2828) (undo-tree-id3949 . -2) (undo-tree-id3950 . -2) (undo-tree-id3951 . -2) (undo-tree-id3952 . -2) 2830) nil (25556 59297 740971 188000) 0 nil])
([nil nil ((2828 . 2830) 2830 (t 25556 59297 804932 33000)) nil (25556 59323 871199 529000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2828) (undo-tree-id3953 . -2) (undo-tree-id3954 . -2) 2830 (t 25556 59297 804932 33000)) nil (25556 59323 871195 311000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3059) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (#("p" 0 1 (fontified t)) . -3060) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (#("o" 0 1 (fontified t)) . -3061) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (#("s" 0 1 (fontified t)) . -3062) (undo-tree-id3988 . -1) 3063 (t 25556 59323 916809 318000)) nil (25556 59349 573022 489000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -3037) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3038) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -3039) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3040) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3041) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) 3042 (t 25556 59349 628692 561000)) nil (25556 59356 132990 963000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3036) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . -3037) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (#("%" 0 1 (fontified t face font-lock-string-face)) . -3038) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -3039) (undo-tree-id4015 . -1) 3040) nil (25556 59356 132950 210000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2624) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (#("e" 0 1 (fontified t)) . -2625) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (#("x" 0 1 (fontified t)) . -2626) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (#("t" 0 1 (fontified t)) . -2627) (undo-tree-id4116 . -1) 2628 (t 25556 59356 188663 392000)) nil (25556 59426 115683 638000) 0 nil])
([nil nil ((2624 . 2628)) nil (25556 59426 115674 917000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg delete)) . -2628) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (#("p" 0 1 (fontified t)) . -2629) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (#("o" 0 1 (fontified t)) . -2630) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (#("s" 0 1 (fontified t)) . -2631) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (#("]" 0 1 (fontified t)) . -2632) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) 2633) nil (25556 59426 115669 731000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2623) (undo-tree-id4117 . -1) 2624 (t 25556 59426 192366 905000)) nil (25556 59427 517473 970000) 0 nil])
([nil nil ((#("    printf(\" Head At Char %c \\n \", *head);
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t)) . 2499) (undo-tree-id4123 . -43) (undo-tree-id4124 . -43) (undo-tree-id4125 . -43) (t 25556 59427 576361 302000)) nil (25556 59488 573687 405000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2541 . 2542) (nil fontified nil 2541 . 2542) (nil fontified nil 2540 . 2541) (nil fontified nil 2539 . 2540) (nil fontified nil 2538 . 2539) (nil fontified nil 2537 . 2538) (nil fontified nil 2536 . 2537) (nil fontified nil 2535 . 2536) (nil fontified nil 2534 . 2535) (nil fontified nil 2533 . 2534) (nil fontified nil 2532 . 2533) (nil fontified nil 2531 . 2532) (nil fontified nil 2530 . 2531) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2527 . 2528) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2520 . 2521) (nil fontified nil 2519 . 2520) (nil fontified nil 2518 . 2519) (nil fontified nil 2517 . 2518) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (nil fontified nil 2512 . 2513) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (2499 . 2542)) nil (25556 59488 573682 583000) 0 nil])
([nil nil ((2582 . 2587)) nil (25556 59488 573674 905000) 0 nil])
([nil nil ((2583 . 2587) (#("        " 0 4 (fontified nil ws-butler-chg chg) 4 5 (ws-butler-chg chg fontified nil) 5 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil)) . 2583) (undo-tree-id4118 . -4) (undo-tree-id4119 . -4) (undo-tree-id4120 . -4) (undo-tree-id4121 . -4) (undo-tree-id4122 . -4) (nil rear-nonsticky nil 2629 . 2630) (nil fontified nil 2629 . 2630) (nil fontified nil 2628 . 2629) (nil fontified nil 2627 . 2628) (nil fontified nil 2626 . 2627) (nil fontified nil 2625 . 2626) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2622 . 2623) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2619 . 2620) (nil fontified nil 2618 . 2619) (nil fontified nil 2617 . 2618) (nil fontified nil 2616 . 2617) (nil fontified nil 2615 . 2616) (nil fontified nil 2614 . 2615) (nil fontified nil 2613 . 2614) (nil fontified nil 2612 . 2613) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (nil fontified nil 2602 . 2603) (nil fontified nil 2601 . 2602) (nil fontified nil 2600 . 2601) (nil fontified nil 2599 . 2600) (nil fontified nil 2598 . 2599) (nil fontified nil 2597 . 2598) (nil fontified nil 2596 . 2597) (nil fontified nil 2595 . 2596) (nil fontified nil 2594 . 2595) (nil fontified nil 2593 . 2594) (nil fontified nil 2592 . 2593) (nil fontified nil 2591 . 2592) (nil fontified nil 2590 . 2591) (nil fontified nil 2589 . 2590) (nil fontified nil 2588 . 2589) (nil fontified nil 2587 . 2588) (2587 . 2630)) nil (25556 59488 573669 498000) 0 nil])
([nil nil ((1453 . 1454) (#("c" 0 1 (fontified t face font-lock-type-face)) . -1453) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (1454 . 1455) (#("u" 0 1 (fontified t face font-lock-type-face)) . -1454) (undo-tree-id4129 . -1) (1455 . 1456) (#("r" 0 1 (fontified t face font-lock-type-face)) . -1455) (undo-tree-id4130 . -1) (1456 . 1457) (#("r" 0 1 (fontified t face font-lock-type-face)) . -1456) (undo-tree-id4131 . -1) (1457 . 1458) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1457) (undo-tree-id4132 . -1) (1458 . 1459) (#("n" 0 1 (fontified t face font-lock-type-face)) . -1458) (undo-tree-id4133 . -1) (1459 . 1460) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1459) (undo-tree-id4134 . -1) 1460 (t 25556 59488 636123 271000)) nil (25556 59676 373504 206000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1453) (1454 . 1455) 1453) nil (25556 59676 373479 988000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1454) (1455 . 1456) 1454) nil (25556 59676 373478 806000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1455) (1456 . 1457) 1455) nil (25556 59676 373477 573000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1456) (1457 . 1458) 1456) nil (25556 59676 373476 194000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1457) (1458 . 1459) 1457) nil (25556 59676 373475 123000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1458) (1459 . 1460) 1458) nil (25556 59676 373473 932000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1459) (1460 . 1461) 1459) nil (25556 59676 373472 470000) 0 nil])
([nil nil ((1459 . 1460) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1459) (undo-tree-id4126 . -1) 1460) nil (25556 59676 373470 317000) 0 nil])
([nil nil ((1459 . 1461)) nil (25556 59676 373458 935000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1461) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) 1462 (t 25556 59676 431486 954000)) nil (25556 59677 80626 360000) 0 nil])
([nil nil ((1465 . 1466) (t 25556 59677 135484 800000)) nil (25556 59687 967740 253000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1465) (undo-tree-id4137 . -1) 1466) nil (25556 59687 967736 206000) 0 nil])
([nil nil ((#(" uint64_t starting_pos, " 0 1 (fontified t) 1 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t face font-lock-variable-name-face) 19 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t c-type c-decl-arg-start) 23 24 (fontified t)) . 1443) (undo-tree-id4138 . -24) (undo-tree-id4139 . -10) (undo-tree-id4140 . -24) (undo-tree-id4141 . -24) (undo-tree-id4142 . -1) (undo-tree-id4143 . -22) (undo-tree-id4144 . -18) (undo-tree-id4145 . -23) (undo-tree-id4146 . -22) (undo-tree-id4147 . -24) (undo-tree-id4148 . -24) 1444 (t 25556 59688 19451 686000)) nil (25556 59704 92971 442000) 0 nil])
([nil nil ((1443 . 1444) (t 25556 59704 143403 285000)) nil (25556 59704 799066 452000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4347) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) 4348 (t 25556 59704 851401 176000)) nil (25556 59715 512379 733000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -4326) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -4327) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -4328) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -4329) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (#("6" 0 1 (fontified t face font-lock-type-face)) . -4330) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -4331) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -4332) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -4333) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (#(" " 0 1 (fontified t)) . -4334) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -4335) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -4336) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -4337) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -4338) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -4339) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -4340) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -4341) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -4342) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -4343) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -4344) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -4345) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -4346) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) 4347) nil (25556 59716 402282 364000) 0 nil])
([nil nil ((4326 . 4327)) nil (25556 59719 379687 380000) 0 nil] [nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . -4324) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (#(" " 0 1 (fontified t)) . -4325) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) 4326) ((4325 . 4326) (nil ws-butler-chg delete 4325 . 4326) (4324 . 4325)) (25556 59715 512132 22000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4326) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) 4327) nil (25556 59719 379683 148000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -4325) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) 4326 (t 25556 59719 435358 78000)) nil (25556 59720 707039 683000) 0 nil])
([nil nil ((4325 . 4326) (t 25556 59720 807354 53000)) nil (25556 59721 445600 14000) 0 nil])
([nil nil ((4339 . 4342) (t 25556 59721 531351 931000)) nil (25556 59723 413970 431000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4340) (undo-tree-id4281 . -2) (undo-tree-id4282 . -2) (undo-tree-id4283 . -2) (undo-tree-id4284 . -2) 4342) nil (25556 59723 413965 965000) 0 nil])
([nil nil ((4340 . 4342) 4342 (t 25556 59723 471346 255000)) nil (25556 59732 396528 614000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4340) (undo-tree-id4315 . -2) (undo-tree-id4316 . -2) 4342 (t 25556 59723 471346 255000)) nil (25556 59732 396527 188000) 0 nil])
([nil nil ((#("uint64_t pos=current_pos;" 0 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-variable-name-face) 12 25 (fontified t)) . 4411) (undo-tree-id4311 . -25) (undo-tree-id4312 . -25) (undo-tree-id4313 . -1) (undo-tree-id4314 . -25)) nil (25556 59732 396524 285000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4408) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (#("
" 0 1 (fontified t)) . -4409) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (#(" " 0 1 (fontified t)) . -4410) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) 4411) nil (25556 59732 396516 669000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4475) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (#("o" 0 1 (fontified t)) . -4476) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (#("s" 0 1 (fontified t)) . -4477) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (#("," 0 1 (fontified t)) . -4478) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) 4479 (t 25556 59732 455320 99000)) nil (25556 59741 805492 601000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4561) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (#("o" 0 1 (fontified t)) . -4562) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (#("s" 0 1 (fontified t)) . -4563) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (#("," 0 1 (fontified t)) . -4564) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) 4565 (t 25556 59741 863292 956000)) nil (25556 59746 984440 1000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -4601) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (#("c" 0 1 (fontified t)) . -4602) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (#("u" 0 1 (fontified t)) . -4603) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (#("r" 0 1 (fontified t)) . -4604) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (#("r" 0 1 (fontified t)) . -4605) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (#("e" 0 1 (fontified t)) . -4606) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (#("n" 0 1 (fontified t)) . -4607) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (#("t" 0 1 (fontified t)) . -4608) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (#("_" 0 1 (fontified t)) . -4609) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (#("p" 0 1 (fontified t)) . -4610) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (#("o" 0 1 (fontified t)) . -4611) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (#("s" 0 1 (fontified t)) . -4612) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (#("]" 0 1 (fontified t)) . -4613) (undo-tree-id4483 . -1) 4614 (t 25556 59747 39278 123000)) nil (25556 59778 318033 332000) 0 nil])
([nil nil ((4597 . 4598)) nil (25556 59778 317872 331000) 0 nil])
([nil nil ((4682 . 4683) (t 25556 59778 371189 836000)) nil (25556 59785 552514 976000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("r" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("r" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("u" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("c" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("[" 0 1 (fontified t)) . 4687)) nil (25556 59785 552512 894000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete)) . 4687) (undo-tree-id4484 . -1) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 4687) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 4687)) nil (25556 59785 552507 161000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -3302) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -3303) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -3304) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -3305) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (#("6" 0 1 (fontified t face font-lock-type-face)) . -3306) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -3307) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -3308) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -3309) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (#(" " 0 1 (fontified t)) . -3310) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -3311) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -3312) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -3313) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -3314) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) 3315 (t 25556 59785 607169 803000)) nil (25556 59966 549669 905000) 0 nil])
([nil nil ((3334 . 3337) (t 25556 59966 602706 509000)) nil (25556 59980 512616 909000) 0 nil])
([nil nil ((3335 . 3338) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3335) (undo-tree-id4637 . -2) 3337) nil (25556 59980 512615 941000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3334) (undo-tree-id4633 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -3335) (undo-tree-id4634 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3336) (undo-tree-id4635 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3337) (undo-tree-id4636 . -1) 3338) nil (25556 59980 512613 627000) 0 nil])
([nil nil ((3334 . 3339)) nil (25556 59980 512609 484000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -3335) (undo-tree-id4629 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3336) (undo-tree-id4630 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3337) (undo-tree-id4631 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -3338) (undo-tree-id4632 . -1) 3339) nil (25556 59980 512608 229000) 0 nil])
([nil nil ((3335 . 3339)) nil (25556 59980 512603 624000) 0 nil])
([nil nil ((3339 . 3340)) nil (25556 59980 512602 896000) 0 nil])
([nil nil ((3340 . 3346)) nil (25556 59980 512602 72000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3345) (undo-tree-id4628 . -1) 3346) nil (25556 59980 512601 98000) 0 nil])
([nil nil ((3334 . 3336) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 3334) (undo-tree-id4627 . -1) (3345 . 3346)) nil (25556 59980 512598 741000) 0 nil])
([nil nil ((3347 . 3348)) nil (25556 59980 512595 836000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -3347) (undo-tree-id4626 . -1) 3348) nil (25556 59980 512591 975000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3335) (undo-tree-id4638 . -1) 3336 (t 25556 59980 570673 410000)) nil (25556 59982 422691 970000) 0 nil])
([nil nil ((3346 . 3348) (t 25556 59982 478668 914000)) nil (25556 59983 470717 482000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 3347) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) 3348) nil (25556 59983 470713 581000) 0 nil])
([nil nil ((3347 . 3348) 3348 (t 25556 59983 518666 466000)) nil (25556 59987 262453 198000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 3347) (undo-tree-id4644 . -1) 3348 (t 25556 59983 518666 466000)) nil (25556 59987 262451 876000) 0 nil])
([nil nil ((3345 . 3346)) nil (25556 59987 262448 798000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t ws-butler-chg chg)) . -3345) (undo-tree-id4643 . -1) 3346) nil (25556 59987 262446 842000) 0 nil])
([nil nil ((3345 . 3350)) nil (25556 59987 262422 799000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -4337) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -4338) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -4339) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -4340) (undo-tree-id4657 . -1) 4341 (t 25556 59987 314657 548000)) nil (25556 60080 642639 328000) 0 nil])
([nil nil ((4337 . 4341)) nil (25556 60080 642619 712000) 0 nil])
([nil nil ((4336 . 4337) (t 25556 60080 702445 292000)) nil (25556 60100 59041 899000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -4336) (undo-tree-id4658 . -1) 4337 (t 25556 60100 118402 765000)) nil (25556 60121 972813 706000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -4337) (undo-tree-id4661 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -4338) (undo-tree-id4662 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -4339) (undo-tree-id4663 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -4340) (undo-tree-id4664 . -1) 4341 (t 25556 60122 26355 373000)) nil (25556 60140 993797 243000) 0 nil])
([nil nil ((4337 . 4341)) nil (25556 60140 993792 514000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4339) (undo-tree-id4659 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4340) (undo-tree-id4660 . -1) 4341) nil (25556 60140 993790 865000) 0 nil])
([nil nil ((4339 . 4341)) nil (25556 60140 993780 171000) 0 nil])
([nil nil ((4336 . 4337)) nil (25556 60140 993775 351000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -4338) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -4339) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -4340) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -4341) (undo-tree-id4674 . -1) 4342 (t 25556 60141 42314 739000)) nil (25556 60143 423690 344000) 0 nil])
([nil nil ((4338 . 4342)) nil (25556 60143 423670 142000) 0 nil])
([nil nil ((4346 . 4347) (t 25556 60143 486309 551000)) nil (25556 60148 487689 574000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 4346) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) 4347) nil (25556 60148 487672 382000) 0 nil])
([nil nil ((4346 . 4347) 4347 (t 25556 60148 538298 849000)) nil (25556 60167 351977 25000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4345) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4346) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) 4347 (t 25556 60148 538298 849000)) nil (25556 60167 351972 395000) 0 nil])
([nil nil ((4345 . 4348) (t 25556 60167 402259 156000)) nil (25556 60168 167814 347000) 0 nil])
([nil nil ((4346 . 4349) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 4346) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) 4348) nil (25556 60168 167812 138000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4347) (undo-tree-id4687 . -2) (undo-tree-id4688 . -2) (undo-tree-id4689 . -2) (undo-tree-id4690 . -2) 4349) nil (25556 60168 167805 605000) 0 nil])
([nil nil ((4347 . 4349) 4349 (t 25556 60168 210257 467000)) nil (25556 60169 240948 928000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4346) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4347) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4348) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) 4349 (t 25556 60168 210257 467000)) nil (25556 60169 240943 523000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4345) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) 4346 (t 25556 60169 298255 191000)) nil (25556 60170 256680 722000) 0 nil])
([nil nil ((4345 . 4348) (t 25556 60170 306253 84000)) nil (25556 60174 690193 213000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4346) (undo-tree-id4721 . -2) (undo-tree-id4722 . -2) (undo-tree-id4723 . -2) (undo-tree-id4724 . -2) 4348) nil (25556 60174 690188 968000) 0 nil])
([nil nil ((4346 . 4348) 4348 (t 25556 60174 746243 821000)) nil (25556 60175 493426 812000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4347) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) 4348 (t 25556 60174 746243 821000)) nil (25556 60175 493424 951000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 4346) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) 4347) nil (25556 60175 493418 126000) 0 nil])
([nil nil ((4346 . 4347) 4347 (t 25556 60175 550242 147000)) nil (25556 60180 613936 687000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4345) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4346) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) 4347 (t 25556 60175 550242 147000)) nil (25556 60180 613932 120000) 0 nil])
([nil nil ((4345 . 4348) (t 25556 60180 690231 456000)) nil (25556 60189 475486 109000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 4346) (undo-tree-id4743 . -2) (undo-tree-id4744 . -2) (undo-tree-id4745 . -2) (undo-tree-id4746 . -2) 4348) nil (25556 60189 475481 869000) 0 nil])
([nil nil ((4346 . 4348) 4348 (t 25556 60189 518213 154000)) nil (25556 60190 103140 433000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4347) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) 4348 (t 25556 60189 518213 154000)) nil (25556 60190 103138 577000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 4346) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) 4347) nil (25556 60190 103131 410000) 0 nil])
([nil nil ((4346 . 4347) 4347 (t 25556 60190 158211 834000)) nil (25556 60193 282815 696000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4346) (undo-tree-id4757 . -1) 4347 (t 25556 60190 158211 834000)) nil (25556 60193 282811 627000) 0 nil])
([nil nil ((nil fontified t 4481 . 4482) (t 25556 60193 334205 279000) (#("text" 0 1 (fontified t) 1 4 (fontified t)) . -4481) (t 25556 60193 334205 279000) (4485 . 4489) (t 25556 60193 334205 279000)) nil (25556 60207 641999 4000) 0 nil])
([nil nil ((nil fontified t 4567 . 4568) (#("text" 0 1 (fontified t) 1 4 (fontified t)) . -4567) (4571 . 4575)) nil (25556 60207 641997 121000) 0 nil])
([nil nil ((nil fontified t 4604 . 4608) (#("text" 0 4 (fontified t)) . -4604) (4608 . 4612)) nil (25556 60207 641995 504000) 0 nil])
([nil nil ((nil fontified t 4689 . 4693) (#("text" 0 4 (fontified t)) . -4689) (4693 . 4697)) nil (25556 60207 641993 474000) 0 nil])
([nil nil ((4693 . 4694)) nil (25556 60207 641988 718000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4693) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) 4694 (t 25556 60207 694175 772000)) nil (25556 60208 481348 583000) 0 nil])
([nil nil ((4666 . 4670) (#("            " 0 10 (fontified nil) 10 12 (fontified nil)) . 4666) (4689 . 4690) (t 25556 60208 538174 45000)) nil (25556 60215 432694 794000) 0 nil])
([nil nil ((4670 . 4678)) nil (25556 60215 432690 14000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -4689) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) 4690 (t 25556 60215 486159 850000)) nil (25556 60217 587168 595000) 0 nil])
([nil nil ((4588 . 4589) (#("  " 0 2 (fontified nil)) . 4588) (4603 . 4604) (t 25556 60217 654155 433000)) nil (25556 60226 606584 924000) 0 nil])
([nil nil ((4589 . 4590)) nil (25556 60226 606583 180000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -4603) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) 4604) nil (25556 60226 606579 524000) 0 nil])
([nil nil ((4415 . 4420) (t 25556 60226 666137 128000)) nil (25556 60234 662493 183000) 0 nil])
([nil nil ((4420 . 4421)) nil (25556 60234 662492 191000) 0 nil])
([nil nil ((4421 . 4428)) nil (25556 60234 662490 884000) 0 nil])
([nil nil ((4428 . 4429)) nil (25556 60234 662486 391000) 0 nil])
([nil nil ((4429 . 4431) (t 25556 60234 714120 843000)) nil (25556 60235 275904 911000) 0 nil])
([nil nil ((4430 . 4432) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 4430) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) 4431) nil (25556 60235 275902 830000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 4431) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) 4432) nil (25556 60235 275895 144000) 0 nil])
([nil nil ((4431 . 4432) 4432 (t 25556 60235 382119 497000)) nil (25556 60241 150616 682000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 4431) (undo-tree-id4776 . -1) 4432 (t 25556 60235 382119 497000)) nil (25556 60241 150615 272000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -4620) (undo-tree-id4772 . -1) (#("e" 0 1 (fontified t)) . -4621) (undo-tree-id4773 . -1) (#("a" 0 1 (fontified t)) . -4622) (undo-tree-id4774 . -1) (#("d" 0 1 (fontified t)) . -4623) (undo-tree-id4775 . -1) 4624) nil (25556 60241 150611 627000) 0 nil])
([nil nil ((4620 . 4626)) nil (25556 60241 150596 949000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -4707) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (#("e" 0 1 (fontified t)) . -4708) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (#("a" 0 1 (fontified t)) . -4709) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (#("d" 0 1 (fontified t)) . -4710) (undo-tree-id4786 . -1) 4711 (t 25556 60241 214107 746000)) nil (25556 60245 235389 306000) 0 nil])
([nil nil ((4707 . 4713)) nil (25556 60245 235371 48000) 0 nil])
([nil nil ((4428 . 4433) (t 25556 60245 282099 570000)) nil (25556 60252 732062 704000) 0 nil])
([nil nil ((4429 . 4430)) nil (25556 60252 732057 188000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4436) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) 4437 (t 25556 60252 782084 539000)) nil (25556 60285 364031 852000) 0 nil])
([nil nil ((2290 . 2291) (t 25556 60285 414019 783000)) nil (25556 60316 157596 306000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2292) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2293) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -2294) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2295) (undo-tree-id4804 . -1) 2296) nil (25556 60316 157593 327000) 0 nil])
([nil nil ((2292 . 2296)) nil (25556 60316 157575 810000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . 2272) (t 25556 60316 217959 575000)) nil (25556 60327 974523 198000) 0 nil])
([nil nil ((2272 . 2307)) nil (25556 60327 974522 259000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2286) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2287) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2288) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2289) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2290) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2291) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2292) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2293) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2294) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2295) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2296) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2297) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2298) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2299) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2300) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2301) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2302) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2303) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2304) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2305) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2306) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) 2307) nil (25556 60327 974509 317000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2272) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . 1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2273) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2274) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2275) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2276) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2277) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2278) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2279) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2280) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2281) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2282) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2283) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2284) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2285) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) 2286) nil (25556 60327 974196 803000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg delete)) . 2272) (undo-tree-id4809 . 1) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 2272) (undo-tree-id4810 . 1) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 2272) (undo-tree-id4811 . 1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2272) (undo-tree-id4812 . 1) (#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2272) (undo-tree-id4813 . 1) (#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2272) (undo-tree-id4814 . 1) (#("4" 0 1 (fontified t ws-butler-chg delete)) . 2272) (undo-tree-id4815 . 1) (#("6" 0 1 (fontified t ws-butler-chg delete)) . 2272) (undo-tree-id4816 . 1) (#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2272) (undo-tree-id4817 . 1) (#("n" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2272) (undo-tree-id4818 . 1) (#("i" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 2272) (undo-tree-id4819 . 1)) nil (25556 60327 973562 466000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete c-type c-decl-arg-start)) . 2272) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . 1) (undo-tree-id4808 . -1)) nil (25556 60327 973548 210000) 0 nil])
([nil nil ((2284 . 2285) (t 25556 60328 25936 709000)) nil (25556 60331 171822 120000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -2344) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2345) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -2346) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -2347) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) 2348 (t 25556 60331 225930 534000)) nil (25556 60353 3005 178000) 0 nil])
([nil nil ((2344 . 2350)) nil (25556 60353 2985 204000) 0 nil])
([nil nil ((2351 . 2352)) nil (25556 60353 2984 465000) 0 nil])
([nil nil ((2352 . 2356)) nil (25556 60353 2983 255000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete)) . 2356) (undo-tree-id5522 . -1) (#("x" 0 1 (fontified t ws-butler-chg delete)) . 2356) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 2356) (#("t" 0 1 (fontified t)) . 2356)) nil (25556 60353 2979 444000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2395) (undo-tree-id5531 . -1) 2396 (t 25556 60353 57763 741000)) nil (25556 60355 824186 634000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2543) (undo-tree-id5532 . -1) 2544 (t 25556 60355 869720 546000)) nil (25556 60388 750872 897000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2504) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (#("e" 0 1 (fontified t)) . -2505) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (#("a" 0 1 (fontified t)) . -2506) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (#("d" 0 1 (fontified t)) . -2507) (undo-tree-id5542 . -1) 2508 (t 25556 60388 801227 775000)) nil (25556 60393 931939 751000) 0 nil])
([nil nil ((2504 . 2510)) nil (25556 60393 931921 366000) 0 nil])
([nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 2338) (undo-tree-id5554 . -6) (undo-tree-id5555 . -5) (undo-tree-id5556 . -5) (undo-tree-id5557 . -6) (undo-tree-id5558 . -13) (undo-tree-id5559 . -19) (undo-tree-id5560 . -19) (t 25556 60394 1152 119000)) nil (25556 60407 874954 17000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 2336) (undo-tree-id5543 . -2) (undo-tree-id5544 . -2) (undo-tree-id5545 . -2) (undo-tree-id5546 . -2) (undo-tree-id5547 . -2) (undo-tree-id5548 . -2) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) 2338) nil (25556 60407 874943 501000) 0 nil])
([nil nil ((2336 . 2338) 2338 (t 25556 60407 932952 201000)) nil (25556 60409 255756 769000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2335) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2336) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2337) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) 2338 (t 25556 60407 932952 201000)) nil (25556 60409 255738 542000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2482) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (#("t" 0 1 (fontified t)) . -2483) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (#("r" 0 1 (fontified t)) . -2484) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (#("i" 0 1 (fontified t)) . -2485) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (#("n" 0 1 (fontified t)) . -2486) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (#("g" 0 1 (fontified t)) . -2487) (undo-tree-id5600 . -1) 2488 (t 25556 60409 312932 619000)) nil (25556 60414 975453 416000) 0 nil])
([nil nil ((2482 . 2484)) nil (25556 60414 975427 231000) 0 nil])
([nil nil ((2483 . 2484)) nil (25556 60414 975425 991000) 0 nil])
([nil nil ((2484 . 2488)) nil (25556 60414 975421 929000) 0 nil])
([nil nil ((#("*(*head)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 2481) (undo-tree-id5624 . -8) (undo-tree-id5625 . -7) (undo-tree-id5626 . -7) (undo-tree-id5627 . -8) (undo-tree-id5628 . -8) (undo-tree-id5629 . -8) (undo-tree-id5630 . -8) (undo-tree-id5631 . -8) (t 25556 60415 60851 462000)) nil (25556 60420 78178 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2488 . 2489) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (2481 . 2489)) nil (25556 60420 78171 158000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2567) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (#("h" 0 1 (fontified t)) . -2568) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (#("e" 0 1 (fontified t)) . -2569) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (#("a" 0 1 (fontified t)) . -2570) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (#("d" 0 1 (fontified t)) . -2571) (undo-tree-id5623 . -1) 2572) nil (25556 60420 78166 320000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2574 . 2575) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2572 . 2573) (nil fontified nil 2571 . 2572) (nil fontified nil 2570 . 2571) (nil fontified nil 2569 . 2570) (nil fontified nil 2568 . 2569) (nil fontified nil 2567 . 2568) (2567 . 2575)) nil (25556 60420 78109 683000) 0 nil])
([nil nil ((2619 . 2620) (t 25556 60420 180779 739000)) nil (25556 60433 273641 629000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1839) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (#("0" 0 1 (fontified t)) . -1840) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (#("," 0 1 (fontified t)) . -1841) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) 1842 (t 25556 60433 328597 939000)) nil (25556 60557 965132 828000) 0 nil])
([nil nil ((1839 . 1840) (t 25556 60558 23030 13000)) nil (25556 60559 842498 844000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete)) . 1876) (#("0" 0 1 (fontified t)) . 1876) (t 25556 60559 895008 439000)) nil (25556 60561 235090 819000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete)) . 1905) (#("0" 0 1 (fontified t)) . 1905) (t 25556 60561 282992 478000)) nil (25556 60565 201194 536000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg delete)) . 1940) (#("," 0 1 (fontified t)) . 1940) (t 25556 60565 258946 920000)) nil (25556 60576 528092 73000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete c-type c-decl-arg-start)) . 1492) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 1492) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 1492) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 1492) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1492) (#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1492) (#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1492) (#("4" 0 1 (fontified t ws-butler-chg delete)) . 1492) (#("6" 0 1 (fontified t ws-butler-chg delete)) . 1492) (#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1492) (#("n" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1492) (#("i" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1492) (#("u" 0 1 (fontified t face font-lock-type-face)) . 1492) (t 25556 60576 590818 374000)) nil (25556 60587 421581 410000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1567) (#("_" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1567) (#("4" 0 1 (fontified t ws-butler-chg delete)) . 1567) (#("6" 0 1 (fontified t ws-butler-chg delete)) . 1567) (#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1567) (#("n" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1567) (#("i" 0 1 (fontified t ws-butler-chg delete face font-lock-type-face)) . 1567) (#("u" 0 1 (fontified t face font-lock-type-face)) . 1567)) nil (25556 60587 421574 884000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete c-type c-decl-arg-start)) . 1567) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 1567) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 1567) (#("p" 0 1 (fontified t ws-butler-chg delete)) . 1567) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1567)) nil (25556 60587 421555 698000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1498) (undo-tree-id5678 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1499) (undo-tree-id5679 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -1500) (undo-tree-id5680 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1501) (undo-tree-id5681 . -1) 1502 (t 25556 60587 478696 650000)) nil (25556 60598 874378 811000) 0 nil])
([nil nil ((1498 . 1501)) nil (25556 60598 874374 803000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1498) (undo-tree-id5675 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1499) (undo-tree-id5676 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1500) (undo-tree-id5677 . -1) 1501) nil (25556 60598 874373 429000) 0 nil])
([nil nil ((1498 . 1502)) nil (25556 60598 874370 100000) 0 nil])
([nil nil ((1497 . 1498)) nil (25556 60598 874369 338000) 0 nil])
([nil nil ((1573 . 1574)) nil (25556 60598 874368 359000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1575) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1576) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -1577) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1578) (undo-tree-id5674 . -1) 1579) nil (25556 60598 874365 919000) 0 nil])
([nil nil ((1575 . 1579)) nil (25556 60598 874346 729000) 0 nil])
([nil nil ((1449 . 1450) (t 25556 60598 930570 462000)) nil (25556 60607 593728 825000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1451) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1452) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -1453) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1454) (undo-tree-id5691 . -1) 1455) nil (25556 60607 593726 451000) 0 nil])
([nil nil ((1451 . 1454)) nil (25556 60607 593711 52000) 0 nil])
([nil nil ((1454 . 1455)) nil (25556 60607 593706 478000) 0 nil])
([nil nil ((1314 . 1315) (t 25556 60607 646475 665000)) nil (25556 60616 846595 505000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1314) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) 1315 (t 25556 60616 906376 104000)) nil (25556 60622 949276 732000) 0 nil])
([nil nil ((1314 . 1315) (t 25556 60623 6311 159000)) nil (25556 60623 792452 450000) 0 nil])
([nil nil ((2744 . 2745) (t 25556 60623 846302 256000)) nil (25556 60698 553658 944000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2744) (undo-tree-id5697 . -1) 2745) nil (25556 60698 553654 898000) 0 nil])
([nil nil ((2569 . 2576) (t 25556 60698 621545 884000)) nil (25556 62136 585610 351000) 0 nil])
([nil nil ((2576 . 2577)) nil (25556 62136 585596 756000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2576) (undo-tree-id5705 . -1) 2577) nil (25556 62136 585595 937000) 0 nil])
([nil nil ((2576 . 2578)) nil (25556 62136 585594 213000) 0 nil])
([nil nil ((2578 . 2580)) nil (25556 62136 585592 975000) 0 nil])
([nil nil ((2579 . 2582)) nil (25556 62136 585592 323000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -2579) (undo-tree-id5702 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2580) (undo-tree-id5703 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2581) (undo-tree-id5704 . -1) 2582) nil (25556 62136 585591 53000) 0 nil])
([nil nil ((2579 . 2583)) nil (25556 62136 585575 376000) 0 nil])
([nil nil ((2579 . 2586) (#("is_w" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2579) (undo-tree-id5701 . -4) 2583) nil (25556 62136 585574 529000) 0 nil])
([nil nil ((2586 . 2590)) nil (25556 62136 585572 577000) 0 nil])
([nil nil ((2587 . 2602) (#("MAX" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -2587) (undo-tree-id5700 . -3) 2590) nil (25556 62136 585571 701000) 0 nil])
([nil nil ((2603 . 2605)) nil (25556 62136 585569 927000) 0 nil])
([nil nil ((2604 . 2613)) nil (25556 62136 585569 213000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg)) . -2612) (undo-tree-id5699 . -1) 2613) nil (25556 62136 585568 248000) 0 nil])
([nil nil ((2612 . 2614)) nil (25556 62136 585566 172000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -2410) (undo-tree-id5698 . -1) 2411) nil (25556 62136 585548 755000) 0 nil])
([nil nil ((2410 . 2412)) nil (25556 62136 585539 173000) 0 nil])
([nil nil ((2615 . 2616) (t 25556 62136 645343 674000)) nil (25556 62156 110872 106000) 0 nil])
([nil nil ((2616 . 2617)) nil (25556 62156 110871 395000) 0 nil])
([nil nil ((2605 . 2612)) nil (25556 62156 110870 639000) 0 nil])
([nil nil ((2612 . 2614)) nil (25556 62156 110869 953000) 0 nil])
([nil nil ((2614 . 2615) (nil syntax-table nil 2628 . 2629) (nil syntax-table (1) 2613 . 2614) (2613 . 2614)) nil (25556 62156 110869 151000) 0 nil])
([nil nil ((2614 . 2621)) nil (25556 62156 110867 918000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2619) (undo-tree-id5719 . -1) (#("D" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2620) (undo-tree-id5720 . -1) 2621) nil (25556 62156 110866 978000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2615) (undo-tree-id5715 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2616) (undo-tree-id5716 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2617) (undo-tree-id5717 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2618) (undo-tree-id5718 . -1) 2619) nil (25556 62156 110864 206000) 0 nil])
([nil nil ((2615 . 2623)) nil (25556 62156 110860 581000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2620) (undo-tree-id5712 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2621) (undo-tree-id5713 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2622) (undo-tree-id5714 . -1) 2623) nil (25556 62156 110859 535000) 0 nil])
([nil nil ((2620 . 2626)) nil (25556 62156 110855 159000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2623) (undo-tree-id5709 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2624) (undo-tree-id5710 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2625) (undo-tree-id5711 . -1) 2626) nil (25556 62156 110854 46000) 0 nil])
([nil nil ((2623 . 2626)) nil (25556 62156 110851 202000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2623) (undo-tree-id5706 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2624) (undo-tree-id5707 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2625) (undo-tree-id5708 . -1) 2626) nil (25556 62156 110849 682000) 0 nil])
([nil nil ((2629 . 2631) (nil syntax-table nil 2644 . 2645) (nil syntax-table (1) 2613 . 2614) (2623 . 2629)) nil (25556 62156 110838 985000) 0 nil])
([nil nil ((2633 . 2634)) nil (25556 62156 110837 301000) 0 nil])
([nil nil ((2634 . 2635)) nil (25556 62206 404263 889000) 0 nil])
([nil nil ((3354 . 3355) (t 25556 62156 161264 286000)) nil (25556 62209 996735 412000) 0 nil] [nil nil ((#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -3350) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -3351) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -3352) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -3353) (undo-tree-id5736 . -1) 3354 (t 25556 62156 161264 286000)) ((3351 . 3354) (nil ws-butler-chg delete 3351 . 3352) (3350 . 3351)) (25556 62204 919875 220000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3354) (undo-tree-id5737 . -1) 3355) nil (25556 62209 996730 789000) 0 nil])
nil
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -3332) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -3333) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -3334) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -3335) (undo-tree-id5747 . -1) 3336 (t 25556 62210 69046 299000)) nil (25556 62215 373727 170000) 0 nil])
([nil nil ((3332 . 3336)) nil (25556 62215 373712 459000) 0 nil])
([nil nil ((3331 . 3332)) nil (25556 62215 373707 333000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -3366) (undo-tree-id5759 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -3367) (undo-tree-id5760 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -3368) (undo-tree-id5761 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -3369) (undo-tree-id5762 . -1) 3370 (t 25556 62215 453024 627000)) nil (25556 62226 370407 697000) 0 nil])
([nil nil ((3366 . 3367)) nil (25556 62226 370403 465000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3366) (undo-tree-id5758 . -1) 3367) nil (25556 62226 370389 956000) 0 nil])
([nil nil ((3366 . 3369)) nil (25556 62226 370388 347000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3365) (undo-tree-id5754 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3366) (undo-tree-id5755 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3367) (undo-tree-id5756 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3368) (undo-tree-id5757 . -1) 3369) nil (25556 62226 370387 9000) 0 nil])
([nil nil ((3365 . 3366)) nil (25556 62226 370381 226000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3365) (undo-tree-id5753 . -1) 3366) nil (25556 62226 370380 379000) 0 nil])
([nil nil ((3365 . 3370)) nil (25556 62226 370378 851000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3366) (undo-tree-id5749 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3367) (undo-tree-id5750 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3368) (undo-tree-id5751 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3369) (undo-tree-id5752 . -1) 3370) nil (25556 62226 370362 912000) 0 nil])
([nil nil ((3366 . 3368)) nil (25556 62226 370358 310000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3367) (undo-tree-id5748 . -1) 3368) nil (25556 62226 370356 812000) 0 nil])
([nil nil ((3367 . 3368)) nil (25556 62226 370349 500000) 0 nil])
([nil nil ((3368 . 3372)) nil (25556 62226 370345 10000) 0 nil])
([nil nil ((3373 . 3377) (t 25556 62226 420980 530000)) nil (25556 62230 949874 956000) 0 nil])
([nil nil ((3373 . 3374)) nil (25556 62230 949873 651000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3378) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (#("e" 0 1 (fontified t)) . -3379) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (#("x" 0 1 (fontified t)) . -3380) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (#("t" 0 1 (fontified t)) . -3381) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (#(";" 0 1 (fontified t)) . -3382) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) 3383) nil (25556 62230 949868 420000) 0 nil])
([nil nil ((3359 . 3361) (#(" " 0 1 (fontified nil)) . 3359) (3378 . 3379) (t 25556 62231 4962 121000)) nil (25556 62232 655293 218000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3390) (undo-tree-id5791 . -1) (#("e" 0 1 (fontified t)) . -3391) (undo-tree-id5792 . -1) (#("x" 0 1 (fontified t)) . -3392) (undo-tree-id5793 . -1) (#("t" 0 1 (fontified t)) . -3393) (undo-tree-id5794 . -1) (#("[" 0 1 (fontified t)) . -3394) (undo-tree-id5795 . -1) (#("p" 0 1 (fontified t)) . -3395) (undo-tree-id5796 . -1) (#("o" 0 1 (fontified t)) . -3396) (undo-tree-id5797 . -1) (#("s" 0 1 (fontified t)) . -3397) (undo-tree-id5798 . -1) (#("]" 0 1 (fontified t)) . -3398) (undo-tree-id5799 . -1) 3399 (t 25556 62232 704955 295000)) nil (25556 62238 448640 760000) 0 nil])
([nil nil ((3390 . 3396)) nil (25556 62238 448621 323000) 0 nil])
([nil nil ((3390 . 3391) (t 25556 62238 504932 27000)) nil (25556 62250 896649 473000) 0 nil])
([nil nil ((#("text[pos]" 0 9 (fontified t)) . -3423) (t 25556 62250 956882 131000) (3432 . 3439) (t 25556 62250 956882 131000)) nil (25556 62270 977191 283000) 0 nil])
([nil nil ((nil fontified t 3443 . 3444) (nil fontified t 3442 . 3443) (nil fontified t 3437 . 3442) (#("text[pos]" 0 2 (fontified t) 2 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . -3437) (3446 . 3453)) nil (25556 62270 977189 877000) 0 nil])
([nil nil ((#("text[pos]" 0 4 (fontified t) 4 9 (fontified t)) . -3453) (3462 . 3469)) nil (25556 62270 977188 248000) 0 nil])
([nil nil ((nil fontified t 3470 . 3474) (#("text[pos]" 0 5 (fontified t) 5 9 (fontified t)) . -3467) (3476 . 3483)) nil (25556 62270 977186 619000) 0 nil])
([nil nil ((#("text[pos]" 0 9 (fontified t)) . -3522) (3531 . 3538)) nil (25556 62270 977181 527000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3553) (undo-tree-id5803 . -1) (#("e" 0 1 (fontified t)) . -3554) (undo-tree-id5804 . -1) (#("x" 0 1 (fontified t)) . -3555) (undo-tree-id5805 . -1) (#("t" 0 1 (fontified t)) . -3556) (undo-tree-id5806 . -1) (#("[" 0 1 (fontified t)) . -3557) (undo-tree-id5807 . -1) (#("p" 0 1 (fontified t)) . -3558) (undo-tree-id5808 . -1) (#("o" 0 1 (fontified t)) . -3559) (undo-tree-id5809 . -1) (#("s" 0 1 (fontified t)) . -3560) (undo-tree-id5810 . -1) (#("]" 0 1 (fontified t)) . -3561) (undo-tree-id5811 . -1) 3562 (t 25556 62271 32801 864000)) nil (25556 62278 126431 963000) 0 nil])
([nil nil ((3553 . 3555)) nil (25556 62278 126424 663000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -3553) (undo-tree-id5801 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3554) (undo-tree-id5802 . -1) 3555) nil (25556 62278 126423 630000) 0 nil])
([nil nil ((3553 . 3554)) nil (25556 62278 126421 145000) 0 nil])
([nil nil ((#("Ü" 0 1 (fontified t ws-butler-chg chg)) . -3553) (undo-tree-id5800 . -1) 3554) nil (25556 62278 126419 785000) 0 nil])
([nil nil ((3553 . 3554)) nil (25556 62278 126410 859000) 0 nil])
([nil nil ((3554 . 3560)) nil (25556 62278 126406 479000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3577) (undo-tree-id5815 . -1) (#("o" 0 1 (fontified t)) . -3578) (undo-tree-id5816 . -1) (#("s" 0 1 (fontified t)) . -3579) (undo-tree-id5817 . -1) 3580 (t 25556 62278 184773 327000)) nil (25556 62303 748524 786000) 0 nil])
([nil nil ((3577 . 3578)) nil (25556 62303 748521 324000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3595) (undo-tree-id5812 . -1) (#("o" 0 1 (fontified t)) . -3596) (undo-tree-id5813 . -1) (#("s" 0 1 (fontified t)) . -3597) (undo-tree-id5814 . -1) 3598) nil (25556 62303 748519 630000) 0 nil])
([nil nil ((3595 . 3601)) nil (25556 62303 748508 250000) 0 nil])
([nil nil ((3595 . 3596)) nil (25556 62303 748503 837000) 0 nil])
([nil nil ((#("*string++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 10 (fontified t)) . 3595) (undo-tree-id5818 . -10) (undo-tree-id5819 . -10) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -10) (undo-tree-id5824 . -10) (t 25556 62303 824671 226000)) nil (25556 62308 16859 820000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3604 . 3605) (nil fontified nil 3603 . 3605) (nil fontified nil 3602 . 3603) (nil fontified nil 3601 . 3602) (nil fontified nil 3600 . 3601) (nil fontified nil 3599 . 3600) (nil fontified nil 3598 . 3599) (nil fontified nil 3597 . 3598) (nil fontified nil 3596 . 3597) (nil fontified nil 3595 . 3596) (3595 . 3605)) nil (25556 62308 16841 475000) 0 nil])
([nil nil ((3605 . 3612) (t 25556 62308 64654 375000)) nil (25556 62309 804216 441000) 0 nil])
([nil nil ((3612 . 3613)) nil (25556 62309 804215 435000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3612) (undo-tree-id5825 . -1) 3613) nil (25556 62309 804213 609000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3621 . 3622) (nil fontified nil 3620 . 3622) (nil fontified nil 3619 . 3620) (nil fontified nil 3618 . 3619) (nil fontified nil 3617 . 3618) (nil fontified nil 3616 . 3617) (nil fontified nil 3615 . 3616) (nil fontified nil 3614 . 3615) (nil fontified nil 3613 . 3614) (nil fontified nil 3612 . 3613) (3612 . 3622)) nil (25556 62309 804185 142000) 0 nil])
([nil nil ((3613 . 3614) (t 25556 62309 848647 288000)) nil (25556 62322 14335 817000) 0 nil])
([nil nil ((3614 . 3618)) nil (25556 62322 14335 3000) 0 nil])
([nil nil ((3618 . 3619)) nil (25556 62322 14334 333000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg delete)) . 3619) (undo-tree-id5827 . -1) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 3619) (#("i" 0 1 (fontified t ws-butler-chg delete)) . 3619) (#("r" 0 1 (fontified t ws-butler-chg delete)) . 3619) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 3619) (#("s" 0 1 (fontified t)) . 3619)) nil (25556 62322 14332 878000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -3613) (undo-tree-id5826 . -1) 3614) nil (25556 62322 14329 390000) 0 nil])
([nil nil ((3612 . 3613)) nil (25556 62322 14320 276000) 0 nil])
([nil nil ((3612 . 3613)) nil (25556 62322 14316 118000) 0 nil])
([nil nil ((3670 . 3671) (t 25556 62322 68598 782000)) nil (25556 62352 839667 946000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t ws-butler-chg chg)) . -3670) (undo-tree-id5828 . -1) 3671) nil (25556 62379 611234 476000) 0 nil])
([nil nil ((4451 . 4452)) nil (25556 62385 843867 311000) 0 nil] [nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 4451) (undo-tree-id5839 . -19) (t 25556 62352 900476 734000)) ((4451 . 4470)) (25556 62378 418356 173000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -4451) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) 4452) nil (25556 62385 843863 616000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4449) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (#(" " 0 1 (fontified t)) . -4450) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) 4451) ((4449 . 4451) (t 25556 62370 132408 709000)) (25556 62370 87686 266000) 0 nil])
([nil nil ((1788 . 1790) (t 25556 62385 900346 588000)) nil (25556 62440 690602 463000) 0 nil])
nil
([nil nil ((1789 . 1791) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1789) (undo-tree-id5885 . -1) 1790) nil (25556 62440 690601 486000) 0 nil])
([nil nil ((1791 . 1792)) nil (25556 62440 690599 944000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1789) (undo-tree-id5882 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1790) (undo-tree-id5883 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1791) (undo-tree-id5884 . -1) 1792) nil (25556 62440 690598 764000) 0 nil])
([nil nil ((1789 . 1794)) nil (25556 62440 690595 488000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1790) (undo-tree-id5878 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1791) (undo-tree-id5879 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1792) (undo-tree-id5880 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1793) (undo-tree-id5881 . -1) 1794) nil (25556 62440 690594 292000) 0 nil])
([nil nil ((1790 . 1795)) nil (25556 62440 690589 825000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1794) (undo-tree-id5877 . -1) 1795) nil (25556 62440 690589 61000) 0 nil])
([nil nil ((1794 . 1796)) nil (25556 62440 690587 738000) 0 nil])
([nil nil ((1796 . 1807)) nil (25556 62440 690587 89000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1805) (undo-tree-id5875 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1806) (undo-tree-id5876 . -1) 1807) nil (25556 62440 690586 252000) 0 nil])
([nil nil ((1805 . 1806)) nil (25556 62440 690584 245000) 0 nil])
([nil nil ((1806 . 1807)) nil (25556 62440 690583 662000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1790) (undo-tree-id5858 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1791) (undo-tree-id5859 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1792) (undo-tree-id5860 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1793) (undo-tree-id5861 . -1) (#("*" 0 1 (fontified t ws-butler-chg chg)) . -1794) (undo-tree-id5862 . -1) (#("*" 0 1 (fontified t ws-butler-chg chg)) . -1795) (undo-tree-id5863 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1796) (undo-tree-id5864 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1797) (undo-tree-id5865 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1798) (undo-tree-id5866 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1799) (undo-tree-id5867 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1800) (undo-tree-id5868 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1801) (undo-tree-id5869 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1802) (undo-tree-id5870 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1803) (undo-tree-id5871 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1804) (undo-tree-id5872 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1805) (undo-tree-id5873 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -1806) (undo-tree-id5874 . -1) 1807) nil (25556 62440 690580 692000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1788) (undo-tree-id5856 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1789) (undo-tree-id5857 . -1) 1790) nil (25556 62440 690565 747000) 0 nil])
([nil nil ((1788 . 1789)) nil (25556 62440 690563 480000) 0 nil])
([nil nil ((1788 . 1790) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1788) (undo-tree-id5855 . -1) 1789) nil (25556 62440 690562 673000) 0 nil])
([nil nil ((1789 . 1791) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1789) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) 1790) nil (25556 62440 690560 334000) 0 nil])
([nil nil ((1791 . 1792)) nil (25556 62440 690557 148000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1789) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1790) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1791) (undo-tree-id5852 . -1) 1792) nil (25556 62440 690552 945000) 0 nil])
([nil nil ((1819 . 1820) (t 25556 62440 744217 712000)) nil (25556 62448 452644 332000) 0 nil])
([nil nil ((1856 . 1857)) nil (25556 62448 452642 718000) 0 nil])
([nil nil ((1922 . 1923)) nil (25556 62448 452638 162000) 0 nil])
([nil nil ((1886 . 1887) (t 25556 62448 520200 372000)) nil (25556 62465 783780 413000) 0 nil])
([nil nil ((#(" printf(\" Head At Char %c \\n \", *(*head));" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (rear-nonsticky t fontified t) 40 41 (fontified t) 41 42 (fontified t)) . 2511) (undo-tree-id5898 . -32) (undo-tree-id5899 . -42) (t 25556 62465 836161 245000)) nil (25556 62495 675275 615000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . 2508) (undo-tree-id5886 . -3) (undo-tree-id5887 . -3) (undo-tree-id5888 . -3) (undo-tree-id5889 . -3) (undo-tree-id5890 . -3) (undo-tree-id5891 . -3) (undo-tree-id5892 . -3) (undo-tree-id5893 . -3) (undo-tree-id5894 . -3) (undo-tree-id5895 . -3) (undo-tree-id5896 . -3) (undo-tree-id5897 . -3) 2511) nil (25556 62495 675269 967000) 0 nil])
([nil nil ((2508 . 2511) 2511 (t 25556 62495 728091 955000)) nil (25556 62498 429826 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2506) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (#("
" 0 1 (fontified t)) . -2507) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2508) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2509) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2510) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) 2511 (t 25556 62495 728091 955000)) nil (25556 62498 429819 294000) 0 nil])
([nil nil ((#("printf(\" Head At Char %c \\n \", *(*head));" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (rear-nonsticky t fontified t) 39 40 (fontified t) 40 41 (fontified t)) . 2426) (undo-tree-id6004 . -31) (undo-tree-id6005 . -41) (t 25556 62498 488085 453000)) nil (25556 62501 335285 315000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2420) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (#("
" 0 1 (fontified t)) . -2421) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (#(" " 0 1 (fontified t)) . -2422) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (#(" " 0 1 (fontified t)) . -2423) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (#(" " 0 1 (fontified t)) . -2424) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (#(" " 0 1 (fontified t)) . -2425) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) 2426) nil (25556 62501 335277 147000) 0 nil])
([nil nil ((2355 . 2360) (t 25556 62501 388078 603000)) nil (25556 62612 163978 649000) 0 nil])
([nil nil ((2360 . 2367)) nil (25556 62612 163977 773000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -2364) (undo-tree-id6022 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2365) (undo-tree-id6023 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -2366) (undo-tree-id6024 . -1) 2367) nil (25556 62612 163976 431000) 0 nil])
([nil nil ((2364 . 2366)) nil (25556 62612 163973 408000) 0 nil])
([nil nil ((2366 . 2368)) nil (25556 62612 163972 756000) 0 nil])
([nil nil ((2367 . 2368)) nil (25556 62612 163972 93000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg)) . -2367) (undo-tree-id6021 . -1) 2368) nil (25556 62612 163971 225000) 0 nil])
([nil nil ((2367 . 2369)) nil (25556 62612 163969 593000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg)) . -2367) (undo-tree-id6019 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -2368) (undo-tree-id6020 . -1) 2369) nil (25556 62612 163968 402000) 0 nil])
([nil nil ((2367 . 2368)) nil (25556 62612 163965 692000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg)) . -2367) (undo-tree-id6018 . -1) 2368) nil (25556 62612 163964 837000) 0 nil])
([nil nil ((2367 . 2369)) nil (25556 62612 163963 338000) 0 nil])
([nil nil ((2369 . 2371)) nil (25556 62612 163962 696000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg)) . -2367) (undo-tree-id6014 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg)) . -2368) (undo-tree-id6015 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2369) (undo-tree-id6016 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2370) (undo-tree-id6017 . -1) 2371) nil (25556 62612 163961 277000) 0 nil])
([nil nil ((2367 . 2368)) nil (25556 62612 163945 116000) 0 nil])
([nil nil ((2372 . 2373) (nil syntax-table nil 2373 . 2374) (nil syntax-table (1) 2367 . 2368) (2371 . 2372) (nil syntax-table nil 2372 . 2373) (nil syntax-table (1) 2367 . 2368) (2370 . 2371) (nil syntax-table nil 2371 . 2372) (nil syntax-table (1) 2367 . 2368) (2369 . 2370) (nil syntax-table nil 2370 . 2371) (nil syntax-table (1) 2367 . 2368) (2368 . 2369) (nil syntax-table nil 2369 . 2370) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163943 838000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2368) (undo-tree-id6009 . -1) (nil syntax-table nil 2370 . 2371) (nil syntax-table (1) 2367 . 2368) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2369) (undo-tree-id6010 . -1) (nil syntax-table nil 2371 . 2372) (nil syntax-table (1) 2367 . 2368) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2370) (undo-tree-id6011 . -1) (nil syntax-table nil 2372 . 2373) (nil syntax-table (1) 2367 . 2368) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2371) (undo-tree-id6012 . -1) (nil syntax-table nil 2373 . 2374) (nil syntax-table (1) 2367 . 2368) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2372) (undo-tree-id6013 . -1) (nil syntax-table nil 2374 . 2375) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163939 650000) 0 nil])
([nil nil ((2388 . 2389) (nil syntax-table nil 2389 . 2390) (nil syntax-table (1) 2367 . 2368) (2387 . 2388) (nil syntax-table nil 2388 . 2389) (nil syntax-table (1) 2367 . 2368) (2386 . 2387) (nil syntax-table nil 2387 . 2388) (nil syntax-table (1) 2367 . 2368) (2385 . 2386) (nil syntax-table nil 2386 . 2387) (nil syntax-table (1) 2367 . 2368) (2384 . 2385) (nil syntax-table nil 2385 . 2386) (nil syntax-table (1) 2367 . 2368) (2383 . 2384) (nil syntax-table nil 2384 . 2385) (nil syntax-table (1) 2367 . 2368) (2382 . 2383) (nil syntax-table nil 2383 . 2384) (nil syntax-table (1) 2367 . 2368) (2381 . 2382) (nil syntax-table nil 2382 . 2383) (nil syntax-table (1) 2367 . 2368) (2380 . 2381) (nil syntax-table nil 2381 . 2382) (nil syntax-table (1) 2367 . 2368) (2379 . 2380) (nil syntax-table nil 2380 . 2381) (nil syntax-table (1) 2367 . 2368) (2378 . 2379) (nil syntax-table nil 2379 . 2380) (nil syntax-table (1) 2367 . 2368) (2377 . 2378) (nil syntax-table nil 2378 . 2379) (nil syntax-table (1) 2367 . 2368) (2376 . 2377) (nil syntax-table nil 2377 . 2378) (nil syntax-table (1) 2367 . 2368) (2375 . 2376) (nil syntax-table nil 2376 . 2377) (nil syntax-table (1) 2367 . 2368) (2374 . 2375) (nil syntax-table nil 2375 . 2376) (nil syntax-table (1) 2367 . 2368) (2373 . 2374) (nil syntax-table nil 2374 . 2375) (nil syntax-table (1) 2367 . 2368) (2372 . 2373) (nil syntax-table nil 2373 . 2374) (nil syntax-table (1) 2367 . 2368) (2371 . 2372) (nil syntax-table nil 2372 . 2373) (nil syntax-table (1) 2367 . 2368) (2370 . 2371) (nil syntax-table nil 2371 . 2372) (nil syntax-table (1) 2367 . 2368) (2369 . 2370) (nil syntax-table nil 2370 . 2371) (nil syntax-table (1) 2367 . 2368) (2368 . 2369) (nil syntax-table nil 2369 . 2370) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163916 678000) 0 nil])
([nil nil ((2389 . 2390) (nil syntax-table nil 2390 . 2391) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163907 165000) 0 nil])
([nil nil ((2399 . 2400) (nil syntax-table nil 2400 . 2401) (nil syntax-table (1) 2367 . 2368) (2398 . 2399) (nil syntax-table nil 2399 . 2400) (nil syntax-table (1) 2367 . 2368) (2397 . 2398) (nil syntax-table nil 2398 . 2399) (nil syntax-table (1) 2367 . 2368) (2396 . 2397) (nil syntax-table nil 2397 . 2398) (nil syntax-table (1) 2367 . 2368) (2395 . 2396) (nil syntax-table nil 2396 . 2397) (nil syntax-table (1) 2367 . 2368) (2394 . 2395) (nil syntax-table nil 2395 . 2396) (nil syntax-table (1) 2367 . 2368) (2393 . 2394) (nil syntax-table nil 2394 . 2395) (nil syntax-table (1) 2367 . 2368) (2392 . 2393) (nil syntax-table nil 2393 . 2394) (nil syntax-table (1) 2367 . 2368) (2391 . 2392) (nil syntax-table nil 2392 . 2393) (nil syntax-table (1) 2367 . 2368) (2390 . 2391) (nil syntax-table nil 2391 . 2392) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163905 212000) 0 nil])
([nil nil ((2400 . 2401) (nil syntax-table nil 2401 . 2402) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163900 506000) 0 nil])
([nil nil ((2401 . 2402) (nil syntax-table nil 2402 . 2403) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163887 30000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2399) (undo-tree-id6006 . -1) (nil syntax-table nil 2401 . 2402) (nil syntax-table (1) 2367 . 2368) (#("," 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2400) (undo-tree-id6007 . -1) (nil syntax-table nil 2402 . 2403) (nil syntax-table (1) 2367 . 2368) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2401) (undo-tree-id6008 . -1) (nil syntax-table nil 2403 . 2404) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163884 793000) 0 nil])
([nil nil ((2399 . 2401) (nil syntax-table nil 2400 . 2401) (nil syntax-table (1) 2367 . 2368)) nil (25556 62612 163860 625000) 0 nil])
([nil nil ((2401 . 2402)) nil (25556 62612 163859 602000) 0 nil])
([nil nil ((2402 . 2403)) nil (25556 62612 163858 910000) 0 nil])
([nil nil ((2403 . 2407)) nil (25556 62612 163858 226000) 0 nil])
([nil nil ((2403 . 2404)) nil (25556 62612 163857 594000) 0 nil])
([nil nil ((2404 . 2405)) nil (25556 62612 163856 990000) 0 nil])
([nil nil ((2405 . 2406)) nil (25556 62612 163856 268000) 0 nil])
([nil nil ((2410 . 2411)) nil (25556 62612 163855 60000) 0 nil])
([nil nil ((2411 . 2412)) nil (25556 62612 163850 121000) 0 nil])
([nil nil ((2413 . 2414) (t 25556 62612 219803 319000)) nil (25556 62613 349830 522000) 0 nil])
([nil nil ((2414 . 2419) (t 25556 62613 403800 246000)) nil (25556 62614 625097 492000) 0 nil])
([nil nil ((2415 . 2420) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 2415) (undo-tree-id6029 . -4) (undo-tree-id6030 . -4) (undo-tree-id6031 . -4) 2419) nil (25556 62614 625095 628000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2416) (undo-tree-id6025 . -4) (undo-tree-id6026 . -4) (undo-tree-id6027 . -4) (undo-tree-id6028 . -4) 2420) nil (25556 62614 625089 247000) 0 nil])
([nil nil ((2416 . 2420) 2420 (t 25556 62614 687796 912000)) nil (25556 62616 35950 687000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2415) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2416) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2417) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2418) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2419) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) 2420 (t 25556 62614 687796 912000)) nil (25556 62616 35945 70000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t face font-lock-string-face)) . -1771) (undo-tree-id6064 . -1) 1772 (t 25556 62616 123793 177000)) nil (25556 62647 704363 116000) 0 nil])
([nil nil ((1771 . 1773) (t 25556 62647 771709 975000)) nil (25556 62665 154176 123000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1773) (undo-tree-id6065 . -1) 1774 (t 25556 62665 211663 394000)) nil (25556 62666 19752 602000) 0 nil])
([nil nil ((2744 . 2747) (t 25556 62666 79661 61000)) nil (25556 62723 888887 347000) 0 nil])
([nil nil ((2744 . 2749) (#("   " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . 2744) (undo-tree-id6158 . -3) 2747) nil (25556 62723 888886 361000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2748) (undo-tree-id6157 . -1) 2749) nil (25556 62723 888884 535000) 0 nil])
([nil nil ((2748 . 2749)) nil (25556 62723 888868 419000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg)) . -2748) (undo-tree-id6156 . -1) 2749) nil (25556 62723 888867 605000) 0 nil])
([nil nil ((2748 . 2753)) nil (25556 62723 888866 255000) 0 nil])
([nil nil ((2754 . 2755) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2754) (undo-tree-id6147 . -2) (2745 . 2749) (#("   " 0 3 (fontified nil ws-butler-chg chg)) . 2745) (undo-tree-id6148 . -3) (undo-tree-id6149 . -3) (undo-tree-id6150 . -3) (undo-tree-id6151 . -3) (2753 . 2755) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2753) (undo-tree-id6152 . -5) (undo-tree-id6153 . -5) (undo-tree-id6154 . -5) (undo-tree-id6155 . -5) (2748 . 2753) 2753) nil (25556 62723 888864 635000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -2754) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) 2755) nil (25556 62723 888857 138000) 0 nil])
([nil nil ((2754 . 2755) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -2754) (undo-tree-id6137 . -2) (2754 . 2756) (#("while" 0 1 (fontified nil ws-butler-chg delete face font-lock-keyword-face) 1 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 2754) (undo-tree-id6138 . -5) (undo-tree-id6139 . -5) (undo-tree-id6140 . -5) (undo-tree-id6141 . -5) (undo-tree-id6142 . -5) (2749 . 2754) 2754) nil (25556 62723 888853 136000) 0 nil])
([nil nil ((2755 . 2756)) nil (25556 62723 888848 67000) 0 nil])
([nil nil ((#(" while()" 0 1 (fontified t ws-butler-chg chg) 1 6 (fontified t ws-butler-chg chg face font-lock-keyword-face) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . 2748) (undo-tree-id6126 . -8) (undo-tree-id6127 . -8) (undo-tree-id6128 . -6) (undo-tree-id6129 . -6) (undo-tree-id6130 . -6) (undo-tree-id6131 . -7) (undo-tree-id6132 . -8) (undo-tree-id6133 . -8) (undo-tree-id6134 . -8) (undo-tree-id6135 . -8) (undo-tree-id6136 . -8)) nil (25556 62723 888846 321000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2744) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2745) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2746) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2747) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) 2748) nil (25556 62723 888805 785000) 0 nil])
([nil nil ((2744 . 2747) (t 25556 62723 991502 694000)) nil (25556 62734 404489 331000) 0 nil])
([nil nil ((#("Regex_JumpToLetter(head);" 0 1 (fontified t) 1 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t)) . 2329) (undo-tree-id6159 . -25) (undo-tree-id6160 . -25) (undo-tree-id6161 . -25) (undo-tree-id6162 . -25) (undo-tree-id6163 . -25) (undo-tree-id6164 . -25) (undo-tree-id6165 . -25) (undo-tree-id6166 . -25) (undo-tree-id6167 . -25) (undo-tree-id6168 . -25) (undo-tree-id6169 . -25) (undo-tree-id6170 . -25) (undo-tree-id6171 . -25) (undo-tree-id6172 . -25) (undo-tree-id6173 . -25) (undo-tree-id6174 . -25) (undo-tree-id6175 . -25) (undo-tree-id6176 . -25) (undo-tree-id6177 . -25) (undo-tree-id6178 . -25) (undo-tree-id6179 . -25) (undo-tree-id6180 . -25) (undo-tree-id6181 . -25) (undo-tree-id6182 . -25) (undo-tree-id6183 . -25) (undo-tree-id6184 . -25) (undo-tree-id6185 . -25) (undo-tree-id6186 . -25) (undo-tree-id6187 . -25) (undo-tree-id6188 . -25) (undo-tree-id6189 . -25) (undo-tree-id6190 . -25) (undo-tree-id6191 . -25) (undo-tree-id6192 . -25) (undo-tree-id6193 . -25) (undo-tree-id6194 . -25) (undo-tree-id6195 . -25) (undo-tree-id6196 . -25) (undo-tree-id6197 . -25) (undo-tree-id6198 . -25) (undo-tree-id6199 . -25) (undo-tree-id6200 . -25) (undo-tree-id6201 . -25) (undo-tree-id6202 . -25) (undo-tree-id6203 . -25) (undo-tree-id6204 . -25) (undo-tree-id6205 . -25) (undo-tree-id6206 . -25)) nil (25556 62734 404486 345000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2353 . 2354) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2348 . 2349) (nil fontified nil 2330 . 2348) (nil fontified nil 2329 . 2330) (2329 . 2354)) nil (25556 62734 404395 520000) 0 nil])
([nil nil ((#("   " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . 2744) 2354) nil (25556 62734 404376 304000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5209 . 5210) (nil fontified nil 5209 . 5210) (nil fontified nil 5208 . 5209) (nil fontified nil 5207 . 5208) (nil fontified nil 5206 . 5207) (nil fontified nil 5205 . 5206) (nil fontified nil 5204 . 5205) (nil fontified nil 5186 . 5204) (nil fontified nil 5185 . 5186) (5185 . 5210) (t 25556 62734 463473 517000)) nil (25556 62740 663371 932000) 0 nil])
([nil nil ((5210 . 5211)) nil (25556 62740 663366 439000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face font-lock-function-name-face)) . -5197) (undo-tree-id6221 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -5198) (undo-tree-id6222 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -5199) (undo-tree-id6223 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -5200) (undo-tree-id6224 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -5201) (undo-tree-id6225 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -5202) (undo-tree-id6226 . -1) 5203 (t 25556 62740 727455 992000)) nil (25556 62757 329430 943000) 0 nil])
([nil nil ((5197 . 5202)) nil (25556 62757 329424 909000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -5203) (undo-tree-id6217 . -1) (#("e" 0 1 (fontified t)) . -5204) (undo-tree-id6218 . -1) (#("a" 0 1 (fontified t)) . -5205) (undo-tree-id6219 . -1) (#("d" 0 1 (fontified t)) . -5206) (undo-tree-id6220 . -1) 5207) nil (25556 62757 329423 404000) 0 nil])
([nil nil ((5203 . 5207)) nil (25556 62757 329418 65000) 0 nil])
([nil nil ((5207 . 5209)) nil (25556 62757 329417 81000) 0 nil])
([nil nil ((5209 . 5214)) nil (25556 62757 329416 438000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -5215) (undo-tree-id6216 . -1) 5216) nil (25556 62757 329415 661000) 0 nil])
([nil nil ((5215 . 5217)) nil (25556 62757 329414 322000) 0 nil])
([nil nil ((5215 . 5216)) nil (25556 62757 329413 627000) 0 nil])
([nil nil ((5217 . 5218)) nil (25556 62757 329412 968000) 0 nil])
([nil nil ((5216 . 5217)) nil (25556 62757 329412 253000) 0 nil])
([nil nil ((5185 . 5190)) nil (25556 62757 329411 563000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5185) (undo-tree-id6211 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5186) (undo-tree-id6212 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5187) (undo-tree-id6213 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5188) (undo-tree-id6214 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5189) (undo-tree-id6215 . -1) 5190) nil (25556 62757 329410 68000) 0 nil])
([nil nil ((5185 . 5189)) nil (25556 62757 329404 961000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5185) (undo-tree-id6207 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5186) (undo-tree-id6208 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5187) (undo-tree-id6209 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5188) (undo-tree-id6210 . -1) 5189) nil (25556 62757 329402 769000) 0 nil])
([nil nil ((5185 . 5192)) nil (25556 62757 329387 565000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5222) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) 5223 (t 25556 62757 391409 84000)) nil (25556 62758 790581 777000) 0 nil])
([nil nil ((5224 . 5227) (t 25556 62758 847404 968000)) nil (25556 62778 367210 287000) 0 nil])
([nil nil ((5225 . 5228) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 5225) (undo-tree-id6236 . -2) 5227) nil (25556 62778 367209 263000) 0 nil])
([nil nil ((5228 . 5229)) nil (25556 62778 367207 659000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5225) (undo-tree-id6232 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5226) (undo-tree-id6233 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5227) (undo-tree-id6234 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5228) (undo-tree-id6235 . -1) 5229) nil (25556 62778 367206 524000) 0 nil])
([nil nil ((5225 . 5231)) nil (25556 62778 367202 657000) 0 nil])
([nil nil ((5232 . 5233) (#(" x" 0 2 (fontified nil ws-butler-chg chg)) . -5232) (5225 . 5227) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 5225) (5231 . 5233) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 5231) (undo-tree-id6231 . -5) (5226 . 5231) 5231) nil (25556 62778 367201 492000) 0 nil])
([nil nil ((5233 . 5234)) nil (25556 62778 367198 853000) 0 nil])
([nil nil ((5233 . 5235)) nil (25556 62778 367198 208000) 0 nil])
([nil nil ((5233 . 5234)) nil (25556 62778 367197 659000) 0 nil])
([nil nil ((5235 . 5236)) nil (25556 62778 367197 24000) 0 nil])
([nil nil ((5236 . 5240)) nil (25556 62778 367196 301000) 0 nil])
([nil nil ((5241 . 5243)) nil (25556 62778 367195 594000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -5241) (undo-tree-id6229 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -5242) (undo-tree-id6230 . -1) 5243) nil (25556 62778 367194 63000) 0 nil])
([nil nil ((5241 . 5245)) nil (25556 62778 367183 862000) 0 nil])
([nil nil ((5244 . 5245)) nil (25556 62778 367179 516000) 0 nil])
([nil nil ((5247 . 5249) (t 25556 62778 431349 314000)) nil (25556 62818 626282 140000) 0 nil])
([nil nil ((5247 . 5252)) nil (25556 62818 626281 332000) 0 nil])
([nil nil ((5253 . 5258)) nil (25556 62818 626280 752000) 0 nil])
([nil nil ((5254 . 5259) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5254) (undo-tree-id6252 . -4) 5258) nil (25556 62818 626279 930000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 5249) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5249) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 5249)) nil (25556 62818 626278 204000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 5253) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 5253)) nil (25556 62818 626277 21000) 0 nil])
([nil nil ((5249 . 5250)) nil (25556 62818 626276 288000) 0 nil])
([nil nil ((5252 . 5255)) nil (25556 62818 626275 193000) 0 nil])
([nil nil ((5255 . 5256)) nil (25556 62818 626274 624000) 0 nil])
([nil nil ((5256 . 5257)) nil (25556 62818 626273 960000) 0 nil])
([nil nil ((5257 . 5258)) nil (25556 62818 626273 375000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -5257) (undo-tree-id6251 . -1) 5258) nil (25556 62818 626272 530000) 0 nil])
([nil nil ((5257 . 5258)) nil (25556 62818 626271 64000) 0 nil])
([nil nil ((#("Ü" 0 1 (fontified t ws-butler-chg chg)) . -5257) (undo-tree-id6250 . -1) 5258) nil (25556 62818 626270 306000) 0 nil])
([nil nil ((5257 . 5262)) nil (25556 62818 626268 853000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -5257) (undo-tree-id6245 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -5258) (undo-tree-id6246 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5259) (undo-tree-id6247 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5260) (undo-tree-id6248 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -5261) (undo-tree-id6249 . -1) 5262) nil (25556 62818 626254 336000) 0 nil])
([nil nil ((5257 . 5258)) nil (25556 62818 626249 682000) 0 nil])
([nil nil ((5258 . 5262)) nil (25556 62818 626248 874000) 0 nil])
([nil nil ((5262 . 5263)) nil (25556 62818 626248 241000) 0 nil])
([nil nil ((5263 . 5265)) nil (25556 62818 626247 573000) 0 nil])
([nil nil ((5265 . 5266)) nil (25556 62818 626246 890000) 0 nil])
([nil nil ((5270 . 5273)) nil (25556 62818 626246 174000) 0 nil])
([nil nil ((5273 . 5274)) nil (25556 62818 626245 372000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -5272) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -5273) (undo-tree-id6244 . -1) 5274) nil (25556 62818 626244 285000) 0 nil])
([nil nil ((5272 . 5280)) nil (25556 62818 626225 784000) 0 nil])
([nil nil ((5280 . 5281)) nil (25556 62818 626225 28000) 0 nil])
([nil nil ((5270 . 5273)) nil (25556 62818 626223 825000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 5271) (undo-tree-id6237 . -2) (undo-tree-id6238 . -2) (undo-tree-id6239 . -2) (undo-tree-id6240 . -2) 5273) nil (25556 62818 626219 618000) 0 nil])
([nil nil ((5271 . 5273) 5273 (t 25556 62818 691233 301000)) nil (25556 62820 60426 206000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 5271) (undo-tree-id6253 . -2) (undo-tree-id6254 . -2) 5273 (t 25556 62818 691233 301000)) nil (25556 62820 60424 69000) 0 nil])
([nil nil ((5272 . 5273)) nil (25556 62820 60400 454000) 0 nil])
([nil nil ((5251 . 5256) (t 25556 62820 123229 135000)) nil (25556 62827 879728 391000) 0 nil])
([nil nil ((5256 . 5257)) nil (25556 62827 879727 510000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5255) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5256) (undo-tree-id6262 . -1) 5257) nil (25556 62827 879726 322000) 0 nil])
([nil nil ((5255 . 5257)) nil (25556 62827 879720 740000) 0 nil])
([nil nil ((5257 . 5259)) nil (25556 62827 879719 975000) 0 nil])
([nil nil ((#("*(*head)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 5233) (undo-tree-id6255 . -8) (undo-tree-id6256 . -8) (undo-tree-id6257 . -8) 5241) nil (25556 62827 879717 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5240 . 5241) (nil fontified nil 5240 . 5241) (nil fontified nil 5239 . 5240) (nil fontified nil 5238 . 5239) (nil fontified nil 5237 . 5238) (nil fontified nil 5236 . 5237) (nil fontified nil 5235 . 5236) (nil fontified nil 5234 . 5235) (nil fontified nil 5233 . 5234) (5233 . 5241)) nil (25556 62827 879704 278000) 0 nil])
([nil nil ((5252 . 5256) (#("   " 0 3 (fontified nil)) . 5252) (undo-tree-id6263 . -3) (undo-tree-id6264 . -3) (nil rear-nonsticky nil 5265 . 5266) (nil fontified nil 5265 . 5266) (nil fontified nil 5264 . 5265) (nil fontified nil 5263 . 5264) (nil fontified nil 5262 . 5263) (nil fontified nil 5261 . 5262) (nil fontified nil 5260 . 5261) (nil fontified nil 5259 . 5260) (nil fontified nil 5258 . 5259) (5258 . 5266) (t 25556 62827 935206 372000)) nil (25556 62829 350346 311000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5255) (undo-tree-id6265 . -1) 5256 (t 25556 62829 399202 99000)) nil (25556 62831 260099 998000) 0 nil])
([nil nil ((5266 . 5270) (t 25556 62831 319196 490000)) nil (25556 62865 231989 109000) 0 nil])
([nil nil ((5269 . 5271)) nil (25556 62865 231988 272000) 0 nil])
([nil nil ((#("0" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5269) (undo-tree-id6280 . -1) (#("\\" 0 1 (ws-butler-chg chg fontified t)) . -5270) (undo-tree-id6281 . -1) 5271) nil (25556 62865 231987 438000) 0 nil])
([nil nil ((5269 . 5271)) nil (25556 62865 231983 484000) 0 nil])
([nil nil ((5273 . 5275)) nil (25556 62865 231982 925000) 0 nil])
([nil nil ((5274 . 5279)) nil (25556 62865 231982 262000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5275) (undo-tree-id6276 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5276) (undo-tree-id6277 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5277) (undo-tree-id6278 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -5278) (undo-tree-id6279 . -1) 5279) nil (25556 62865 231981 173000) 0 nil])
([nil nil ((5275 . 5281)) nil (25556 62865 231977 362000) 0 nil])
([nil nil ((5281 . 5283)) nil (25556 62865 231976 784000) 0 nil])
([nil nil ((5283 . 5284) (nil syntax-table nil 5285 . 5286) (nil syntax-table (1) 5282 . 5283) (5282 . 5283)) nil (25556 62865 231975 960000) 0 nil])
([nil nil ((5284 . 5285)) nil (25556 62865 231974 980000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5284) (undo-tree-id6275 . -1) 5285) nil (25556 62865 231974 204000) 0 nil])
([nil nil ((5283 . 5290)) nil (25556 62865 231972 934000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5284) (undo-tree-id6269 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5285) (undo-tree-id6270 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5286) (undo-tree-id6271 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5287) (undo-tree-id6272 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5288) (undo-tree-id6273 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5289) (undo-tree-id6274 . -1) 5290) nil (25556 62865 231971 463000) 0 nil])
([nil nil ((5284 . 5290)) nil (25556 62865 231966 141000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5288) (undo-tree-id6267 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5289) (undo-tree-id6268 . -1) 5290) nil (25556 62865 231965 52000) 0 nil])
([nil nil ((5288 . 5304)) nil (25556 62865 231962 182000) 0 nil])
([nil nil ((5306 . 5307)) nil (25556 62865 231961 563000) 0 nil])
([nil nil ((5307 . 5308)) nil (25556 62865 231960 980000) 0 nil])
([nil nil ((5308 . 5318)) nil (25556 62865 231960 343000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5317) (undo-tree-id6266 . -1) 5318) nil (25556 62865 231958 963000) 0 nil])
([nil nil ((5317 . 5318)) nil (25556 62865 231949 916000) 0 nil])
([nil nil ((5318 . 5319)) nil (25556 62865 231945 779000) 0 nil])
([nil nil ((#("int8_t Regex_JumpToSpace(char** head)
" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-function-name-face) 8 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t) 37 38 (fontified t)) . 5185) (undo-tree-id6282 . -25) (undo-tree-id6283 . -37) (undo-tree-id6284 . -38) (t 25556 62865 283096 548000)) nil (25556 62884 141772 350000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5222 . 5223) (nil fontified nil 5222 . 5223) (nil fontified nil 5221 . 5222) (nil fontified nil 5220 . 5221) (nil fontified nil 5219 . 5220) (nil fontified nil 5218 . 5219) (nil fontified nil 5217 . 5218) (nil fontified nil 5216 . 5217) (nil fontified nil 5215 . 5216) (nil fontified nil 5214 . 5215) (nil fontified nil 5213 . 5214) (nil fontified nil 5212 . 5213) (nil fontified nil 5211 . 5212) (nil fontified nil 5210 . 5211) (nil fontified nil 5209 . 5210) (nil fontified nil 5208 . 5209) (nil fontified nil 5207 . 5208) (nil fontified nil 5206 . 5207) (nil fontified nil 5205 . 5206) (nil fontified nil 5204 . 5205) (nil fontified nil 5193 . 5204) (nil fontified nil 5192 . 5193) (nil fontified nil 5191 . 5192) (nil fontified nil 5190 . 5191) (nil fontified nil 5189 . 5190) (nil fontified nil 5188 . 5189) (nil fontified nil 5187 . 5188) (nil fontified nil 5186 . 5187) (nil fontified nil 5185 . 5186) (5185 . 5223)) nil (25556 62884 141744 2000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1436 . 1437) (nil fontified nil 1436 . 1437) (nil fontified nil 1435 . 1436) (nil fontified nil 1434 . 1435) (nil fontified nil 1433 . 1434) (nil fontified nil 1432 . 1433) (nil fontified nil 1431 . 1432) (nil fontified nil 1430 . 1431) (nil fontified nil 1429 . 1430) (nil fontified nil 1428 . 1429) (nil fontified nil 1427 . 1428) (nil fontified nil 1426 . 1427) (nil fontified nil 1425 . 1426) (nil fontified nil 1424 . 1425) (nil fontified nil 1423 . 1424) (nil fontified nil 1422 . 1423) (nil fontified nil 1421 . 1422) (nil fontified nil 1420 . 1421) (nil fontified nil 1419 . 1420) (nil fontified nil 1418 . 1419) (nil fontified nil 1407 . 1418) (nil fontified nil 1406 . 1407) (nil fontified nil 1405 . 1406) (nil fontified nil 1404 . 1405) (nil fontified nil 1403 . 1404) (nil fontified nil 1402 . 1403) (nil fontified nil 1401 . 1402) (nil fontified nil 1400 . 1401) (nil fontified nil 1399 . 1400) (1399 . 1437) (t 25556 62884 211040 287000)) nil (25556 62890 800597 375000) 0 nil])
([nil nil ((1436 . 1437) (t 25556 62890 851020 458000)) nil (25556 62893 229489 902000) 0 nil])
([nil nil ((1399 . 1400)) nil (25556 62893 229484 788000) 0 nil])
([nil nil ((#("int64_t Regex_JumpToLetter(char** head);

int8_t Regex_JumpToSpace(char** head);
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t c-type c-decl-arg-start) 27 31 (fontified t face font-lock-type-face) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t face font-lock-type-face) 44 45 (fontified t face font-lock-type-face) 45 46 (fontified t face font-lock-type-face) 46 47 (fontified t face font-lock-type-face) 47 48 (fontified t c-type c-decl-id-start face font-lock-type-face) 48 49 (fontified t) 49 50 (fontified t face font-lock-function-name-face) 50 61 (fontified t face font-lock-function-name-face) 61 62 (fontified t face font-lock-function-name-face) 62 63 (fontified t face font-lock-function-name-face) 63 64 (fontified t face font-lock-function-name-face) 64 65 (fontified t face font-lock-function-name-face) 65 66 (fontified t face font-lock-function-name-face) 66 67 (fontified t c-type c-decl-arg-start) 67 68 (fontified t face font-lock-type-face) 68 69 (fontified t face font-lock-type-face) 69 70 (fontified t face font-lock-type-face) 70 71 (fontified t face font-lock-type-face) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t face font-lock-variable-name-face) 75 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t face font-lock-variable-name-face) 77 78 (fontified t face font-lock-variable-name-face) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t rear-nonsticky t)) . 1358) (undo-tree-id6285 . -3) (undo-tree-id6286 . -40) (undo-tree-id6287 . -41) (undo-tree-id6288 . -31) (undo-tree-id6289 . -32) (undo-tree-id6290 . -40) (undo-tree-id6291 . -27) (undo-tree-id6292 . -39) (undo-tree-id6293 . -81) (undo-tree-id6294 . -41) (undo-tree-id6295 . -41) (undo-tree-id6296 . -81) (undo-tree-id6297 . -42) (undo-tree-id6298 . -42) (undo-tree-id6299 . -41) (undo-tree-id6300 . -81) (undo-tree-id6301 . -81) (undo-tree-id6302 . -81) 1439 (t 25556 62893 287013 173000)) nil (25556 62897 159044 708000) 0 nil])
([nil nil ((1561 . 1563)) nil (25556 62897 159025 92000) 0 nil])
([nil nil ((nil fontified nil 1642 . 1643) (nil fontified nil 1641 . 1642) (nil fontified nil 1640 . 1641) (nil fontified nil 1639 . 1640) (nil fontified nil 1638 . 1639) (nil fontified nil 1637 . 1638) (nil fontified nil 1636 . 1637) (nil fontified nil 1635 . 1636) (nil fontified nil 1634 . 1635) (nil fontified nil 1633 . 1634) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1626 . 1627) (nil fontified nil 1625 . 1626) (nil fontified nil 1624 . 1625) (nil fontified nil 1623 . 1624) (nil fontified nil 1612 . 1623) (nil fontified nil 1611 . 1612) (nil fontified nil 1610 . 1611) (nil fontified nil 1609 . 1610) (nil fontified nil 1608 . 1609) (nil fontified nil 1607 . 1608) (nil fontified nil 1606 . 1607) (nil fontified nil 1605 . 1606) (nil fontified nil 1604 . 1605) (nil fontified nil 1603 . 1604) (nil fontified nil 1602 . 1603) (nil fontified nil 1601 . 1602) (nil fontified nil 1600 . 1601) (nil fontified nil 1599 . 1600) (nil fontified nil 1598 . 1599) (nil fontified nil 1597 . 1598) (nil fontified nil 1596 . 1597) (nil fontified nil 1595 . 1596) (nil fontified nil 1594 . 1595) (nil fontified nil 1593 . 1594) (nil fontified nil 1589 . 1593) (nil fontified nil 1588 . 1589) (nil fontified nil 1570 . 1588) (nil fontified nil 1569 . 1570) (nil fontified nil 1568 . 1569) (nil fontified nil 1567 . 1568) (nil fontified nil 1566 . 1567) (nil fontified nil 1565 . 1566) (nil fontified nil 1562 . 1565) (1562 . 1643)) nil (25556 62897 159019 738000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1830) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) 1831 (t 25556 62897 255001 289000)) nil (25556 62905 229288 288000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 5365) (t 25556 62905 286977 190000)) nil (25556 63247 259070 139000) 0 nil])
([nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 5028) (undo-tree-id6311 . -7) (undo-tree-id6312 . -19) (t 25556 63247 313900 184000)) nil (25556 63351 880547 645000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5027) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) 5028) nil (25556 63351 880541 366000) 0 nil])
([nil nil ((5027 . 5028) 5028 (t 25556 63351 941555 957000)) nil (25556 63352 692746 127000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5046 . 5047) (nil fontified nil 5046 . 5047) (nil fontified nil 5045 . 5046) (nil fontified nil 5044 . 5045) (nil fontified nil 5043 . 5044) (nil fontified nil 5042 . 5043) (nil fontified nil 5041 . 5042) (nil fontified nil 5040 . 5041) (nil fontified nil 5039 . 5040) (nil fontified nil 5038 . 5039) (nil fontified nil 5037 . 5038) (nil fontified nil 5036 . 5037) (nil fontified nil 5035 . 5036) (nil fontified nil 5034 . 5035) (nil fontified nil 5033 . 5034) (nil fontified nil 5032 . 5033) (nil fontified nil 5031 . 5032) (nil fontified nil 5030 . 5031) (nil fontified nil 5029 . 5030) (nil fontified nil 5028 . 5029) (5028 . 5047) (t 25556 63351 941555 957000)) nil (25556 63352 692740 698000) 0 nil])
([nil nil ((5265 . 5268) (t 25556 63352 753553 265000)) nil (25556 63356 423645 430000) 0 nil])
([nil nil ((5266 . 5269) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 5266) (undo-tree-id6331 . -2) (undo-tree-id6332 . -2) (undo-tree-id6333 . -2) 5268) nil (25556 63356 423644 325000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -5266) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -5267) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -5268) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) 5269) nil (25556 63356 423640 538000) 0 nil])
([nil nil ((5266 . 5267)) nil (25556 63356 423629 652000) 0 nil])
([nil nil ((5266 . 5268) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 5266) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (nil rear-nonsticky nil 5285 . 5286) (nil fontified nil 5285 . 5286) (nil fontified nil 5284 . 5285) (nil fontified nil 5283 . 5284) (nil fontified nil 5282 . 5283) (nil fontified nil 5281 . 5282) (nil fontified nil 5280 . 5281) (nil fontified nil 5279 . 5280) (nil fontified nil 5278 . 5279) (nil fontified nil 5277 . 5278) (nil fontified nil 5276 . 5277) (nil fontified nil 5275 . 5276) (nil fontified nil 5274 . 5275) (nil fontified nil 5273 . 5274) (nil fontified nil 5272 . 5273) (nil fontified nil 5271 . 5272) (nil fontified nil 5270 . 5271) (nil fontified nil 5269 . 5270) (nil fontified nil 5268 . 5269) (nil fontified nil 5267 . 5268) (5267 . 5286)) nil (25556 63356 423624 881000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5267) (undo-tree-id6334 . -1) 5268 (t 25556 63356 485540 888000)) nil (25556 63357 878902 438000) 0 nil])
([nil nil ((5287 . 5288) (#(" " 0 1 (fontified t)) . 5287) (undo-tree-id6338 . -1) 5288 (t 25556 63357 937536 74000)) nil (25556 63360 252595 980000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5287) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . -5288) (undo-tree-id6337 . -1) 5289) nil (25556 63360 252592 739000) 0 nil])
([nil nil ((5287 . 5288)) nil (25556 63360 252578 404000) 0 nil])
([nil nil ((5288 . 5289) (t 25556 63360 301528 230000)) nil (25556 63362 742985 76000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5288) (undo-tree-id6344 . -1) 5289) nil (25556 63362 742983 512000) 0 nil])
([nil nil ((5287 . 5289) (#(" " 0 1 (fontified t)) . 5287) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) 5288) nil (25556 63362 742978 662000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5295) (undo-tree-id6345 . -1) (#("(" 0 1 (fontified t)) . -5296) (undo-tree-id6346 . -1) (#("*" 0 1 (fontified t)) . -5297) (undo-tree-id6347 . -1) (#("h" 0 1 (fontified t)) . -5298) (undo-tree-id6348 . -1) (#("e" 0 1 (fontified t)) . -5299) (undo-tree-id6349 . -1) (#("a" 0 1 (fontified t)) . -5300) (undo-tree-id6350 . -1) (#("d" 0 1 (fontified t)) . -5301) (undo-tree-id6351 . -1) (#(")" 0 1 (rear-nonsticky t fontified t)) . -5302) (undo-tree-id6352 . -1) 5303 (t 25556 63362 805519 923000)) nil (25556 63367 881872 982000) 0 nil])
([nil nil ((5295 . 5301)) nil (25556 63367 881854 750000) 0 nil])
([nil nil ((5295 . 5296) (t 25556 63367 957502 819000)) nil (25556 63371 264844 732000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5319) (undo-tree-id6353 . -1) (#("(" 0 1 (fontified t)) . -5320) (undo-tree-id6354 . -1) (#("*" 0 1 (fontified t)) . -5321) (undo-tree-id6355 . -1) (#("h" 0 1 (fontified t)) . -5322) (undo-tree-id6356 . -1) (#("e" 0 1 (fontified t)) . -5323) (undo-tree-id6357 . -1) (#("a" 0 1 (fontified t)) . -5324) (undo-tree-id6358 . -1) (#("d" 0 1 (fontified t)) . -5325) (undo-tree-id6359 . -1) (#(")" 0 1 (rear-nonsticky t fontified t)) . -5326) (undo-tree-id6360 . -1) 5327 (t 25556 63371 325491 631000)) nil (25556 63379 379765 291000) 0 nil])
([nil nil ((5319 . 5325)) nil (25556 63379 379747 260000) 0 nil])
([nil nil ((5319 . 5320) (t 25556 63379 441464 653000)) nil (25556 63386 728821 9000) 0 nil])
([nil nil ((5380 . 5384)) nil (25556 63386 728820 169000) 0 nil])
([nil nil ((5384 . 5385)) nil (25556 63386 728819 432000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5384) (undo-tree-id6361 . -1) 5385) nil (25556 63386 728818 73000) 0 nil])
([nil nil ((5384 . 5392)) nil (25556 63386 728809 245000) 0 nil])
([nil nil ((5392 . 5393)) nil (25556 63386 728805 46000) 0 nil])
([nil nil ((#("int8_t Regex_JumpToSpace(char** head)
" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-function-name-face) 8 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t) 37 38 (rear-nonsticky t fontified t)) . 5226) (undo-tree-id6362 . -38) (undo-tree-id6363 . -25) (undo-tree-id6364 . -37) (undo-tree-id6365 . -38) (t 25556 63386 793440 186000)) nil (25556 63402 558830 35000) 0 nil])
([nil nil ((nil fontified nil 5263 . 5264) (nil fontified nil 5262 . 5263) (nil fontified nil 5261 . 5262) (nil fontified nil 5260 . 5261) (nil fontified nil 5259 . 5260) (nil fontified nil 5258 . 5259) (nil fontified nil 5257 . 5258) (nil fontified nil 5256 . 5257) (nil fontified nil 5255 . 5256) (nil fontified nil 5254 . 5255) (nil fontified nil 5253 . 5254) (nil fontified nil 5252 . 5253) (nil fontified nil 5251 . 5252) (nil fontified nil 5250 . 5251) (nil fontified nil 5249 . 5250) (nil fontified nil 5248 . 5249) (nil fontified nil 5247 . 5248) (nil fontified nil 5246 . 5247) (nil fontified nil 5245 . 5246) (nil fontified nil 5234 . 5245) (nil fontified nil 5233 . 5234) (nil fontified nil 5232 . 5233) (nil fontified nil 5231 . 5232) (nil fontified nil 5230 . 5231) (nil fontified nil 5229 . 5230) (nil fontified nil 5228 . 5229) (nil fontified nil 5227 . 5228) (nil fontified nil 5226 . 5227) (5226 . 5264) (t 25556 63402 625387 437000)) nil (25556 63403 538562 363000) 0 nil])
([nil nil ((2785 . 2790) (t 25556 63403 589384 220000)) nil (25556 63447 52580 549000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -2789) (undo-tree-id6380 . -1) 2790) nil (25556 63447 52579 520000) 0 nil])
([nil nil ((2789 . 2793)) nil (25556 63447 52578 184000) 0 nil])
([nil nil ((2789 . 2806) (#("Rege" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2789) (undo-tree-id6379 . -4) 2793) nil (25556 63447 52577 318000) 0 nil])
([nil nil ((2806 . 2807)) nil (25556 63447 52575 771000) 0 nil])
([nil nil ((2807 . 2808)) nil (25556 63447 52575 42000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -2806) (undo-tree-id6377 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2807) (undo-tree-id6378 . -1) 2808) nil (25556 63447 52574 74000) 0 nil])
([nil nil ((2806 . 2808)) nil (25556 63447 52550 134000) 0 nil])
([nil nil ((2808 . 2809)) nil (25556 63447 52549 453000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -2806) (undo-tree-id6374 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -2807) (undo-tree-id6375 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2808) (undo-tree-id6376 . -1) 2809) nil (25556 63447 52548 336000) 0 nil])
([nil nil ((2806 . 2808)) nil (25556 63447 52545 174000) 0 nil])
([nil nil ((2807 . 2811)) nil (25556 63447 52544 500000) 0 nil])
([nil nil ((2812 . 2813)) nil (25556 63447 52543 879000) 0 nil])
([nil nil ((2789 . 2791)) nil (25556 63447 52542 783000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -2789) (undo-tree-id6372 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -2790) (undo-tree-id6373 . -1) 2791) nil (25556 63447 52541 892000) 0 nil])
([nil nil ((2789 . 2792)) nil (25556 63447 52539 153000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t ws-butler-chg chg)) . -2789) (undo-tree-id6369 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -2790) (undo-tree-id6370 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -2791) (undo-tree-id6371 . -1) 2792) nil (25556 63447 52538 30000) 0 nil])
([nil nil ((2352 . 2358)) nil (25556 63447 52519 840000) 0 nil])
([nil nil ((2358 . 2363)) nil (25556 63447 52519 163000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2361) (undo-tree-id6367 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2362) (undo-tree-id6368 . -1) 2363) nil (25556 63447 52518 91000) 0 nil])
([nil nil ((2361 . 2365)) nil (25556 63447 52515 503000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg chg fontified t)) . -2364) (undo-tree-id6366 . -1) 2365) nil (25556 63447 52513 312000) 0 nil])
([nil nil ((2364 . 2365)) nil (25556 63447 52503 530000) 0 nil])
([nil nil ((2365 . 2366) (t 25556 63447 109238 685000)) nil (25556 63448 994604 80000) 0 nil])
([nil nil ((2366 . 2367)) nil (25556 63448 994599 187000) 0 nil])
([nil nil ((2367 . 2370) (t 25556 63449 57232 156000)) nil (25556 63453 959847 935000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2368) (undo-tree-id6381 . -2) (undo-tree-id6382 . -2) (undo-tree-id6383 . -2) (undo-tree-id6384 . -2) 2370) nil (25556 63453 959843 715000) 0 nil])
([nil nil ((2368 . 2370) 2370 (t 25556 63454 17215 524000)) nil (25556 63464 173569 36000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2368) (undo-tree-id6385 . -2) (undo-tree-id6386 . -2) (undo-tree-id6387 . -2) (undo-tree-id6388 . -2) (undo-tree-id6389 . -2) (undo-tree-id6390 . -2) 2370 (t 25556 63454 17215 524000)) nil (25556 63464 173564 239000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2361) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -2362) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -2363) (undo-tree-id6397 . -1) 2364 (t 25556 63464 225181 265000)) nil (25556 63473 169515 915000) 0 nil])
([nil nil ((2361 . 2364)) nil (25556 63473 169493 996000) 0 nil])
([nil nil ((2386 . 2390) (t 25556 63473 237150 987000)) nil (25556 63478 107337 963000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2484) (undo-tree-id6408 . -1) (#("e" 0 1 (fontified t)) . -2485) (undo-tree-id6409 . -1) (#("a" 0 1 (fontified t)) . -2486) (undo-tree-id6410 . -1) (#("d" 0 1 (fontified t)) . -2487) (undo-tree-id6411 . -1) 2488 (t 25556 63478 169134 405000)) nil (25556 63484 312710 126000) 0 nil])
([nil nil ((2484 . 2486)) nil (25556 63484 312705 972000) 0 nil])
([nil nil ((2486 . 2487)) nil (25556 63484 312705 60000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -2489) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (#("U" 0 1 (fontified t)) . -2490) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (#("L" 0 1 (fontified t)) . -2491) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -2492) (undo-tree-id6407 . -1) 2493) nil (25556 63484 312702 615000) 0 nil])
([nil nil ((2489 . 2491)) nil (25556 63484 312682 667000) 0 nil])
([nil nil ((2806 . 2810) (t 25556 63484 369113 549000)) nil (25556 63498 23194 389000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2809) (undo-tree-id6414 . -1) 2810) nil (25556 63498 23193 258000) 0 nil])
([nil nil ((2809 . 2811)) nil (25556 63498 23191 630000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t ws-butler-chg chg)) . -2809) (undo-tree-id6412 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2810) (undo-tree-id6413 . -1) 2811) nil (25556 63498 23189 674000) 0 nil])
([nil nil ((2809 . 2811)) nil (25556 63498 23176 153000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2809) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (#("=" 0 1 (fontified t)) . -2810) (undo-tree-id6442 . -1) 2811 (t 25556 63498 85067 363000)) nil (25556 63507 231462 369000) 0 nil])
([nil nil ((2809 . 2810)) nil (25556 63507 231458 212000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2805) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (#("e" 0 1 (fontified t)) . -2806) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (#("o" 0 1 (fontified t)) . -2807) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (#("f" 0 1 (fontified t)) . -2808) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -2809) (undo-tree-id6438 . -1) 2810) nil (25556 63507 231452 948000) 0 nil])
([nil nil ((2805 . 2806) (t 25556 63507 289036 332000)) nil (25556 63508 107182 996000) 0 nil])
([nil nil ((#("int8_t eof=0;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 2354) (undo-tree-id6449 . -13) (t 25556 63508 173033 351000)) nil (25556 63516 206291 238000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 2352) (undo-tree-id6443 . -2) (undo-tree-id6444 . -2) (undo-tree-id6445 . -2) (undo-tree-id6446 . -2) (undo-tree-id6447 . -2) (undo-tree-id6448 . -2) 2354) nil (25556 63516 206286 231000) 0 nil])
([nil nil ((2352 . 2354) 2354 (t 25556 63516 273006 20000)) nil (25556 63519 899762 187000) 0 nil])
([nil nil ((#("  eof=Regex_JumpToLetter(head);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (rear-nonsticky t fontified t)) . 2371) (undo-tree-id6460 . -2) (undo-tree-id6461 . -31) (undo-tree-id6462 . -31) (t 25556 63516 273006 20000)) nil (25556 63519 899760 420000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 2367) (undo-tree-id6450 . -2) (undo-tree-id6451 . -2) (undo-tree-id6452 . -2) (undo-tree-id6453 . -2) (undo-tree-id6454 . -2) (undo-tree-id6455 . -2) (undo-tree-id6456 . -2) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2352) (undo-tree-id6457 . -2) (undo-tree-id6458 . -2) (undo-tree-id6459 . -2) 2371) nil (25556 63519 899754 159000) 0 nil])
([nil nil ((2367 . 2369) 2371 (t 25556 63519 956993 584000)) nil (25556 63521 11818 738000) 0 nil])
([nil nil ((nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2376 . 2394) (nil fontified nil 2375 . 2376) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (2369 . 2400) (t 25556 63519 956993 584000)) nil (25556 63521 11813 112000) 0 nil])
([nil nil ((#("Regex_JumpToLetter(head)" 0 1 (fontified t) 1 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 2375) (undo-tree-id6503 . -24) (undo-tree-id6504 . -24) (undo-tree-id6505 . -24) (undo-tree-id6506 . -24) (undo-tree-id6507 . -24) (t 25556 63521 76989 802000)) nil (25556 63527 424956 465000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2445) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (#("o" 0 1 (fontified t)) . -2446) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (#("f" 0 1 (fontified t)) . -2447) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (#("=" 0 1 (fontified t)) . -2448) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (#("=" 0 1 (fontified t)) . -2449) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (#("-" 0 1 (fontified t)) . -2450) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (#("1" 0 1 (fontified t)) . -2451) (undo-tree-id6502 . -1) 2452) nil (25556 63527 424949 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2468 . 2469) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2446 . 2464) (nil fontified nil 2445 . 2446) (2445 . 2469)) nil (25556 63527 424910 584000) 0 nil])
([nil nil ((2469 . 2471) (t 25556 63527 484968 154000)) nil (25556 63531 317442 448000) 0 nil])
([nil nil ((2471 . 2473)) nil (25556 63531 317437 840000) 0 nil])
([nil nil ((#("eof=;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (rear-nonsticky t fontified t)) . 2371) (undo-tree-id6515 . -4) (undo-tree-id6516 . -5) (t 25556 63531 368955 26000)) nil (25556 63535 994804 429000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2367) (undo-tree-id6508 . -4) (undo-tree-id6509 . -2) (undo-tree-id6510 . -4) (undo-tree-id6511 . -4) (undo-tree-id6512 . -4) (undo-tree-id6513 . -4) (undo-tree-id6514 . -4) 2371) nil (25556 63535 994798 578000) 0 nil])
([nil nil ((2367 . 2371) 2371 (t 25556 63536 60939 160000)) nil (25556 63543 952490 207000) 0 nil])
([nil nil ((#("printf(\" Head Jumped To Character %c \\n\" , *(*head) );" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t)) . 2377) (undo-tree-id6664 . -54) (t 25556 63536 60939 160000)) nil (25556 63543 952489 136000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2371) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (#("
" 0 1 (fontified t)) . -2372) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (#(" " 0 1 (fontified t)) . -2373) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (#(" " 0 1 (fontified t)) . -2374) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (#(" " 0 1 (fontified t)) . -2375) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (#(" " 0 1 (fontified t)) . -2376) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) 2377) nil (25556 63543 952485 604000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2365) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (#("
" 0 1 (fontified t)) . -2366) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2367) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2368) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2369) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2370) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) 2371) nil (25556 63543 952452 190000) 0 nil])
([nil nil ((2450 . 2455)) nil (25556 63543 952347 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2508 . 2509) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (2455 . 2509)) nil (25556 63543 952341 132000) 0 nil])
([nil nil ((2509 . 2514) (t 25556 63544 8912 274000)) nil (25556 63544 710566 611000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2510) (undo-tree-id6665 . -4) (undo-tree-id6666 . -4) (undo-tree-id6667 . -4) (undo-tree-id6668 . -4) 2514) nil (25556 63544 710562 462000) 0 nil])
([nil nil ((2510 . 2514) 2514 (t 25556 63544 776909 673000)) nil (25556 63560 983354 902000) 0 nil])
([nil nil ((2514 . 2515) (t 25556 63544 776909 673000)) nil (25556 63566 9245 92000) 0 nil] [nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2510) (undo-tree-id6670 . -4) (undo-tree-id6671 . -4) (undo-tree-id6672 . -4) (undo-tree-id6673 . -4) (undo-tree-id6674 . -4) (undo-tree-id6675 . -4) 2514 (t 25556 63544 776909 673000)) ((nil ws-butler-chg delete 2514 . 2515) (2510 . 2514)) (25556 63560 644819 104000) 0 nil])
([nil nil ((#("     " 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . 2510) (undo-tree-id6676 . -4) (undo-tree-id6677 . -4) 2521) nil (25556 63566 9240 554000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg delete)) . 2515) (#("r" 0 1 (fontified t ws-butler-chg delete)) . 2515) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 2515) (#("w" 0 1 (fontified t ws-butler-chg delete)) . 2515) (#("_" 0 1 (fontified t ws-butler-chg delete)) . 2515) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 2515) (#("i" 0 1 (fontified t)) . 2515) (undo-tree-id6669 . -1)) ((nil ws-butler-chg delete 2516 . 2517) (2515 . 2516) (nil ws-butler-chg delete 2516 . 2517) (2515 . 2516) (nil ws-butler-chg delete 2516 . 2517) (2515 . 2516) (nil ws-butler-chg delete 2516 . 2517) (2515 . 2516) (nil ws-butler-chg delete 2516 . 2517) (2515 . 2516) (nil ws-butler-chg delete 2516 . 2517) (2515 . 2516) (nil ws-butler-chg delete 2516 . 2517) (2515 . 2516)) (25556 63557 552174 853000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2509) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) 2510 (t 25556 63566 96837 448000)) nil (25556 63568 64823 394000) 0 nil])
nil
([nil nil ((2509 . 2514)) nil (25556 63568 64817 347000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2510) (undo-tree-id6678 . -4) (undo-tree-id6679 . -4) (undo-tree-id6680 . -4) (undo-tree-id6681 . -4) 2514) nil (25556 63568 64813 532000) 0 nil])
([nil nil ((2510 . 2514) 2514 (t 25556 63568 120830 584000)) nil (25556 63575 912516 995000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2510) (undo-tree-id6696 . -4) (undo-tree-id6697 . -4) (undo-tree-id6698 . -4) (undo-tree-id6699 . -4) (undo-tree-id6700 . -4) (undo-tree-id6701 . -4) 2514 (t 25556 63568 120830 584000)) nil (25556 63575 912515 186000) 0 nil])
([nil nil ((#("if(Regex_JumpToLetter(head)!=-1){ printf(\" Couldnt Find Object\"); return -1; }" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 4 (fontified t) 4 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (rear-nonsticky t fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 41 (fontified t) 41 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 59 (fontified t face font-lock-string-face) 59 63 (fontified t face font-lock-string-face) 63 66 (fontified t) 66 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 78 (fontified t)) . 2371) (undo-tree-id6688 . -78) (undo-tree-id6689 . -78) (undo-tree-id6690 . -78) (undo-tree-id6691 . -78) (undo-tree-id6692 . -78) (undo-tree-id6693 . -78) (undo-tree-id6694 . -3) (undo-tree-id6695 . -78)) nil (25556 63575 912472 337000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2448 . 2449) (nil fontified nil 2447 . 2449) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2437 . 2443) (nil fontified nil 2434 . 2437) (nil fontified nil 2430 . 2434) (nil fontified nil 2423 . 2430) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2420 . 2421) (nil fontified nil 2419 . 2420) (nil fontified nil 2412 . 2419) (nil fontified nil 2404 . 2412) (nil fontified nil 2403 . 2404) (nil fontified nil 2402 . 2403) (nil fontified nil 2401 . 2402) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2393 . 2394) (nil fontified nil 2375 . 2393) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (2371 . 2449)) nil (25556 63575 912454 182000) 0 nil])
([nil nil ((2772 . 2777) (t 25556 63575 980803 917000)) nil (25556 63578 782710 357000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2854 . 2855) (nil fontified nil 2853 . 2855) (nil fontified nil 2852 . 2853) (nil fontified nil 2851 . 2852) (nil fontified nil 2850 . 2851) (nil fontified nil 2849 . 2850) (nil fontified nil 2843 . 2849) (nil fontified nil 2840 . 2843) (nil fontified nil 2836 . 2840) (nil fontified nil 2829 . 2836) (nil fontified nil 2828 . 2829) (nil fontified nil 2827 . 2828) (nil fontified nil 2826 . 2827) (nil fontified nil 2825 . 2826) (nil fontified nil 2818 . 2825) (nil fontified nil 2810 . 2818) (nil fontified nil 2809 . 2810) (nil fontified nil 2808 . 2809) (nil fontified nil 2807 . 2808) (nil fontified nil 2806 . 2807) (nil fontified nil 2805 . 2806) (nil fontified nil 2804 . 2805) (nil fontified nil 2803 . 2804) (nil fontified nil 2802 . 2803) (nil fontified nil 2801 . 2802) (nil fontified nil 2800 . 2801) (nil fontified nil 2799 . 2800) (nil fontified nil 2781 . 2799) (nil fontified nil 2780 . 2781) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (2777 . 2855)) nil (25556 63578 782704 266000) 0 nil])
([nil nil ((#("Regex_JumpToSpace(head);" 0 1 (fontified t) 1 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 2860) (undo-tree-id6707 . -24) (t 25556 63578 836794 226000)) nil (25556 63580 485077 92000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2856) (undo-tree-id6702 . -4) (undo-tree-id6703 . -4) (undo-tree-id6704 . -4) (undo-tree-id6705 . -4) (undo-tree-id6706 . -4) 2860) nil (25556 63580 485058 702000) 0 nil])
([nil nil ((2856 . 2860) 2860 (t 25556 63580 540788 439000)) nil (25556 63586 559628 361000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2859) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) 2860 (t 25556 63580 540788 439000)) nil (25556 63586 559627 19000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2775) (undo-tree-id6730 . -1) 2776) nil (25556 63586 559623 521000) 0 nil])
([nil nil ((2774 . 2778) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . 2774) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (2773 . 2774) (#("  " 0 2 (fontified t)) . 2773) (undo-tree-id6728 . -2) (undo-tree-id6729 . -2) 2775) nil (25556 63586 559621 201000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2857) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2858) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2859) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) 2860) nil (25556 63586 559612 974000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-string-face)) . -2821) (undo-tree-id6740 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2822) (undo-tree-id6741 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -2823) (undo-tree-id6742 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -2824) (undo-tree-id6743 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -2825) (undo-tree-id6744 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2826) (undo-tree-id6745 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2827) (undo-tree-id6746 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2828) (undo-tree-id6747 . -1) (#("F" 0 1 (fontified t face font-lock-string-face)) . -2829) (undo-tree-id6748 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2830) (undo-tree-id6749 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2831) (undo-tree-id6750 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -2832) (undo-tree-id6751 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2833) (undo-tree-id6752 . -1) (#("O" 0 1 (fontified t face font-lock-string-face)) . -2834) (undo-tree-id6753 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -2835) (undo-tree-id6754 . -1) (#("j" 0 1 (fontified t face font-lock-string-face)) . -2836) (undo-tree-id6755 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -2837) (undo-tree-id6756 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -2838) (undo-tree-id6757 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2839) (undo-tree-id6758 . -1) 2840 (t 25556 63586 624767 781000)) nil (25556 63596 71403 355000) 0 nil])
([nil nil ((2821 . 2828)) nil (25556 63596 71386 113000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2825) (undo-tree-id6737 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2826) (undo-tree-id6738 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2827) (undo-tree-id6739 . -1) 2828) nil (25556 63596 71385 35000) 0 nil])
([nil nil ((2825 . 2833)) nil (25556 63596 71381 901000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2831) (undo-tree-id6735 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2832) (undo-tree-id6736 . -1) 2833) nil (25556 63596 71379 714000) 0 nil])
([nil nil ((2831 . 2840)) nil (25556 63596 71367 200000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -2793) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (#("e" 0 1 (fontified t)) . -2794) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (#("t" 0 1 (fontified t)) . -2795) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (#("t" 0 1 (fontified t)) . -2796) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (#("e" 0 1 (fontified t)) . -2797) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (#("r" 0 1 (fontified t)) . -2798) (undo-tree-id6774 . -1) 2799 (t 25556 63596 132735 476000)) nil (25556 63603 375257 423000) 0 nil])
([nil nil ((2793 . 2798)) nil (25556 63603 375228 276000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2353) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) 2354 (t 25556 63603 432710 654000)) nil (25556 63794 95445 370000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -2397) (undo-tree-id6777 . -1) 2398 (t 25556 63794 160057 771000)) nil (25556 63825 518354 677000) 0 nil])
([nil nil ((2397 . 2398)) nil (25556 63825 518342 355000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -2803) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) 2804 (t 25556 63825 575949 543000)) nil (25556 63861 808296 187000) 0 nil])
([nil nil ((2803 . 2804)) nil (25556 63861 808281 927000) 0 nil])
([nil nil ((2548 . 2558) (t 25556 63861 871824 288000)) nil (25556 63945 756755 264000) 0 nil])
([nil nil ((2558 . 2560)) nil (25556 63945 756754 344000) 0 nil])
([nil nil ((2560 . 2561) (nil syntax-table nil 2561 . 2562) (nil syntax-table (1) 2559 . 2560) (2559 . 2560)) nil (25556 63945 756753 484000) 0 nil])
([nil nil ((2561 . 2562)) nil (25556 63945 756752 278000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2561) (undo-tree-id6783 . -1) 2562) nil (25556 63945 756751 146000) 0 nil])
([nil nil ((2577 . 2579) (nil syntax-table nil 2579 . 2580) (nil syntax-table (1) 2559 . 2560) (2560 . 2577)) nil (25556 63945 756749 236000) 0 nil])
([nil nil ((2580 . 2581)) nil (25556 63945 756748 154000) 0 nil])
([nil nil ((2581 . 2582)) nil (25556 63945 756747 359000) 0 nil])
([nil nil ((2582 . 2586)) nil (25556 63945 756746 537000) 0 nil])
([nil nil ((2582 . 2589) (#("is_w" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2582) (undo-tree-id6781 . -4) (undo-tree-id6782 . -4) 2586) nil (25556 63945 756744 596000) 0 nil])
([nil nil ((2590 . 2591)) nil (25556 63945 756733 388000) 0 nil])
([nil nil ((2547 . 2552) (t 25556 63945 819533 754000)) nil (25556 63946 437659 119000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2548) (undo-tree-id6784 . -4) (undo-tree-id6785 . -4) (undo-tree-id6786 . -4) (undo-tree-id6787 . -4) 2552) nil (25556 63946 437654 973000) 0 nil])
([nil nil ((2548 . 2552) 2552 (t 25556 63946 495531 411000)) nil (25556 63947 473133 535000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2548) (undo-tree-id6792 . -4) (undo-tree-id6793 . -4) (undo-tree-id6794 . -4) (undo-tree-id6795 . -4) (undo-tree-id6796 . -4) (undo-tree-id6797 . -4) 2552 (t 25556 63946 495531 411000)) nil (25556 63947 473131 932000) 0 nil])
([nil nil ((2592 . 2597)) nil (25556 63947 473125 723000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2593) (undo-tree-id6788 . -4) (undo-tree-id6789 . -4) (undo-tree-id6790 . -4) (undo-tree-id6791 . -4) 2597) nil (25556 63947 473121 787000) 0 nil])
([nil nil ((2593 . 2597) 2597 (t 25556 63947 535527 804000)) nil (25556 63992 877669 698000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2593) (undo-tree-id6798 . -4) 2597 (t 25556 63947 535527 804000)) nil (25556 63992 877668 132000) 0 nil])
([nil nil ((1868 . 1870)) nil (25556 63992 877659 427000) 0 nil])
([nil nil ((1907 . 1909)) nil (25556 63992 877658 765000) 0 nil])
([nil nil ((1939 . 1941)) nil (25556 63992 877658 109000) 0 nil])
([nil nil ((1868 . 1869)) nil (25556 63992 877657 292000) 0 nil])
([nil nil ((1908 . 1909)) nil (25556 63992 877656 14000) 0 nil])
([nil nil ((1941 . 1942)) nil (25556 63992 877651 736000) 0 nil])
([nil nil ((#("(*head)++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 5521) (undo-tree-id6799 . -10) (t 25556 63992 935370 249000)) nil (25556 64021 815440 464000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5530 . 5531) (nil fontified nil 5530 . 5531) (nil fontified nil 5529 . 5530) (nil fontified nil 5528 . 5529) (nil fontified nil 5527 . 5528) (nil fontified nil 5526 . 5527) (nil fontified nil 5525 . 5526) (nil fontified nil 5524 . 5525) (nil fontified nil 5523 . 5524) (nil fontified nil 5522 . 5523) (nil fontified nil 5521 . 5522) (5521 . 5531)) nil (25556 64021 815428 368000) 0 nil])
([nil nil ((5536 . 5537) (t 25556 64021 887269 651000)) nil (25556 64023 907036 701000) 0 nil])
([nil nil ((5536 . 5538) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 5536) (undo-tree-id6805 . -1) 5537) nil (25556 64023 907035 46000) 0 nil])
([nil nil ((5538 . 5539)) nil (25556 64023 907031 359000) 0 nil])
([nil nil ((5537 . 5538) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg)) . 5537) (undo-tree-id6800 . -2) (undo-tree-id6801 . -2) (undo-tree-id6802 . -2) (undo-tree-id6803 . -2) (undo-tree-id6804 . -2) (nil rear-nonsticky nil 5548 . 5549) (nil fontified nil 5548 . 5549) (nil fontified nil 5547 . 5548) (nil fontified nil 5546 . 5547) (nil fontified nil 5545 . 5546) (nil fontified nil 5544 . 5545) (nil fontified nil 5543 . 5544) (nil fontified nil 5542 . 5543) (nil fontified nil 5541 . 5542) (nil fontified nil 5540 . 5541) (nil fontified nil 5539 . 5540) (5539 . 5549)) nil (25556 64023 907027 320000) 0 nil])
([nil nil ((5538 . 5539) (t 25556 64023 963262 433000)) nil (25556 64026 82727 573000) 0 nil])
([nil nil ((#("(*head)++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t rear-nonsticky t)) . 5539) (undo-tree-id6866 . -10) (undo-tree-id6867 . -10) (undo-tree-id6868 . -10) (undo-tree-id6869 . -10) (undo-tree-id6870 . -10) (undo-tree-id6871 . -10) (undo-tree-id6872 . -10) (t 25556 64026 147254 841000)) nil (25556 64034 363313 663000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5535) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (#("
" 0 1 (fontified t)) . -5536) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (#(" " 0 1 (fontified t)) . -5537) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (#(" " 0 1 (fontified t)) . -5538) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) 5539) nil (25556 64034 363301 962000) 0 nil])
([nil nil ((5535 . 5537) (t 25556 64034 431226 43000)) nil (25556 64035 192307 347000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5536) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) 5537) nil (25556 64035 192303 302000) 0 nil])
([nil nil ((5536 . 5537) 5537 (t 25556 64035 247223 204000)) nil (25556 64036 867237 466000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5536) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) 5537 (t 25556 64035 247223 204000)) nil (25556 64036 867232 855000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t face font-lock-string-face)) . -1820) (undo-tree-id6883 . -1) 1821 (t 25556 64036 931217 346000)) nil (25556 64055 362370 6000) 0 nil])
([nil nil ((1820 . 1821)) nil (25556 64055 362359 129000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t face font-lock-string-face)) . -1815) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) 1816 (t 25556 64055 435152 969000)) nil (25556 64068 70447 973000) 0 nil])
([nil nil ((1815 . 1816)) nil (25556 64068 70433 404000) 0 nil])
([nil nil ((2721 . 2722) (t 25556 64068 131108 778000)) nil (25556 64231 500907 735000) 0 nil])
([nil nil ((2727 . 2728)) nil (25556 64231 500906 730000) 0 nil])
([nil nil ((2728 . 2730)) nil (25556 64231 500905 459000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -2728) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -2729) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) 2730) nil (25556 64231 500901 357000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2727) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) 2728 (t 25556 64231 570538 399000)) nil (25556 64232 272654 9000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2721) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) 2722 (t 25556 64232 326535 754000)) nil (25556 64233 626596 688000) 0 nil])
([nil nil ((2701 . 2708) (t 25556 64233 694530 971000)) nil (25556 64277 286279 971000) 0 nil])
([nil nil ((2708 . 2709)) nil (25556 64277 286279 208000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg chg)) . -2708) (undo-tree-id6913 . -1) 2709) nil (25556 64277 286278 491000) 0 nil])
([nil nil ((2708 . 2710)) nil (25556 64277 286277 116000) 0 nil])
([nil nil ((2709 . 2710)) nil (25556 64277 286276 543000) 0 nil])
([nil nil ((2710 . 2714)) nil (25556 64277 286275 932000) 0 nil])
([nil nil ((2715 . 2717)) nil (25556 64277 286275 205000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg)) . -2716) (undo-tree-id6912 . -1) 2717) nil (25556 64277 286274 481000) 0 nil])
([nil nil ((2716 . 2718)) nil (25556 64277 286273 133000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t ws-butler-chg chg)) . -2717) (undo-tree-id6911 . -1) 2718) nil (25556 64277 286272 383000) 0 nil])
([nil nil ((2717 . 2722)) nil (25556 64277 286270 874000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -2717) (undo-tree-id6906 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -2718) (undo-tree-id6907 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2719) (undo-tree-id6908 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2720) (undo-tree-id6909 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -2721) (undo-tree-id6910 . -1) 2722) nil (25556 64277 286269 361000) 0 nil])
([nil nil ((2717 . 2723)) nil (25556 64277 286263 497000) 0 nil])
([nil nil ((2717 . 2724) (#("is_wor" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -2717) (undo-tree-id6904 . -6) (undo-tree-id6905 . -6) 2723) nil (25556 64277 286261 699000) 0 nil])
([nil nil ((2724 . 2725)) nil (25556 64277 286248 757000) 0 nil])
([nil nil ((2725 . 2732) (t 25556 64277 342378 251000)) nil (25556 64296 884662 937000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 2726) (undo-tree-id6914 . -6) (undo-tree-id6915 . -6) (undo-tree-id6916 . -6) (undo-tree-id6917 . -6) 2732) nil (25556 64296 884658 218000) 0 nil])
([nil nil ((2726 . 2732) 2732 (t 25556 64296 946309 622000)) nil (25556 64298 2381 36000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 2726) (undo-tree-id6920 . -6) (undo-tree-id6921 . -6) (undo-tree-id6922 . -6) (undo-tree-id6923 . -6) (undo-tree-id6924 . -6) (undo-tree-id6925 . -6) 2732 (t 25556 64296 946309 622000)) nil (25556 64298 2379 230000) 0 nil])
([nil nil ((2702 . 2709) (#("      " 0 6 (fontified t)) . 2702) (undo-tree-id6918 . -6) (undo-tree-id6919 . -6) 2708) nil (25556 64298 2370 439000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2726) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) 2727 (t 25556 64298 62305 715000)) nil (25556 64300 152343 465000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2701) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) 2702 (t 25556 64300 214298 181000)) nil (25556 64300 861187 359000) 0 nil])
([nil nil ((2708 . 2712) (t 25556 64300 934295 661000)) nil (25556 64384 521215 873000) 0 nil])
([nil nil ((2712 . 2713)) nil (25556 64384 521214 956000) 0 nil])
([nil nil ((2713 . 2719)) nil (25556 64384 521214 51000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2714) (undo-tree-id6936 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2715) (undo-tree-id6937 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2716) (undo-tree-id6938 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2717) (undo-tree-id6939 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -2718) (undo-tree-id6940 . -1) 2719) nil (25556 64384 521212 354000) 0 nil])
([nil nil ((2714 . 2725)) nil (25556 64384 521206 276000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2733) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) 2734) nil (25556 64384 521202 222000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2762) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (#("e" 0 1 (fontified t)) . -2763) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (#("a" 0 1 (fontified t)) . -2764) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (#("d" 0 1 (fontified t)) . -2765) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) 2766 (t 25556 64384 578002 531000)) nil (25556 64393 273923 87000) 0 nil])
([nil nil ((2762 . 2767)) nil (25556 64393 273915 670000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -2762) (undo-tree-id6946 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2763) (undo-tree-id6947 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2764) (undo-tree-id6948 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2765) (undo-tree-id6949 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -2766) (undo-tree-id6950 . -1) 2767) nil (25556 64393 273914 51000) 0 nil])
([nil nil ((2762 . 2772)) nil (25556 64393 273908 520000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2761) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) 2762) nil (25556 64393 273904 322000) 0 nil])
([nil nil ((1817 . 1818) (t 25556 64393 337971 807000)) nil (25556 64413 205819 587000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1817) (undo-tree-id6960 . -1) 1818) nil (25556 64413 205818 326000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t face font-lock-string-face)) . -1813) (undo-tree-id6959 . -1) 1814) nil (25556 64413 205815 289000) 0 nil])
([nil nil ((1816 . 1817)) nil (25556 64413 205804 474000) 0 nil])
([nil nil ((1832 . 1834) (t 25556 64413 265901 906000)) nil (25556 64449 95537 753000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg)) . -1832) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face c-in-sws t)) . -1833) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) 1834) nil (25556 64449 95533 621000) 0 nil])
([nil nil ((1832 . 1834) (t 25556 64449 153725 967000)) nil (25556 64451 496753 963000) 0 nil])
([nil nil ((1834 . 1835) (t 25556 64451 553704 620000)) nil (25556 64452 801839 8000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -4903) (undo-tree-id6972 . -1) 4904 (t 25556 64452 857693 38000)) nil (25556 64488 955572 505000) 0 nil])
([nil nil ((4903 . 4904)) nil (25556 64488 955570 368000) 0 nil])
([nil nil ((4904 . 4905)) nil (25556 64488 955569 647000) 0 nil])
([nil nil ((4905 . 4906)) nil (25556 64488 955568 843000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg chg)) . -4904) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -4905) (undo-tree-id6971 . -1) 4906) nil (25556 64488 955566 759000) 0 nil])
([nil nil ((4904 . 4905)) nil (25556 64488 955553 502000) 0 nil])
([nil nil ((5053 . 5056) (t 25556 64489 17378 103000)) nil (25556 64509 644067 591000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -5054) (undo-tree-id7135 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5055) (undo-tree-id7136 . -1) 5056) nil (25556 64509 644066 420000) 0 nil])
([nil nil ((5054 . 5062)) nil (25556 64509 644064 307000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -5059) (undo-tree-id7132 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5060) (undo-tree-id7133 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5061) (undo-tree-id7134 . -1) 5062) nil (25556 64509 644063 242000) 0 nil])
([nil nil ((5059 . 5064)) nil (25556 64509 644060 492000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -5054) (undo-tree-id7122 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5055) (undo-tree-id7123 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5056) (undo-tree-id7124 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -5057) (undo-tree-id7125 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -5058) (undo-tree-id7126 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5059) (undo-tree-id7127 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5060) (undo-tree-id7128 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5061) (undo-tree-id7129 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5062) (undo-tree-id7130 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5063) (undo-tree-id7131 . -1) 5064) nil (25556 64509 644058 359000) 0 nil])
([nil nil ((5054 . 5060)) nil (25556 64509 644049 881000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -5054) (undo-tree-id7116 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5055) (undo-tree-id7117 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5056) (undo-tree-id7118 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5057) (undo-tree-id7119 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -5058) (undo-tree-id7120 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5059) (undo-tree-id7121 . -1) 5060) nil (25556 64509 644048 299000) 0 nil])
([nil nil ((5054 . 5065)) nil (25556 64509 644031 759000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5052) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5053) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5054) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5055) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5056) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -5057) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5058) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -5059) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5060) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -5061) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5062) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5063) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -5064) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) 5065) nil (25556 64509 644021 998000) 0 nil])
([nil nil ((5052 . 5054) (t 25556 64509 701203 69000)) nil (25556 64510 447671 636000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5053) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) 5054) nil (25556 64510 447667 861000) 0 nil])
([nil nil ((5053 . 5054) 5054 (t 25556 64510 509196 303000)) nil (25556 64535 365508 238000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5053) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) 5054 (t 25556 64510 509196 303000)) nil (25556 64535 365503 941000) 0 nil])
([nil nil ((2159 . 2162) (t 25556 64535 424990 296000)) nil (25556 64562 262676 399000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2159) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2160) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2161) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) 2162) nil (25556 64562 262671 602000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1832) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (#("/" 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1833) (undo-tree-id7231 . -1) 1834 (t 25556 64562 324773 381000)) nil (25556 64577 300567 826000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete)) . 1870) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face)) . 1870)) nil (25556 64577 300562 885000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete)) . 1908) (#("/" 0 1 (c-in-sws t fontified t c-is-sws t face font-lock-comment-delimiter-face)) . 1908)) nil (25556 64577 300561 929000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg delete)) . 1939) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 1939)) nil (25556 64577 300560 966000) 0 nil])
([nil nil ((#(" Regex_GetObject(STRICT_WORD,&test);
  Regex_GetObject(STRICT_CHAR,&test);
  Regex_GetObject(CHAR,&test);
  Regex_GetObject(STRICT_WORD,&test);
" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 21 (fontified t) 21 23 (fontified t) 23 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t ws-butler-chg delete) 39 65 (fontified t) 65 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t ws-butler-chg delete) 77 78 (fontified t) 78 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t ws-butler-chg delete) 108 109 (fontified t) 109 132 (fontified t) 132 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t)) . 1832) (undo-tree-id7197 . -28) (undo-tree-id7198 . -129) (undo-tree-id7199 . -129) (undo-tree-id7200 . -129) (undo-tree-id7201 . -129) (undo-tree-id7202 . -129) (undo-tree-id7203 . -129) (undo-tree-id7204 . -36) (undo-tree-id7205 . -100) (undo-tree-id7206 . -74) (undo-tree-id7207 . -144) (undo-tree-id7208 . -37) (undo-tree-id7209 . -143) (undo-tree-id7210 . -36) (undo-tree-id7211 . -36) (undo-tree-id7212 . -38) (undo-tree-id7213 . -38) (undo-tree-id7214 . -38) (undo-tree-id7215 . -38) (undo-tree-id7216 . -76) (undo-tree-id7217 . -76) (undo-tree-id7218 . -76) (undo-tree-id7219 . -76) (undo-tree-id7220 . -107) (undo-tree-id7221 . -107) (undo-tree-id7222 . -107) (undo-tree-id7223 . -107) (undo-tree-id7224 . -144) (undo-tree-id7225 . -144) (undo-tree-id7226 . -144) 1976) nil (25556 64577 300558 890000) 0 nil])
([nil nil ((2007 . 2010)) nil (25556 64577 300539 979000) 0 nil])
([nil nil ((2008 . 2011) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 2008) (undo-tree-id7194 . -2) (undo-tree-id7195 . -2) (undo-tree-id7196 . -2) 2010) nil (25556 64577 300538 877000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2010) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) 2011) nil (25556 64577 300535 883000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2153 . 2154) (nil fontified nil 2153 . 2154) (nil fontified nil 2152 . 2153) (nil fontified nil 2147 . 2152) (nil fontified nil 2146 . 2147) (nil fontified nil 2145 . 2146) (nil fontified nil 2142 . 2145) (nil fontified nil 2119 . 2142) (nil fontified nil 2118 . 2119) (nil fontified nil 2117 . 2118) (nil fontified nil 2116 . 2117) (nil fontified nil 2115 . 2116) (nil fontified nil 2114 . 2115) (nil fontified nil 2110 . 2114) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2088 . 2108) (nil fontified nil 2087 . 2088) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2079 . 2083) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2075 . 2077) (nil fontified nil 2049 . 2075) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2041 . 2045) (nil fontified nil 2040 . 2041) (nil fontified nil 2039 . 2040) (nil fontified nil 2038 . 2039) (nil fontified nil 2037 . 2038) (nil fontified nil 2033 . 2037) (nil fontified nil 2031 . 2033) (nil fontified nil 2027 . 2031) (nil fontified nil 2026 . 2027) (nil fontified nil 2025 . 2026) (nil fontified nil 2012 . 2025) (nil fontified nil 2011 . 2012) (nil fontified nil 2010 . 2011) (2010 . 2154)) nil (25556 64577 300531 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . 1831) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) 2154) nil (25556 64577 300519 622000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2008) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (t 25556 64577 368654 444000)) nil (25556 64580 270819 542000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2045)) nil (25556 64580 270815 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2082)) nil (25556 64580 270814 980000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2112)) nil (25556 64580 270813 558000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -2148) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) 2149) nil (25556 64580 270809 452000) 0 nil])
([nil nil ((2148 . 2150) (t 25556 64580 332631 199000)) nil (25556 64594 450148 728000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2149) (undo-tree-id7255 . -1) 2150) nil (25556 64594 450147 659000) 0 nil])
([nil nil ((2007 . 2010)) nil (25556 64594 450145 993000) 0 nil])
([nil nil ((2010 . 2011)) nil (25556 64594 450145 276000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2007) (undo-tree-id7251 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2008) (undo-tree-id7252 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2009) (undo-tree-id7253 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2010) (undo-tree-id7254 . -1) 2011) nil (25556 64594 450143 808000) 0 nil])
([nil nil ((2007 . 2012)) nil (25556 64594 450139 672000) 0 nil])
([nil nil ((2012 . 2013)) nil (25556 64594 450138 908000) 0 nil])
([nil nil ((2013 . 2014)) nil (25556 64594 450138 185000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2013) (undo-tree-id7250 . -1) 2014) nil (25556 64594 450137 313000) 0 nil])
([nil nil ((2013 . 2014)) nil (25556 64594 450135 853000) 0 nil])
([nil nil ((2014 . 2020)) nil (25556 64594 450135 154000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2019) (undo-tree-id7249 . -1) 2020) nil (25556 64594 450134 343000) 0 nil])
([nil nil ((2019 . 2024)) nil (25556 64594 450132 694000) 0 nil])
([nil nil ((2020 . 2021)) nil (25556 64594 450131 988000) 0 nil])
([nil nil ((#("%" 0 1 (ws-butler-chg chg fontified t)) . -2020) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) 2021) nil (25556 64594 450130 445000) 0 nil])
([nil nil ((2020 . 2021)) nil (25556 64594 450115 221000) 0 nil])
([nil nil ((2025 . 2026)) nil (25556 64594 450114 375000) 0 nil])
([nil nil ((2026 . 2028)) nil (25556 64594 450113 477000) 0 nil])
([nil nil ((2027 . 2029) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 2027) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) 2028) nil (25556 64594 450111 772000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2028) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) 2029) nil (25556 64594 450089 203000) 0 nil])
([nil nil ((2028 . 2029) 2029 (t 25556 64594 520520 830000)) nil (25556 64595 850206 159000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2027) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2028) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) 2029 (t 25556 64594 520520 830000)) nil (25556 64595 850201 282000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2013) (undo-tree-id7267 . -1) 2014 (t 25556 64595 904510 138000)) nil (25556 64624 625445 611000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2019) (undo-tree-id7268 . -1) 2020 (t 25556 64624 676290 880000)) nil (25556 64626 276629 234000) 0 nil])
([nil nil ((2025 . 2027) (t 25556 64626 332278 434000)) nil (25556 64641 221164 772000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2026) (undo-tree-id7307 . -1) 2027) nil (25556 64641 221163 902000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2057) (undo-tree-id7303 . -1) (#("e" 0 1 (fontified t)) . -2058) (undo-tree-id7304 . -1) (#("s" 0 1 (fontified t)) . -2059) (undo-tree-id7305 . -1) (#("t" 0 1 (fontified t)) . -2060) (undo-tree-id7306 . -1) 2061) nil (25556 64641 221162 13000) 0 nil])
([nil nil ((2057 . 2061)) nil (25556 64641 221158 277000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2094) (undo-tree-id7299 . -1) (#("e" 0 1 (fontified t)) . -2095) (undo-tree-id7300 . -1) (#("s" 0 1 (fontified t)) . -2096) (undo-tree-id7301 . -1) (#("t" 0 1 (fontified t)) . -2097) (undo-tree-id7302 . -1) 2098) nil (25556 64641 221157 152000) 0 nil])
([nil nil ((2094 . 2096)) nil (25556 64641 221153 333000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -2094) (undo-tree-id7297 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -2095) (undo-tree-id7298 . -1) 2096) nil (25556 64641 221152 288000) 0 nil])
([nil nil ((2094 . 2098)) nil (25556 64641 221150 267000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2161) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (#("e" 0 1 (fontified t)) . -2162) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (#("s" 0 1 (fontified t)) . -2163) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (#("t" 0 1 (fontified t)) . -2164) (undo-tree-id7296 . -1) 2165) nil (25556 64641 221148 825000) 0 nil])
([nil nil ((2161 . 2165)) nil (25556 64641 221140 352000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2124) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (#("e" 0 1 (fontified t)) . -2125) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (#("s" 0 1 (fontified t)) . -2126) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (#("t" 0 1 (fontified t)) . -2127) (undo-tree-id7286 . -1) 2128) nil (25556 64641 221138 852000) 0 nil])
([nil nil ((2124 . 2128)) nil (25556 64641 221130 782000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -2124) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -2125) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2126) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2127) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) 2128) nil (25556 64641 221128 163000) 0 nil])
([nil nil ((2124 . 2128)) nil (25556 64641 221110 604000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2025) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) 2026 (t 25556 64641 288166 825000)) nil (25556 64642 611147 201000) 0 nil])
([nil nil ((1890 . 1892) (t 25556 64642 672156 570000)) nil (25556 64785 479587 221000) 0 nil])
([nil nil ((1892 . 1893)) nil (25556 64785 479573 211000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1892) (undo-tree-id7312 . -1) 1893) nil (25556 64785 479572 351000) 0 nil])
([nil nil ((1892 . 1896)) nil (25556 64785 479570 674000) 0 nil])
([nil nil ((1892 . 1894)) nil (25556 64785 479569 908000) 0 nil])
([nil nil ((1894 . 1900)) nil (25556 64785 479569 337000) 0 nil])
([nil nil ((#("void" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . 1900)) nil (25556 64785 479568 495000) 0 nil])
([nil nil ((1900 . 1904)) nil (25556 64785 479567 881000) 0 nil])
([nil nil ((1900 . 1910) (#("Test" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -1900) (undo-tree-id7311 . -4) 1904) nil (25556 64785 479566 872000) 0 nil])
([nil nil ((1910 . 1912)) nil (25556 64785 479564 832000) 0 nil])
([nil nil ((1912 . 1914)) nil (25556 64785 479549 587000) 0 nil])
([nil nil ((1912 . 1913)) nil (25556 64785 479548 963000) 0 nil])
([nil nil ((1914 . 1916)) nil (25556 64785 479548 405000) 0 nil])
([nil nil ((1915 . 1917)) nil (25556 64785 479547 644000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1916) (undo-tree-id7310 . -1) 1917) nil (25556 64785 479545 712000) 0 nil])
([nil nil ((1916 . 1919)) nil (25556 64785 479539 301000) 0 nil])
([nil nil ((1919 . 1924)) nil (25556 64785 479538 61000) 0 nil])
([nil nil ((1924 . 1925)) nil (25556 64785 479533 280000) 0 nil])
([nil nil ((1911 . 1917) (t 25556 64785 551157 783000)) nil (25556 64950 172648 364000) 0 nil])
([nil nil ((nil fontified nil 1911 . 1919) (1911 . 1919) (#("uint64" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -1911) (undo-tree-id7315 . -6) 1917) nil (25556 64950 172647 347000) 0 nil])
([nil nil ((1919 . 1924)) nil (25556 64950 172645 428000) 0 nil])
([nil nil ((1920 . 1927) (#("trig" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1920) (undo-tree-id7314 . -4) 1924) nil (25556 64950 172644 502000) 0 nil])
([nil nil ((1927 . 1928)) nil (25556 64950 172642 515000) 0 nil])
([nil nil ((1928 . 1929)) nil (25556 64950 172641 764000) 0 nil])
([nil nil ((1929 . 1930)) nil (25556 64950 172640 930000) 0 nil])
([nil nil ((1930 . 1931)) nil (25556 64950 172640 224000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -1930) (undo-tree-id7313 . -1) 1931) nil (25556 64950 172638 948000) 0 nil])
([nil nil ((1930 . 1933)) nil (25556 64950 172630 676000) 0 nil])
([nil nil ((1933 . 1934)) nil (25556 64950 172629 484000) 0 nil])
([nil nil ((1934 . 1939)) nil (25556 64950 172625 426000) 0 nil])
([nil nil ((1831 . 1837) (t 25556 64950 234128 15000)) nil (25556 64995 315924 26000) 0 nil])
([nil nil ((1832 . 1855) (#("Regex" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1832) (undo-tree-id7343 . -5) 1837) nil (25556 64995 315922 801000) 0 nil])
([nil nil ((1855 . 1857)) nil (25556 64995 315921 179000) 0 nil])
([nil nil ((1856 . 1860)) nil (25556 64995 315920 342000) 0 nil])
([nil nil ((1860 . 1861)) nil (25556 64995 315919 528000) 0 nil])
([nil nil ((1861 . 1862)) nil (25556 64995 315918 910000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -1861) (undo-tree-id7342 . -1) 1862) nil (25556 64995 315918 202000) 0 nil])
([nil nil ((1861 . 1865)) nil (25556 64995 315916 772000) 0 nil])
([nil nil ((1865 . 1866)) nil (25556 64995 315916 69000) 0 nil])
([nil nil ((1866 . 1867)) nil (25556 64995 315915 407000) 0 nil])
([nil nil ((1867 . 1868)) nil (25556 64995 315914 763000) 0 nil])
([nil nil ((1868 . 1869)) nil (25556 64995 315914 42000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t ws-butler-chg chg)) . -1868) (undo-tree-id7341 . -1) 1869) nil (25556 64995 315913 244000) 0 nil])
([nil nil ((1868 . 1871)) nil (25556 64995 315911 702000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1869) (undo-tree-id7339 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1870) (undo-tree-id7340 . -1) 1871) nil (25556 64995 315910 888000) 0 nil])
([nil nil ((1869 . 1870)) nil (25556 64995 315908 813000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -1869) (undo-tree-id7338 . -1) 1870) nil (25556 64995 315908 131000) 0 nil])
([nil nil ((1830 . 1832)) nil (25556 64995 315906 830000) 0 nil])
([nil nil ((1832 . 1837)) nil (25556 64995 315906 209000) 0 nil])
([nil nil ((1832 . 1844) (#("Regex" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1832) (undo-tree-id7337 . -5) 1837) nil (25556 64995 315905 389000) 0 nil])
([nil nil ((1844 . 1848)) nil (25556 64995 315903 888000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1844) (undo-tree-id7333 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1845) (undo-tree-id7334 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1846) (undo-tree-id7335 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1847) (undo-tree-id7336 . -1) 1848) nil (25556 64995 315902 353000) 0 nil])
([nil nil ((1844 . 1856)) nil (25556 64995 315898 652000) 0 nil])
([nil nil ((1856 . 1857)) nil (25556 64995 315898 11000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -1855) (undo-tree-id7331 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1856) (undo-tree-id7332 . -1) 1857) nil (25556 64995 315896 879000) 0 nil])
([nil nil ((1855 . 1856)) nil (25556 64995 315894 658000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -1855) (undo-tree-id7330 . -1) 1856) nil (25556 64995 315893 868000) 0 nil])
([nil nil ((1855 . 1856)) nil (25556 64995 315890 740000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1855) (undo-tree-id7329 . -1) 1856) nil (25556 64995 315889 863000) 0 nil])
([nil nil ((1855 . 1857)) nil (25556 64995 315888 464000) 0 nil])
([nil nil ((1853 . 1863) (#("Test" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -1853) (undo-tree-id7327 . -4) (undo-tree-id7328 . -4) 1857) nil (25556 64995 315887 571000) 0 nil])
([nil nil ((1863 . 1864)) nil (25556 64995 315885 39000) 0 nil])
([nil nil ((1864 . 1865)) nil (25556 64995 315884 320000) 0 nil])
([nil nil ((#("^" 0 1 (fontified t ws-butler-chg chg)) . -1863) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -1864) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) 1865) nil (25556 64995 315882 972000) 0 nil])
([nil nil ((1863 . 1864)) nil (25556 64995 315877 44000) 0 nil])
([nil nil ((1864 . 1866)) nil (25556 64995 315875 852000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1865) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) 1866) nil (25556 64995 315872 161000) 0 nil])
([nil nil ((1865 . 1866) 1866 (t 25556 64995 377863 700000)) nil (25556 65001 677384 113000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1865) (undo-tree-id7352 . -1) 1866 (t 25556 64995 377863 700000)) nil (25556 65001 677382 834000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -1903) (undo-tree-id7351 . -1) 1904) nil (25556 65001 677381 106000) 0 nil])
([nil nil ((1903 . 1905)) nil (25556 65001 677378 165000) 0 nil])
([nil nil ((1905 . 1906)) nil (25556 65001 677377 519000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1905) (undo-tree-id7350 . -1) 1906) nil (25556 65001 677376 797000) 0 nil])
([nil nil ((1905 . 1906)) nil (25556 65001 677375 147000) 0 nil])
([nil nil ((1903 . 1909) (#("act" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -1903) (undo-tree-id7348 . -3) (undo-tree-id7349 . -3) 1906) nil (25556 65001 677374 148000) 0 nil])
([nil nil ((1910 . 1911)) nil (25556 65001 677371 568000) 0 nil])
([nil nil ((1911 . 1913)) nil (25556 65001 677370 284000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1912) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) 1913) nil (25556 65001 677366 332000) 0 nil])
([nil nil ((1912 . 1913) 1913 (t 25556 65001 745826 954000)) nil (25556 65002 659670 891000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1911) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1912) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) 1913 (t 25556 65001 745826 954000)) nil (25556 65002 659665 793000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1892) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (#("x" 0 1 (fontified t)) . -1893) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (#("t" 0 1 (fontified t)) . -1894) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) 1895 (t 25556 65002 729821 289000)) nil (25556 65014 431603 680000) 0 nil])
([nil nil ((1892 . 1895)) nil (25556 65014 431557 242000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -1002) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) 1003 (t 25556 65014 489753 808000)) nil (25556 65043 897702 937000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -1971) (undo-tree-id7384 . -1) 1972 (t 25556 65043 965586 526000)) nil (25556 65047 963987 794000) 0 nil])
([nil nil ((2168 . 2172) (t 25556 65048 25563 683000)) nil (25556 65104 259388 514000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2169) (undo-tree-id7413 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2170) (undo-tree-id7414 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2171) (undo-tree-id7415 . -1) 2172) nil (25556 65104 259387 313000) 0 nil])
([nil nil ((2169 . 2171)) nil (25556 65104 259382 846000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2169) (undo-tree-id7411 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2170) (undo-tree-id7412 . -1) 2171) nil (25556 65104 259382 4000) 0 nil])
([nil nil ((2169 . 2174)) nil (25556 65104 259365 138000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2169) (undo-tree-id7406 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2170) (undo-tree-id7407 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2171) (undo-tree-id7408 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2172) (undo-tree-id7409 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2173) (undo-tree-id7410 . -1) 2174) nil (25556 65104 259363 829000) 0 nil])
([nil nil ((2169 . 2177)) nil (25556 65104 259359 582000) 0 nil])
([nil nil ((2177 . 2178)) nil (25556 65104 259358 992000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2176) (undo-tree-id7404 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2177) (undo-tree-id7405 . -1) 2178) nil (25556 65104 259358 17000) 0 nil])
([nil nil ((2176 . 2179)) nil (25556 65104 259355 425000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2176) (undo-tree-id7401 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2177) (undo-tree-id7402 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2178) (undo-tree-id7403 . -1) 2179) nil (25556 65104 259354 368000) 0 nil])
([nil nil ((2176 . 2180)) nil (25556 65104 259351 189000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2179) (undo-tree-id7400 . -1) 2180) nil (25556 65104 259350 407000) 0 nil])
([nil nil ((2179 . 2188)) nil (25556 65104 259349 19000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -2187) (undo-tree-id7399 . -1) 2188) nil (25556 65104 259348 102000) 0 nil])
([nil nil ((2187 . 2188)) nil (25556 65104 259346 651000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -2187) (undo-tree-id7398 . -1) 2188) nil (25556 65104 259345 741000) 0 nil])
([nil nil ((2187 . 2188)) nil (25556 65104 259344 187000) 0 nil])
([nil nil ((2188 . 2189)) nil (25556 65104 259343 384000) 0 nil])
([nil nil ((2189 . 2190)) nil (25556 65104 259342 610000) 0 nil])
([nil nil ((2190 . 2192)) nil (25556 65104 259341 721000) 0 nil])
([nil nil ((2191 . 2193) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 2191) (undo-tree-id7397 . -1) 2192) nil (25556 65104 259340 848000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2192) (undo-tree-id7396 . -1) 2193) nil (25556 65104 259339 79000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2177) (undo-tree-id7386 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2178) (undo-tree-id7387 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2179) (undo-tree-id7388 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2180) (undo-tree-id7389 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2181) (undo-tree-id7390 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2182) (undo-tree-id7391 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2183) (undo-tree-id7392 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2184) (undo-tree-id7393 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2185) (undo-tree-id7394 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2186) (undo-tree-id7395 . -1) 2187) nil (25556 65104 259323 380000) 0 nil])
([nil nil ((2177 . 2179)) nil (25556 65104 259299 204000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2178) (undo-tree-id7385 . -1) 2179) nil (25556 65104 259297 243000) 0 nil])
([nil nil ((2178 . 2179)) nil (25556 65104 259273 48000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2183) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) 2184 (t 25556 65104 321251 718000)) nil (25556 65105 313989 434000) 0 nil])
([nil nil ((2185 . 2186) (t 25556 65105 369245 992000)) nil (25556 65113 176520 207000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2185) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) 2186) nil (25556 65113 176518 829000) 0 nil])
([nil nil ((2185 . 2189)) nil (25556 65113 176515 837000) 0 nil])
([nil nil ((#("eof=" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . 2185) (undo-tree-id7418 . -4) (undo-tree-id7419 . -4) (undo-tree-id7420 . -4) (undo-tree-id7421 . -4) (undo-tree-id7422 . -4)) nil (25556 65113 176514 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2188 . 2189) (nil fontified nil 2188 . 2189) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (2185 . 2189)) nil (25556 65113 176499 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2229 . 2230) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (2226 . 2230) (t 25556 65113 237203 87000)) nil (25556 65117 765934 187000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2270 . 2271) (nil fontified nil 2270 . 2271) (nil fontified nil 2269 . 2270) (nil fontified nil 2268 . 2269) (nil fontified nil 2267 . 2268) (2267 . 2271)) nil (25556 65117 765931 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2304 . 2305) (nil fontified nil 2304 . 2305) (nil fontified nil 2303 . 2304) (nil fontified nil 2302 . 2303) (nil fontified nil 2301 . 2302) (2301 . 2305)) nil (25556 65117 765914 113000) 0 nil])
([nil nil ((2224 . 2226) (t 25556 65117 829178 125000)) nil (25556 65146 64738 720000) 0 nil])
([nil nil ((2226 . 2227)) nil (25556 65146 64737 889000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2226) (undo-tree-id7435 . -1) 2227) nil (25556 65146 64737 182000) 0 nil])
([nil nil ((2226 . 2228)) nil (25556 65146 64734 117000) 0 nil])
([nil nil ((2228 . 2230)) nil (25556 65146 64733 502000) 0 nil])
([nil nil ((2229 . 2232)) nil (25556 65146 64732 835000) 0 nil])
([nil nil ((2232 . 2234)) nil (25556 65146 64732 241000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -2232) (undo-tree-id7433 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -2233) (undo-tree-id7434 . -1) 2234) nil (25556 65146 64731 287000) 0 nil])
([nil nil ((2232 . 2236)) nil (25556 65146 64728 948000) 0 nil])
([nil nil ((2237 . 2238)) nil (25556 65146 64728 207000) 0 nil])
([nil nil ((#("¬" 0 1 (fontified t ws-butler-chg chg)) . -2237) (undo-tree-id7432 . -1) 2238) nil (25556 65146 64727 387000) 0 nil])
([nil nil ((2237 . 2239)) nil (25556 65146 64725 922000) 0 nil])
([nil nil ((2238 . 2241)) nil (25556 65146 64725 351000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg)) . -2239) (undo-tree-id7430 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2240) (undo-tree-id7431 . -1) 2241) nil (25556 65146 64724 420000) 0 nil])
([nil nil ((2239 . 2245)) nil (25556 65146 64708 984000) 0 nil])
([nil nil ((2245 . 2247)) nil (25556 65146 64708 182000) 0 nil])
([nil nil ((2247 . 2248) (nil syntax-table nil 2249 . 2250) (nil syntax-table (1) 2246 . 2247) (2246 . 2247)) nil (25556 65146 64707 362000) 0 nil])
([nil nil ((2247 . 2252)) nil (25556 65146 64706 214000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2251) (undo-tree-id7429 . -1) 2252) nil (25556 65146 64705 392000) 0 nil])
([nil nil ((2251 . 2257)) nil (25556 65146 64703 484000) 0 nil])
([nil nil ((2261 . 2263) (nil syntax-table nil 2264 . 2265) (nil syntax-table (1) 2246 . 2247) (2257 . 2261)) nil (25556 65146 64702 616000) 0 nil])
([nil nil ((2265 . 2266)) nil (25556 65146 64687 889000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -2265) (undo-tree-id7428 . -1) 2266) nil (25556 65146 64686 969000) 0 nil])
([nil nil ((2265 . 2266)) nil (25556 65146 64685 3000) 0 nil])
([nil nil ((2266 . 2275)) nil (25556 65146 64683 884000) 0 nil])
([nil nil ((2275 . 2277)) nil (25556 65146 64682 485000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -2276) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) 2277) nil (25556 65146 64664 5000) 0 nil])
([nil nil ((2276 . 2277) (t 25556 65146 129025 395000)) nil (25556 65147 197386 144000) 0 nil])
([nil nil ((#("if(eof==-1){ printf(\" Eno of File \\n \"); return 1; }" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t face font-lock-keyword-face) 42 43 (fontified t face font-lock-keyword-face) 43 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t face font-lock-keyword-face) 45 46 (fontified t face font-lock-keyword-face) 46 47 (fontified t face font-lock-keyword-face) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t)) . 2226) (undo-tree-id7436 . -51) (undo-tree-id7437 . -51) (undo-tree-id7438 . -52) (t 25556 65147 261019 326000)) nil (25556 65148 956324 38000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2277 . 2278) (nil fontified nil 2277 . 2278) (nil fontified nil 2276 . 2277) (nil fontified nil 2275 . 2276) (nil fontified nil 2274 . 2275) (nil fontified nil 2273 . 2274) (nil fontified nil 2272 . 2273) (nil fontified nil 2271 . 2272) (nil fontified nil 2270 . 2271) (nil fontified nil 2269 . 2270) (nil fontified nil 2268 . 2269) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2264 . 2265) (nil fontified nil 2263 . 2264) (nil fontified nil 2262 . 2263) (nil fontified nil 2261 . 2262) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (nil fontified nil 2254 . 2255) (nil fontified nil 2253 . 2254) (nil fontified nil 2252 . 2253) (nil fontified nil 2251 . 2252) (nil fontified nil 2250 . 2251) (nil fontified nil 2249 . 2250) (nil fontified nil 2248 . 2249) (nil fontified nil 2247 . 2248) (nil fontified nil 2246 . 2247) (nil fontified nil 2245 . 2246) (nil fontified nil 2244 . 2245) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (2226 . 2278)) nil (25556 65148 956308 232000) 0 nil])
([nil nil ((2278 . 2280) (t 25556 65149 13009 940000)) nil (25556 65150 111519 440000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2279) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) 2280) nil (25556 65150 111514 254000) 0 nil])
([nil nil ((2279 . 2280) 2280 (t 25556 65150 173003 730000)) nil (25556 65151 534605 335000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2279) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) 2280 (t 25556 65150 173003 730000)) nil (25556 65151 534603 250000) 0 nil])
([nil nil ((2320 . 2322)) nil (25556 65151 534590 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2373 . 2374) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (nil fontified nil 2361 . 2362) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2355 . 2356) (nil fontified nil 2354 . 2355) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2346 . 2347) (nil fontified nil 2345 . 2346) (nil fontified nil 2344 . 2345) (nil fontified nil 2343 . 2344) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2336 . 2337) (nil fontified nil 2335 . 2336) (nil fontified nil 2334 . 2335) (nil fontified nil 2333 . 2334) (nil fontified nil 2332 . 2333) (nil fontified nil 2331 . 2332) (nil fontified nil 2330 . 2331) (nil fontified nil 2329 . 2330) (nil fontified nil 2328 . 2329) (nil fontified nil 2327 . 2328) (nil fontified nil 2326 . 2327) (nil fontified nil 2325 . 2326) (nil fontified nil 2324 . 2325) (nil fontified nil 2323 . 2324) (nil fontified nil 2322 . 2323) (2322 . 2374)) nil (25556 65151 534583 709000) 0 nil])
([nil nil ((2374 . 2376) (t 25556 65151 596996 110000)) nil (25556 65152 598548 262000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2375) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) 2376) nil (25556 65152 598543 405000) 0 nil])
([nil nil ((2375 . 2376) 2376 (t 25556 65152 660990 419000)) nil (25556 65154 14496 951000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2375) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) 2376 (t 25556 65152 660990 419000)) nil (25556 65154 14494 940000) 0 nil])
([nil nil ((2409 . 2411)) nil (25556 65154 14451 230000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2462 . 2463) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2435 . 2436) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2420 . 2421) (nil fontified nil 2419 . 2420) (nil fontified nil 2418 . 2419) (nil fontified nil 2417 . 2418) (nil fontified nil 2416 . 2417) (nil fontified nil 2415 . 2416) (nil fontified nil 2414 . 2415) (nil fontified nil 2413 . 2414) (nil fontified nil 2412 . 2413) (nil fontified nil 2411 . 2412) (2411 . 2463)) nil (25556 65154 14431 689000) 0 nil])
([nil nil ((2463 . 2465) (t 25556 65154 80982 830000)) nil (25556 65158 114579 606000) 0 nil])
([nil nil ((2464 . 2466) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 2464) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) 2465) nil (25556 65158 114578 472000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2465) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) 2466) nil (25556 65158 114574 957000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2464) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) 2465) nil (25556 65158 114569 400000) 0 nil])
([nil nil ((2506 . 2507) (nil rear-nonsticky nil 2557 . 2558) (nil fontified nil 2557 . 2558) (nil fontified nil 2556 . 2557) (nil fontified nil 2555 . 2556) (nil fontified nil 2554 . 2555) (nil fontified nil 2553 . 2554) (nil fontified nil 2552 . 2553) (nil fontified nil 2551 . 2552) (nil fontified nil 2550 . 2551) (nil fontified nil 2549 . 2550) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2546 . 2547) (nil fontified nil 2545 . 2546) (nil fontified nil 2544 . 2545) (nil fontified nil 2543 . 2544) (nil fontified nil 2542 . 2543) (nil fontified nil 2541 . 2542) (nil fontified nil 2540 . 2541) (nil fontified nil 2539 . 2540) (nil fontified nil 2538 . 2539) (nil fontified nil 2537 . 2538) (nil fontified nil 2536 . 2537) (nil fontified nil 2535 . 2536) (nil fontified nil 2534 . 2535) (nil fontified nil 2533 . 2534) (nil fontified nil 2532 . 2533) (nil fontified nil 2531 . 2532) (nil fontified nil 2530 . 2531) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2527 . 2528) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2520 . 2521) (nil fontified nil 2519 . 2520) (nil fontified nil 2518 . 2519) (nil fontified nil 2517 . 2518) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (nil fontified nil 2512 . 2513) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (2506 . 2558)) nil (25556 65158 114553 674000) 0 nil])
([nil nil ((2559 . 2561) (t 25556 65158 172960 986000)) nil (25556 65159 695499 466000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2560) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) 2561) nil (25556 65159 695494 694000) 0 nil])
([nil nil ((2560 . 2561) 2561 (t 25556 65159 760952 518000)) nil (25556 65161 257930 540000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2560) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) 2561 (t 25556 65159 760952 518000)) nil (25556 65161 257928 897000) 0 nil])
([nil nil ((#("return 1;" 0 1 (fontified t face font-lock-keyword-face) 1 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t face font-lock-keyword-face) 6 9 (fontified t)) . 2562) (undo-tree-id7484 . -9) (undo-tree-id7485 . -9) (undo-tree-id7486 . -9) (undo-tree-id7487 . -9)) nil (25556 65161 257923 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2561) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) 2562) nil (25556 65161 257916 312000) 0 nil])
([nil nil ((2561 . 2562) 2562 (t 25556 65161 320944 205000)) nil (25556 65180 211767 259000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -2250) (undo-tree-id7497 . -1) 2251 (t 25556 65161 320944 205000)) nil (25556 65180 211765 974000) 0 nil])
([nil nil ((2250 . 2251)) nil (25556 65180 211763 797000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -2346) (undo-tree-id7496 . -1) 2347) nil (25556 65180 211763 13000) 0 nil])
([nil nil ((2346 . 2347)) nil (25556 65180 211761 287000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -2435) (undo-tree-id7495 . -1) 2436) nil (25556 65180 211760 412000) 0 nil])
([nil nil ((2435 . 2436)) nil (25556 65180 211758 480000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -2531) (undo-tree-id7494 . -1) 2532) nil (25556 65180 211757 357000) 0 nil])
([nil nil ((2531 . 2532)) nil (25556 65180 211748 476000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2561) 2532) nil (25556 65180 211743 630000) 0 nil])
([nil nil ((5046 . 5048) (t 25556 65180 280843 626000)) nil (25556 65231 762055 501000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5047) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) 5048) nil (25556 65231 762050 450000) 0 nil])
([nil nil ((5047 . 5048) 5048 (t 25556 65231 828574 149000)) nil (25556 65252 871498 932000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5047) (undo-tree-id7507 . -1) 5048 (t 25556 65231 828574 149000)) nil (25556 65252 871497 650000) 0 nil])
([nil nil ((5047 . 5048)) nil (25556 65252 871495 784000) 0 nil])
([nil nil ((5088 . 5095)) nil (25556 65252 871495 165000) 0 nil])
([nil nil ((#("return " 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified t ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (fontified t ws-butler-chg chg face font-lock-keyword-face) 6 7 (fontified t ws-butler-chg chg)) . 5088) (undo-tree-id7502 . -7) (undo-tree-id7503 . -7) (undo-tree-id7504 . -7) (undo-tree-id7505 . -7) (undo-tree-id7506 . -7)) nil (25556 65252 871494 199000) 0 nil])
([nil nil ((5068 . 5069) (#("  " 0 2 (fontified nil)) . 5068) (nil rear-nonsticky nil 5094 . 5095) (nil fontified nil 5094 . 5095) (nil fontified nil 5093 . 5094) (nil fontified nil 5092 . 5093) (nil fontified nil 5091 . 5092) (nil fontified nil 5090 . 5091) (nil fontified nil 5089 . 5090) (nil fontified nil 5088 . 5089) (5088 . 5095)) nil (25556 65252 871482 196000) 0 nil])
([nil nil ((5160 . 5161) (#("  " 0 2 (fontified nil)) . 5160) (nil rear-nonsticky nil 5186 . 5187) (nil fontified nil 5186 . 5187) (nil fontified nil 5185 . 5186) (nil fontified nil 5184 . 5185) (nil fontified nil 5183 . 5184) (nil fontified nil 5182 . 5183) (nil fontified nil 5181 . 5182) (nil fontified nil 5180 . 5181) (5180 . 5187)) nil (25556 65252 871478 731000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5047) 5186) nil (25556 65252 871472 704000) 0 nil])
([nil nil ((5230 . 5236) (t 25556 65252 928465 425000)) nil (25556 65270 301332 848000) 0 nil])
([nil nil ((5236 . 5237)) nil (25556 65270 301328 79000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5130) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (#(" " 0 1 (fontified t)) . -5131) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (#(" " 0 1 (fontified t)) . -5132) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (#(" " 0 1 (fontified t)) . -5133) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (#(" " 0 1 (fontified t)) . -5134) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (#(" " 0 1 (fontified t)) . -5135) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (#(" " 0 1 (fontified t)) . -5136) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (#(" " 0 1 (fontified t)) . -5137) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (#(" " 0 1 (fontified t)) . -5138) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (#(" " 0 1 (fontified t)) . -5139) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (#(" " 0 1 (fontified t)) . -5140) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (#(" " 0 1 (fontified t)) . -5141) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (#(" " 0 1 (fontified t)) . -5142) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (#(" " 0 1 (fontified t)) . -5143) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (#(" " 0 1 (fontified t)) . -5144) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (#(" " 0 1 (fontified t)) . -5145) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (#(" " 0 1 (fontified t)) . -5146) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (#(" " 0 1 (fontified t)) . -5147) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (#(" " 0 1 (fontified t)) . -5148) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (#(" " 0 1 (fontified t)) . -5149) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (#(" " 0 1 (fontified t)) . -5150) (undo-tree-id7819 . -1) 5151 (t 25556 65270 372376 191000)) nil (25556 65273 766073 727000) 0 nil])
([nil nil ((5130 . 5131) (t 25556 65273 828358 577000)) nil (25556 65275 328622 653000) 0 nil])
([nil nil ((5068 . 5069)) nil (25556 65275 328617 383000) 0 nil])
([nil nil ((5142 . 5143) (t 25556 65275 388350 640000)) nil (25556 65277 498786 104000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -5142) (undo-tree-id7820 . -1) 5143) nil (25556 65277 498770 928000) 0 nil])
([nil nil ((5141 . 5142)) nil (25556 65277 498759 699000) 0 nil])
([nil nil ((1826 . 1828) (t 25556 65277 564339 569000)) nil (25556 65307 689159 991000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1827) (undo-tree-id7821 . -1) 1828) nil (25556 65307 689157 891000) 0 nil])
([nil nil ((1827 . 1828)) nil (25556 65307 689146 749000) 0 nil])
([nil nil ((#("*(*head)++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (rear-nonsticky t fontified t)) . 4189) (undo-tree-id7907 . -11) (t 25556 65307 748186 886000)) nil (25556 65482 483100 110000) 0 nil])
([nil nil ((4156 . 4165)) nil (25556 65482 483098 378000) 0 nil])
([nil nil ((4157 . 4166) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 4157) (undo-tree-id7904 . -8) (undo-tree-id7905 . -8) (undo-tree-id7906 . -8) 4165) nil (25556 65482 483097 362000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4156) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -4157) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4158) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4159) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4160) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4161) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4162) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4163) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4164) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4165) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) 4166) nil (25556 65482 483076 918000) 0 nil])
([nil nil ((4138 . 4147)) nil (25556 65482 482966 9000) 0 nil])
([nil nil ((nil fontified nil 4157 . 4158) (nil fontified nil 4156 . 4157) (nil fontified nil 4155 . 4156) (nil fontified nil 4154 . 4155) (nil fontified nil 4153 . 4154) (nil fontified nil 4152 . 4153) (nil fontified nil 4151 . 4152) (nil fontified nil 4150 . 4151) (nil fontified nil 4149 . 4150) (nil fontified nil 4148 . 4149) (nil fontified nil 4147 . 4148) (4147 . 4158)) nil (25556 65482 482964 407000) 0 nil])
([nil nil ((#("      " 0 1 (fontified t) 1 6 (fontified t)) . 4203) (undo-tree-id7822 . -6) (undo-tree-id7823 . -6) (undo-tree-id7824 . -6) (undo-tree-id7825 . -6) 4158) nil (25556 65482 482958 633000) 0 nil])
([nil nil ((4203 . 4209) (t 25556 65482 551331 147000)) nil (25556 65485 871966 341000) 0 nil])
([nil nil ((nil fontified nil 4219 . 4220) (nil fontified nil 4218 . 4219) (nil fontified nil 4217 . 4218) (nil fontified nil 4216 . 4217) (nil fontified nil 4215 . 4216) (nil fontified nil 4214 . 4215) (nil fontified nil 4213 . 4214) (nil fontified nil 4212 . 4213) (nil fontified nil 4211 . 4212) (nil fontified nil 4210 . 4211) (nil fontified nil 4209 . 4210) (4209 . 4220)) nil (25556 65485 871961 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4184) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) 4185 (t 25556 65485 927315 35000)) nil (25556 65487 227344 569000) 0 nil])
([nil nil ((4098 . 4100) (nil syntax-table nil 4110 . 4111) (nil syntax-table (1) 4075 . 4076) (4096 . 4098) (t 25556 65487 287308 549000)) nil (25556 65506 459508 230000) 0 nil])
([nil nil ((#("printf(\" %s \\n \", operation.argument[0]);" 0 1 (c-is-sws t fontified t) 1 3 (fontified t) 3 6 (fontified t) 6 7 (fontified t) 7 16 (fontified t face font-lock-string-face) 16 17 (fontified t) 17 28 (fontified t) 28 40 (fontified t) 40 41 (fontified t)) . 1915) (undo-tree-id7997 . -41) (t 25556 65506 531217 14000)) nil (25556 65526 754794 976000) 0 nil])
([nil nil ((1915 . 1916)) nil (25556 65526 754781 138000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t fontified t)) . -1914) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -1915) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) 1916) nil (25556 65526 754778 325000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1912) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (#("
" 0 1 (c-in-sws t fontified t)) . -1913) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) 1914) nil (25556 65526 754732 89000) 0 nil])
([nil nil ((1828 . 1829) (t 25556 65526 819120 983000)) nil (25557 1 593673 925000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2518) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) 2519 (t 25557 1 655069 878000)) nil (25557 13 678100 265000) 0 nil])
([nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 5007) (undo-tree-id8018 . -19) (undo-tree-id8019 . -19) (undo-tree-id8020 . -19) (undo-tree-id8021 . -19) (undo-tree-id8022 . -19) (undo-tree-id8023 . -19) (undo-tree-id8024 . -19) (undo-tree-id8025 . -19) (t 25557 13 739013 37000)) nil (25557 59 284963 990000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5006) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) 5007) nil (25557 59 284940 422000) 0 nil])
([nil nil ((5006 . 5007) 5007 (t 25557 59 362799 874000)) nil (25557 69 953382 751000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5199) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (#("t" 0 1 (fontified t)) . -5200) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (#("r" 0 1 (fontified t)) . -5201) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (#("i" 0 1 (fontified t)) . -5202) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (#("n" 0 1 (fontified t)) . -5203) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (#("g" 0 1 (fontified t)) . -5204) (undo-tree-id8041 . -1) 5205 (t 25557 59 362799 874000)) nil (25557 69 953380 241000) 0 nil])
([nil nil ((5199 . 5203)) nil (25557 69 953334 192000) 0 nil])
([nil nil ((5199 . 5200)) nil (25557 69 953332 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5006) 5200) nil (25557 69 953327 461000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5285) (undo-tree-id8042 . -1) (#("t" 0 1 (fontified t)) . -5286) (undo-tree-id8043 . -1) (#("r" 0 1 (fontified t)) . -5287) (undo-tree-id8044 . -1) (#("i" 0 1 (fontified t)) . -5288) (undo-tree-id8045 . -1) (#("n" 0 1 (fontified t)) . -5289) (undo-tree-id8046 . -1) (#("g" 0 1 (fontified t)) . -5290) (undo-tree-id8047 . -1) 5291 (t 25557 70 14750 416000)) nil (25557 76 226530 68000) 0 nil])
([nil nil ((5285 . 5289)) nil (25557 76 226501 884000) 0 nil])
([nil nil ((5285 . 5286)) nil (25557 76 226497 961000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -5285) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) 5286 (t 25557 76 298721 288000)) nil (25557 79 45834 73000) 0 nil])
([nil nil ((5285 . 5286)) nil (25557 109 759700 353000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -5402) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) 5403 (t 25557 112 982551 994000)) nil (25557 118 680097 810000) 0 nil] [nil nil ((5285 . 5286) (t 25557 79 106708 285000)) ((#("(" 0 1 (fontified t)) . 5285)) (25557 109 335788 656000) 0 nil])
([nil nil ((5402 . 5403)) nil (25557 118 680062 310000) 0 nil])
([nil nil ((5291 . 5292)) ((#(")" 0 1 (fontified t)) . 5291) (undo-tree-id8055 . -1)) (25557 107 656621 577000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5006) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (#("
" 0 1 (fontified t)) . -5007) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) 5008 (t 25557 118 766525 417000)) nil (25557 208 438228 788000) 0 nil])
([nil nil ((5198 . 5199)) ((#("(" 0 1 (fontified t)) . 5198) (undo-tree-id8054 . -1)) (25557 107 476440 656000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5672) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (#("h" 0 1 (fontified t)) . -5673) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (#("e" 0 1 (fontified t)) . -5674) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (#("a" 0 1 (fontified t)) . -5675) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (#("d" 0 1 (fontified t)) . -5676) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (#("=" 0 1 (fontified t)) . -5677) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (#("N" 0 1 (fontified t)) . -5678) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (#("U" 0 1 (fontified t)) . -5679) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (#("L" 0 1 (fontified t)) . -5680) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -5681) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) 5682 (t 25557 208 506116 537000)) nil (25557 379 441032 643000) 0 nil])
([nil nil ((5204 . 5205)) ((#(")" 0 1 (fontified t)) . 5204) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (t 25557 97 14625 536000)) (25557 96 958114 553000) 0 nil])
([nil nil ((5672 . 5677)) nil (25557 379 440970 20000) 0 nil])
nil
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -5675) (undo-tree-id8098 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -5676) (undo-tree-id8099 . -1) 5677) nil (25557 379 440968 982000) 0 nil])
([nil nil ((5675 . 5678)) nil (25557 379 440965 858000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -5676) (undo-tree-id8096 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5677) (undo-tree-id8097 . -1) 5678) nil (25557 379 440963 848000) 0 nil])
([nil nil ((5676 . 5681)) nil (25557 379 440952 141000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2859) (undo-tree-id8130 . -1) 2860 (t 25557 379 501353 193000)) nil (25557 426 869131 31000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2864) (undo-tree-id8131 . -1) 2865 (t 25557 426 925144 445000)) nil (25557 428 242144 666000) 0 nil])
([nil nil ((#("  char* string = *head;
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 3375) (undo-tree-id8132 . -24) (undo-tree-id8133 . -24) (t 25557 428 301138 405000)) nil (25557 648 521983 466000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3387) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (#("t" 0 1 (fontified t)) . -3388) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (#("r" 0 1 (fontified t)) . -3389) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (#("i" 0 1 (fontified t)) . -3390) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (#("n" 0 1 (fontified t)) . -3391) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (#("g" 0 1 (fontified t)) . -3392) (undo-tree-id8149 . -1) 3393 (t 25557 648 576181 883000)) nil (25557 655 586268 220000) 0 nil])
([nil nil ((3387 . 3388)) nil (25557 655 586248 72000) 0 nil])
([nil nil ((3388 . 3392)) nil (25557 655 586243 62000) 0 nil])
([nil nil ((3375 . 3378) (t 25557 655 652151 444000)) nil (25557 686 479819 445000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3374) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -3375) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3376) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3377) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) 3378) nil (25557 686 479816 177000) 0 nil])
([nil nil ((3374 . 3377)) nil (25557 686 479417 992000) 0 nil])
([nil nil ((nil fontified t 3405 . 3407) (nil fontified t 3401 . 3405) (#("*string" 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t)) . -3401) (3408 . 3414)) nil (25557 686 479417 100000) 0 nil])
([nil nil ((nil fontified t 3416 . 3422) (#("*string" 0 7 (fontified t)) . -3416) (3423 . 3429)) nil (25557 686 479415 892000) 0 nil])
([nil nil ((nil fontified t 3429 . 3435) (#("*string" 0 7 (fontified t)) . -3429) (3436 . 3442)) nil (25557 686 479414 773000) 0 nil])
([nil nil ((nil fontified t 3498 . 3504) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -3498) (3505 . 3511)) nil (25557 686 479413 620000) 0 nil])
([nil nil ((nil fontified t 3514 . 3520) (#("*string" 0 7 (fontified t)) . -3514) (3521 . 3527)) nil (25557 686 479395 300000) 0 nil])
([nil nil ((nil fontified t 3591 . 3592) (nil fontified t 3588 . 3591) (nil fontified t 3586 . 3588) (#("*string" 0 3 (fontified t) 3 6 (fontified t) 6 7 (fontified t)) . -3586) (3593 . 3599)) nil (25557 686 479394 167000) 0 nil])
([nil nil ((nil fontified t 3897 . 3898) (nil fontified t 3896 . 3897) (nil fontified t 3895 . 3896) (nil fontified t 3894 . 3895) (nil fontified t 3893 . 3894) (nil fontified t 3892 . 3893) (#("*string" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -3892) (3899 . 3905)) nil (25557 686 479392 610000) 0 nil])
([nil nil ((nil fontified t 3924 . 3930) (#("*string" 0 7 (fontified t)) . -3924) (3931 . 3937)) nil (25557 686 479390 824000) 0 nil])
([nil nil ((nil fontified t 3939 . 3943) (nil fontified t 3937 . 3939) (#("*string" 0 3 (fontified t) 3 7 (fontified t)) . -3937) (3944 . 3950)) nil (25557 686 479389 732000) 0 nil])
([nil nil ((nil fontified t 3952 . 3958) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -3952) (3959 . 3965)) nil (25557 686 479388 427000) 0 nil])
([nil nil ((nil fontified t 3965 . 3971) (#("*string" 0 7 (fontified t)) . -3965) (3972 . 3978)) nil (25557 686 479387 186000) 0 nil])
([nil nil ((nil fontified t 4023 . 4029) (#("*string" 0 7 (fontified t)) . -4023) (4030 . 4036)) nil (25557 686 479386 37000) 0 nil])
([nil nil ((nil fontified t 4058 . 4059) (nil fontified t 4057 . 4058) (nil fontified t 4056 . 4057) (nil fontified t 4055 . 4056) (nil fontified t 4054 . 4055) (nil fontified t 4053 . 4054) (#("*string" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -4053) (4060 . 4066)) nil (25557 686 479384 535000) 0 nil])
([nil nil ((nil fontified t 4118 . 4119) (nil fontified t 4117 . 4118) (nil fontified t 4116 . 4117) (nil fontified t 4115 . 4116) (nil fontified t 4114 . 4115) (nil fontified t 4113 . 4114) (#("*string" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -4113) (4120 . 4126)) nil (25557 686 479382 34000) 0 nil])
([nil nil ((nil fontified t 5546 . 5552) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -5546) (5553 . 5559)) nil (25557 686 479380 8000) 0 nil])
([nil nil ((nil fontified t 5559 . 5565) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -5559) (5566 . 5572)) nil (25557 686 479378 919000) 0 nil])
([nil nil ((nil fontified t 5576 . 5582) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -5576) (5583 . 5589)) nil (25557 686 479377 698000) 0 nil])
([nil nil ((nil fontified t 5589 . 5595) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -5589) (5596 . 5602)) nil (25557 686 479376 566000) 0 nil])
([nil nil ((nil fontified t 5613 . 5619) (#("*string" 0 1 (fontified t) 1 7 (fontified t)) . -5613) (5620 . 5626)) nil (25557 686 479375 300000) 0 nil])
([nil nil ((nil fontified t 5778 . 5779) (nil fontified t 5777 . 5778) (nil fontified t 5776 . 5777) (nil fontified t 5775 . 5776) (nil fontified t 5774 . 5775) (nil fontified t 5773 . 5774) (#("*string" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -5773) (5780 . 5786)) nil (25557 686 479373 145000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3375) (undo-tree-id8150 . -2) (undo-tree-id8151 . -2) (undo-tree-id8152 . -2) (undo-tree-id8153 . -2) (undo-tree-id8154 . -2) (undo-tree-id8155 . -2) (undo-tree-id8156 . -2) (undo-tree-id8157 . -2) (undo-tree-id8158 . -2) (undo-tree-id8159 . -2) (undo-tree-id8160 . -2) (nil fontified t 5801 . 5802) (nil fontified t 5800 . 5801) (nil fontified t 5799 . 5800) (nil fontified t 5798 . 5799) (nil fontified t 5797 . 5798) (nil fontified t 5796 . 5797) (#("*string" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -5796) (5803 . 5809)) nil (25557 686 479354 721000) 0 nil])
([nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (rear-nonsticky t fontified t)) . 5510) (undo-tree-id8220 . -19) (t 25557 686 544018 724000)) nil (25557 690 747593 367000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5508) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (#(" " 0 1 (fontified t)) . -5509) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) 5510) nil (25557 690 747590 614000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5507) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) 5508) nil (25557 690 747577 919000) 0 nil])
([nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (rear-nonsticky t fontified t)) . 5721) (undo-tree-id8232 . -19) (t 25557 690 812000 412000)) nil (25557 695 286217 71000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5719) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (#(" " 0 1 (fontified t)) . -5720) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) 5721) nil (25557 695 286211 663000) 0 nil])
([nil nil ((#("   string++;" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 3458) (undo-tree-id8243 . -12) (t 25557 695 347980 958000)) nil (25557 724 717779 738000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3456) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (#(" " 0 1 (fontified t)) . -3457) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) 3458) nil (25557 724 717774 184000) 0 nil])
([nil nil ((#("char* string=*head;" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 3847) (undo-tree-id8260 . -19) (t 25557 724 787854 810000)) nil (25557 737 287097 543000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3844) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (#(" " 0 1 (fontified t)) . -3845) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (#(" " 0 1 (fontified t)) . -3846) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) 3847) nil (25557 737 287092 159000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 4091) (t 25557 737 355801 34000)) nil (25557 765 941554 823000) 0 nil])
([nil nil ((4091 . 4092)) nil (25557 765 941539 663000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg chg)) . -4091) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) 4092) nil (25557 765 941538 299000) 0 nil])
([nil nil ((#("(*head)++;" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (rear-nonsticky t fontified t)) . 4091) (undo-tree-id8340 . -10)) nil (25557 765 941534 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4084) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (#(" " 0 1 (fontified t)) . -4085) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (#(" " 0 1 (fontified t)) . -4086) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (#(" " 0 1 (fontified t)) . -4087) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (#(" " 0 1 (fontified t)) . -4088) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (#(" " 0 1 (fontified t)) . -4089) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (#(" " 0 1 (fontified t)) . -4090) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) 4091) nil (25557 765 941526 489000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -4032) (undo-tree-id8344 . -1) 4033 (t 25557 766 3678 622000)) nil (25557 769 378346 878000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4037) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (#("+" 0 1 (fontified t)) . -4038) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (#("+" 0 1 (fontified t)) . -4039) (undo-tree-id8354 . -1) 4040 (t 25557 769 439663 951000)) nil (25557 773 815183 613000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -4031) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (#("*" 0 1 (fontified t)) . -4032) (undo-tree-id8358 . -1) 4033 (t 25557 773 879644 997000)) nil (25557 779 654154 299000) 0 nil])
([nil nil ((4035 . 4037)) nil (25557 779 654143 947000) 0 nil])
([nil nil ((4031 . 4032)) nil (25557 779 654142 488000) 0 nil])
([nil nil ((4032 . 4033)) nil (25557 779 654137 552000) 0 nil])
([nil nil ((#("string++;" 0 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t) 7 9 (fontified t)) . 5564) (undo-tree-id8446 . -9) (undo-tree-id8447 . -9) (undo-tree-id8448 . -9) (undo-tree-id8449 . -9) (undo-tree-id8450 . -9) (undo-tree-id8451 . -9) (undo-tree-id8452 . -9) (undo-tree-id8453 . -9) (undo-tree-id8454 . -9) (undo-tree-id8455 . -9) (t 25557 779 715620 99000)) nil (25557 820 567544 743000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5560) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (#(" " 0 1 (fontified t)) . -5561) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (#(" " 0 1 (fontified t)) . -5562) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (#(" " 0 1 (fontified t)) . -5563) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) 5564) nil (25557 820 567530 379000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5570) (undo-tree-id8456 . -1) 5571 (t 25557 820 631445 739000)) nil (25557 822 120462 910000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5564) (undo-tree-id8457 . -1) 5565 (t 25557 822 183439 131000)) nil (25557 823 885016 389000) 0 nil])
([nil nil ((5564 . 5565) (t 25557 823 959431 570000)) nil (25557 825 187663 403000) 0 nil])
([nil nil ((#("string++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 5745) (undo-tree-id8469 . -9) (undo-tree-id8470 . -9) (undo-tree-id8471 . -9) (undo-tree-id8472 . -9) (undo-tree-id8473 . -9) (undo-tree-id8474 . -9) (undo-tree-id8475 . -9) (t 25557 825 251426 67000)) nil (25557 833 78970 902000) 0 nil])
([nil nil ((#("   " 0 1 (fontified t) 1 3 (fontified t)) . 5742) (undo-tree-id8458 . -3) (undo-tree-id8459 . -3) (undo-tree-id8460 . -3) (undo-tree-id8461 . -3) (undo-tree-id8462 . -3) (undo-tree-id8463 . -3) (undo-tree-id8464 . -3) (undo-tree-id8465 . -3) (undo-tree-id8466 . -3) (undo-tree-id8467 . -3) (undo-tree-id8468 . -3) 5745) nil (25557 833 78961 769000) 0 nil])
([nil nil ((5742 . 5745) 5745 (t 25557 833 143392 489000)) nil (25557 837 757794 972000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5749) (undo-tree-id8491 . -1) 5750 (t 25557 833 143392 489000)) nil (25557 837 757793 642000) 0 nil])
([nil nil ((5749 . 5750)) nil (25557 837 757791 399000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5742) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5743) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5744) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) 5745) nil (25557 837 757786 821000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5752) (undo-tree-id8492 . -1) 5753 (t 25557 837 819372 606000)) nil (25557 839 802818 354000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5741) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (#("
" 0 1 (fontified t)) . -5742) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (#(" " 0 1 (fontified t)) . -5743) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (#(" " 0 1 (fontified t)) . -5744) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (#(" " 0 1 (fontified t)) . -5745) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) 5746 (t 25557 839 863363 918000)) nil (25557 843 537102 613000) 0 nil])
([nil nil ((5741 . 5745)) nil (25557 843 537090 437000) 0 nil])
([nil nil ((5745 . 5746)) nil (25557 843 537089 289000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5745) (undo-tree-id8493 . -1) 5746) nil (25557 843 537084 965000) 0 nil])
([nil nil ((5472 . 5473) (t 25557 843 603348 18000)) nil (25557 918 477637 237000) 0 nil])
([nil nil ((5466 . 5467)) nil (25557 926 424260 970000) 0 nil])
([nil nil ((nil fontified t 5483 . 5489) (#("**head" 0 6 (fontified t)) . -5481) (5487 . 5495)) nil (25557 960 546008 513000) 0 nil] [nil nil ((#("(" 0 1 (fontified t)) . -5466) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (#("*" 0 1 (fontified t)) . -5467) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (#("*" 0 1 (fontified t)) . -5468) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (#("h" 0 1 (fontified t)) . -5469) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (#("e" 0 1 (fontified t)) . -5470) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (#("a" 0 1 (fontified t)) . -5471) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (#("d" 0 1 (fontified t)) . -5472) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (#(")" 0 1 (fontified t)) . -5473) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) 5474 (t 25557 918 535030 14000)) ((5466 . 5474) (t 25557 924 143006 257000)) (25557 924 45416 237000) 0 nil])
([nil nil ((nil fontified t 5502 . 5508) (#("**head" 0 6 (fontified t)) . -5500) (5506 . 5514)) nil (25557 960 546007 263000) 0 nil])
nil
([nil nil ((nil fontified t 5517 . 5523) (#("**head" 0 6 (fontified t)) . -5515) (5521 . 5529)) nil (25557 960 546005 614000) 0 nil])
([nil nil ((nil fontified t 5543 . 5549) (#("**head" 0 6 (fontified t)) . -5541) (5547 . 5555)) nil (25557 960 546000 166000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5541) (undo-tree-id8573 . -1) 5542 (t 25557 960 618849 997000)) nil (25557 962 9779 330000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5547) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) 5548 (t 25557 962 66843 563000)) nil (25557 963 634410 960000) 0 nil])
([nil nil ((5578 . 5579) (t 25557 963 702836 294000)) nil (25557 1148 824202 895000) 0 nil])
([nil nil ((5572 . 5573)) nil (25557 1148 824201 779000) 0 nil])
([nil nil ((5761 . 5762)) nil (25557 1148 824200 286000) 0 nil])
([nil nil ((5755 . 5756)) nil (25557 1148 824166 339000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5466) (undo-tree-id8577 . -1) 5467 (t 25557 1148 886021 613000)) nil (25557 1156 528463 596000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5472) (undo-tree-id8576 . -1) 5473) nil (25557 1156 528457 634000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5479) (undo-tree-id8578 . -1) 5480 (t 25557 1156 589988 25000)) nil (25557 1158 684446 297000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5485) (undo-tree-id8579 . -1) 5486 (t 25557 1158 749978 608000)) nil (25557 1160 234565 867000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5518) (undo-tree-id8581 . -1) 5519 (t 25557 1160 305971 829000)) nil (25557 1163 614131 601000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5511) (undo-tree-id8580 . -1) 5512) nil (25557 1163 614112 406000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5503) (undo-tree-id8582 . -1) 5504 (t 25557 1163 673957 158000)) nil (25557 1165 703891 977000) 0 nil])
([nil nil ((5503 . 5504)) nil (25557 1165 703879 902000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -5496) (undo-tree-id8583 . -1) 5497 (t 25557 1165 773948 9000)) nil (25557 1167 279021 488000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5566) (undo-tree-id8584 . -1) 5567 (t 25557 1167 333941 215000)) nil (25557 1233 543259 681000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5748) (undo-tree-id8585 . -1) 5749 (t 25557 1233 605653 345000)) nil (25557 1237 579537 84000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -4032) (undo-tree-id8587 . -1) 4033 (t 25557 1237 641635 860000)) nil (25557 1299 129559 118000) 0 nil])
([nil nil ((4031 . 4032)) nil (25557 1299 129557 119000) 0 nil])
([nil nil ((4037 . 4038)) nil (25557 1299 129556 443000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -4074) (undo-tree-id8586 . -1) 4075) nil (25557 1299 129554 980000) 0 nil])
([nil nil ((4074 . 4075)) nil (25557 1299 129547 933000) 0 nil])
([nil nil ((4080 . 4081)) nil (25557 1299 129530 831000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5311) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (#("
" 0 1 (fontified t)) . -5312) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) 5313 (t 25557 1299 197369 775000)) nil (25557 1680 198898 226000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5307) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) 5308) nil (25557 1680 198876 697000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1356) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) 1357 (t 25557 1680 263741 277000)) nil (25557 1689 187302 447000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1313) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) 1314 (t 25557 1689 255703 140000)) nil (25557 1690 372829 579000) 0 nil])
([nil nil ((1827 . 1841) (t 25557 1690 435698 133000)) nil (25557 1818 323942 248000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1832) (undo-tree-id8608 . -1) 1833 (t 25557 1818 387156 518000)) nil (25557 1840 594518 421000) 0 nil])
([nil nil ((1832 . 1833)) nil (25557 1840 594507 313000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -3162) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (#("1" 0 1 (fontified t)) . -3163) (undo-tree-id8613 . -1) 3164 (t 25557 1840 663062 384000)) nil (25557 1886 228889 968000) 0 nil])
([nil nil ((3162 . 3164) (t 25557 1886 298869 681000)) nil (25557 1957 554315 70000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t face font-lock-negation-char-face)) . -3163) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) 3164 (t 25557 1957 610568 968000)) nil (25557 1968 514272 939000) 0 nil])
([nil nil ((3163 . 3164)) nil (25557 1968 514245 87000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -3162) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (#("1" 0 1 (fontified t)) . -3163) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) 3164 (t 25557 1968 578522 742000)) nil (25557 1989 298951 900000) 0 nil])
([nil nil ((2154 . 2156) (t 25557 1989 370435 142000)) nil (25557 2042 750117 875000) 0 nil])
([nil nil ((2156 . 2158)) nil (25557 2042 750117 19000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2155) (undo-tree-id8665 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2156) (undo-tree-id8666 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2157) (undo-tree-id8667 . -1) 2158) nil (25557 2042 750115 810000) 0 nil])
([nil nil ((2155 . 2159)) nil (25557 2042 750111 646000) 0 nil])
([nil nil ((2159 . 2161)) nil (25557 2042 750110 492000) 0 nil])
([nil nil ((#("for()" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified t ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified t ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . 2156) (undo-tree-id8658 . -3) (undo-tree-id8659 . -3) (undo-tree-id8660 . -3) (undo-tree-id8661 . -5) (undo-tree-id8662 . -4) (undo-tree-id8663 . -5) (undo-tree-id8664 . -5)) nil (25557 2042 750108 826000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2154) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2155) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) 2156) nil (25557 2042 750086 22000) 0 nil])
([nil nil ((5397 . 5398) (t 25557 2042 822210 82000)) nil (25557 4204 666802 870000) 0 nil])
([nil nil ((5397 . 5399) (t 25557 4204 731257 931000)) nil (25557 4207 311030 380000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t c-in-sws t)) . -5399) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) 5400) nil (25557 4207 311026 247000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t c-in-sws t)) . -5398) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) 5399 (t 25557 4207 363244 881000)) nil (25557 4232 163293 162000) 0 nil])
([nil nil ((5787 . 5789) (t 25557 4232 223121 809000)) nil (25557 4281 709864 661000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5788) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) 5789) nil (25557 4281 709862 778000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 5787) (5788 . 5788)) nil (25557 4281 709847 680000) 0 nil])
([nil nil ((5787 . 5788) 5788 (t 25557 4281 774877 305000)) nil (25557 4303 623725 321000) 0 nil])
([nil nil ((5788 . 5794) (t 25557 4281 774877 305000)) nil (25557 4303 623724 185000) 0 nil])
([nil nil ((5788 . 5796) (#("uint64" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -5788) (undo-tree-id8695 . -6) 5794) nil (25557 4303 623723 142000) 0 nil])
([nil nil ((5796 . 5800)) nil (25557 4303 623721 441000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5797) (undo-tree-id8692 . -1) (#("j" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5798) (undo-tree-id8693 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5799) (undo-tree-id8694 . -1) 5800) nil (25557 4303 623720 283000) 0 nil])
([nil nil ((5797 . 5802)) nil (25557 4303 623717 93000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5798) (undo-tree-id8688 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5799) (undo-tree-id8689 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5800) (undo-tree-id8690 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5801) (undo-tree-id8691 . -1) 5802) nil (25557 4303 623715 851000) 0 nil])
([nil nil ((5798 . 5802)) nil (25557 4303 623711 48000) 0 nil])
([nil nil ((5802 . 5811)) nil (25557 4303 623710 299000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5807) (undo-tree-id8684 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5808) (undo-tree-id8685 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5809) (undo-tree-id8686 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5810) (undo-tree-id8687 . -1) 5811) nil (25557 4303 623708 460000) 0 nil])
([nil nil ((5807 . 5809)) nil (25557 4303 623697 404000) 0 nil])
([nil nil ((5807 . 5812)) nil (25557 4303 623696 65000) 0 nil])
([nil nil ((5814 . 5815) 5812) nil (25557 4303 623691 899000) 0 nil])
([nil nil ((5813 . 5817) (t 25557 4303 682769 571000)) nil (25557 4336 175534 246000) 0 nil])
([nil nil ((5817 . 5818)) nil (25557 4336 175533 480000) 0 nil])
([nil nil ((5818 . 5824)) nil (25557 4336 175532 860000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5823) (undo-tree-id8714 . -1) 5824) nil (25557 4336 175532 135000) 0 nil])
([nil nil ((5823 . 5824)) nil (25557 4336 175530 655000) 0 nil])
([nil nil ((5824 . 5825)) nil (25557 4336 175529 960000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5824) (undo-tree-id8713 . -1) 5825) nil (25557 4336 175529 163000) 0 nil])
([nil nil ((5824 . 5830)) nil (25557 4336 175527 668000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . -5830) (undo-tree-id8712 . -1) 5831) nil (25557 4336 175526 971000) 0 nil])
([nil nil ((5830 . 5832)) nil (25557 4336 175525 351000) 0 nil])
([nil nil ((5832 . 5833)) nil (25557 4336 175524 804000) 0 nil])
([nil nil ((5832 . 5833)) nil (25557 4336 175524 164000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5832) (undo-tree-id8711 . -1) 5833) nil (25557 4336 175523 431000) 0 nil])
([nil nil ((5832 . 5836)) nil (25557 4336 175521 603000) 0 nil])
([nil nil ((5836 . 5837)) nil (25557 4336 175520 887000) 0 nil])
([nil nil ((5837 . 5839)) nil (25557 4336 175520 295000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5833) (undo-tree-id8705 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5834) (undo-tree-id8706 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5835) (undo-tree-id8707 . -1) (#("," 0 1 (fontified t ws-butler-chg chg c-type c-decl-arg-start)) . -5836) (undo-tree-id8708 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5837) (undo-tree-id8709 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5838) (undo-tree-id8710 . -1) 5839) nil (25557 4336 175518 782000) 0 nil])
([nil nil ((5833 . 5837)) nil (25557 4336 175512 317000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5833) (undo-tree-id8701 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5834) (undo-tree-id8702 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5835) (undo-tree-id8703 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5836) (undo-tree-id8704 . -1) 5837) nil (25557 4336 175511 188000) 0 nil])
([nil nil ((5833 . 5836)) nil (25557 4336 175507 245000) 0 nil])
([nil nil ((#("u" 0 1 (fontified nil ws-butler-chg chg face font-lock-variable-name-face)) . -5833) (undo-tree-id8698 . -1) (#("i" 0 1 (fontified nil ws-butler-chg chg face font-lock-variable-name-face)) . -5834) (undo-tree-id8699 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5835) (undo-tree-id8700 . -1) 5836) nil (25557 4336 175506 19000) 0 nil])
([nil nil ((5833 . 5834)) nil (25557 4336 175502 556000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5833) (undo-tree-id8697 . -1) 5834) nil (25557 4336 175501 826000) 0 nil])
([nil nil ((5833 . 5835)) nil (25557 4336 175499 825000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5834) (undo-tree-id8696 . -1) 5835) nil (25557 4336 175498 469000) 0 nil])
([nil nil ((5834 . 5839)) nil (25557 4336 175489 881000) 0 nil])
([nil nil ((5839 . 5840)) nil (25557 4336 175489 238000) 0 nil])
([nil nil ((5840 . 5841)) nil (25557 4336 175488 349000) 0 nil])
([nil nil ((5841 . 5842)) nil (25557 4336 175486 891000) 0 nil])
([nil nil ((5842 . 5843)) nil (25557 4336 175482 310000) 0 nil])
([nil nil ((5825 . 5826) (t 25557 4336 258609 748000)) nil (25557 4340 225142 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5825) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) 5826) nil (25557 4340 225141 294000) 0 nil])
([nil nil ((5825 . 5826)) nil (25557 4340 225138 167000) 0 nil])
([nil nil ((5824 . 5825)) nil (25557 4340 225137 21000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5826) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) 5827) nil (25557 4340 225133 106000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5843) (undo-tree-id8730 . -1) 5844 (t 25557 4340 290590 3000)) nil (25557 4351 390066 614000) 0 nil])
([nil nil ((5843 . 5847)) nil (25557 4351 390064 512000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5842) (undo-tree-id8725 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -5843) (undo-tree-id8726 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -5844) (undo-tree-id8727 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5845) (undo-tree-id8728 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -5846) (undo-tree-id8729 . -1) 5847) nil (25557 4351 390048 495000) 0 nil])
([nil nil ((5842 . 5846)) nil (25557 4351 390042 869000) 0 nil])
([nil nil ((5846 . 5847)) nil (25557 4351 390042 189000) 0 nil])
([nil nil ((5847 . 5849)) nil (25557 4351 390041 514000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5848) (undo-tree-id8724 . -1) 5849) nil (25557 4351 390040 437000) 0 nil])
([nil nil ((5848 . 5852)) nil (25557 4351 390038 581000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5848) (undo-tree-id8720 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5849) (undo-tree-id8721 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5850) (undo-tree-id8722 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5851) (undo-tree-id8723 . -1) 5852) nil (25557 4351 390036 433000) 0 nil])
([nil nil ((5848 . 5853)) nil (25557 4351 390010 221000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t face font-lock-variable-name-face)) . -5848) (undo-tree-id8731 . -1) 5849 (t 25557 4351 458535 329000)) nil (25557 4353 420803 224000) 0 nil])
([nil nil ((5848 . 5849)) nil (25557 4353 420791 452000) 0 nil])
([nil nil ((5854 . 5856) (t 25557 4353 486525 406000)) nil (25557 4358 676189 693000) 0 nil])
([nil nil ((5854 . 5855)) nil (25557 4358 676188 436000) 0 nil])
([nil nil ((5856 . 5858)) nil (25557 4358 676187 205000) 0 nil])
([nil nil ((5858 . 5859)) nil (25557 4358 676182 476000) 0 nil])
([nil nil ((6049 . 6051) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 6049) (6032 . 6036) (#("        " 0 1 (ws-butler-chg chg fontified nil c-is-sws t) 1 8 (ws-butler-chg chg fontified nil)) . 6032) (5972 . 5978) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 5972) (5949 . 5953) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5949) (5937 . 5941) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5937) (5906 . 5910) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5906) (5902 . 5904) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 5902) (5857 . 5859) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 5857) (nil rear-nonsticky nil 6076 . 6077) (nil fontified nil 5857 . 6077) (5857 . 6077) (t 25557 4358 770499 556000)) nil (25557 4373 446667 709000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6052) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) 6053 (t 25557 4373 518427 470000)) nil (25557 4374 963337 804000) 0 nil])
([nil nil ((6052 . 6055) (t 25557 4375 26420 103000)) nil (25557 4377 627460 566000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 6053) (undo-tree-id8742 . -2) (undo-tree-id8743 . -2) (undo-tree-id8744 . -2) (undo-tree-id8745 . -2) 6055) nil (25557 4377 627458 780000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5876) (undo-tree-id8741 . -1) 5877) nil (25557 4377 627451 382000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5875) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) 5876 (t 25557 4377 686407 113000)) nil (25557 4378 440195 36000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5858) (undo-tree-id8750 . -1) 5859 (t 25557 4378 510403 89000)) nil (25557 4392 442870 341000) 0 nil])
([nil nil ((5858 . 5859)) nil (25557 4392 442868 447000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5858) (undo-tree-id8749 . -1) 5859) nil (25557 4392 442867 578000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5873)) nil (25557 4392 442858 840000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5899)) nil (25557 4392 442858 112000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5902)) nil (25557 4392 442857 63000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 5902)) nil (25557 4392 442856 304000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 5931) (#(" " 0 1 (fontified t)) . 5931)) nil (25557 4392 442855 591000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 5941) (#(" " 0 1 (fontified t)) . 5941)) nil (25557 4392 442854 572000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 5962) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5962) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5962) (#(" " 0 1 (fontified t)) . 5962)) nil (25557 4392 442853 247000) 0 nil])
([nil nil ((#(" " 0 1 (c-is-sws t c-in-sws t fontified t ws-butler-chg delete)) . 6018) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . 6018)) nil (25557 4392 442851 387000) 0 nil])
([nil nil ((6018 . 6019)) nil (25557 4392 442849 982000) 0 nil])
([nil nil ((5963 . 5964)) nil (25557 4392 442845 494000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6037) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) 6038 (t 25557 4392 502334 796000)) nil (25557 4394 72858 869000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5858) (undo-tree-id8774 . -1) (#("n" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5859) (undo-tree-id8775 . -1) (#("s" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5860) (undo-tree-id8776 . -1) (#("i" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5861) (undo-tree-id8777 . -1) (#("g" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5862) (undo-tree-id8778 . -1) (#("n" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5863) (undo-tree-id8779 . -1) (#("e" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5864) (undo-tree-id8780 . -1) (#("d" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5865) (undo-tree-id8781 . -1) (#(" " 0 1 (fontified t)) . -5866) (undo-tree-id8782 . -1) (#("l" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5867) (undo-tree-id8783 . -1) (#("o" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5868) (undo-tree-id8784 . -1) (#("n" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5869) (undo-tree-id8785 . -1) (#("g" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -5870) (undo-tree-id8786 . -1) 5871 (t 25557 4394 130326 855000)) nil (25557 4436 358429 708000) 0 nil])
([nil nil ((5858 . 5862)) nil (25557 4436 358418 232000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -5858) (undo-tree-id8770 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -5859) (undo-tree-id8771 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -5860) (undo-tree-id8772 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -5861) (undo-tree-id8773 . -1) 5862) nil (25557 4436 358417 83000) 0 nil])
([nil nil ((5858 . 5862)) nil (25557 4436 358411 497000) 0 nil])
([nil nil ((5862 . 5863)) nil (25557 4436 358410 853000) 0 nil])
([nil nil ((5863 . 5866)) nil (25557 4436 358410 190000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5864) (undo-tree-id8768 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5865) (undo-tree-id8769 . -1) 5866) nil (25557 4436 358409 251000) 0 nil])
([nil nil ((5864 . 5867)) nil (25557 4436 358406 865000) 0 nil])
([nil nil ((5867 . 5873)) nil (25557 4436 358393 388000) 0 nil])
([nil nil ((5872 . 5875)) nil (25557 4436 358392 611000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -5872) (undo-tree-id8765 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -5873) (undo-tree-id8766 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5874) (undo-tree-id8767 . -1) 5875) nil (25557 4436 358391 594000) 0 nil])
([nil nil ((5872 . 5877)) nil (25557 4436 358388 413000) 0 nil])
([nil nil ((5878 . 5880)) nil (25557 4436 358387 780000) 0 nil])
([nil nil ((5879 . 5882)) nil (25557 4436 358386 869000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -5879) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5880) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -5881) (undo-tree-id8764 . -1) 5882) nil (25557 4436 358385 441000) 0 nil])
([nil nil ((5879 . 5882)) nil (25557 4436 358364 413000) 0 nil])
([nil nil ((5879 . 5894) (#("MAX" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -5879) (undo-tree-id8757 . -3) 5882) nil (25557 4436 358363 412000) 0 nil])
([nil nil ((5895 . 5896)) nil (25557 4436 358361 356000) 0 nil])
([nil nil ((5896 . 5898)) nil (25557 4436 358360 160000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5897) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) 5898) nil (25557 4436 358356 136000) 0 nil])
([nil nil ((5897 . 5898) 5898 (t 25557 4436 422120 894000)) nil (25557 4441 112664 546000) 0 nil])
([nil nil ((5897 . 5899) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 5897) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) 5898 (t 25557 4436 422120 894000)) nil (25557 4441 112663 39000) 0 nil])
([nil nil ((5898 . 5900) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 5898) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) 5899) nil (25557 4441 112646 11000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5897) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -5898) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5899) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) 5900) nil (25557 4441 112638 288000) 0 nil])
([nil nil ((#("char* members[units][MAX_WORD_LENGTH];" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 5858) (undo-tree-id8828 . -21) (undo-tree-id8829 . -36) (undo-tree-id8830 . -37) (undo-tree-id8831 . -38) (t 25557 4441 170097 812000)) nil (25557 4447 412558 155000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5856) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (#(" " 0 1 (fontified t)) . -5857) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) 5858) nil (25557 4447 412536 470000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5856) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) 5857 (t 25557 4447 482067 132000)) nil (25557 4452 136198 929000) 0 nil])
([nil nil ((5856 . 5859) (t 25557 4452 206044 179000)) nil (25557 4452 768050 930000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 5857) (undo-tree-id8837 . -2) (undo-tree-id8838 . -2) (undo-tree-id8839 . -2) (undo-tree-id8840 . -2) 5859) nil (25557 4452 768046 749000) 0 nil])
([nil nil ((5857 . 5859) 5859 (t 25557 4452 838041 108000)) nil (25557 4457 741856 899000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 5857) (undo-tree-id8849 . -2) (undo-tree-id8850 . -2) (undo-tree-id8851 . -2) (undo-tree-id8852 . -2) (undo-tree-id8853 . -2) (undo-tree-id8854 . -2) 5859 (t 25557 4452 838041 108000)) nil (25557 4457 741855 257000) 0 nil])
([nil nil ((#("hash(unsigned char *str)" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t) 5 13 (fontified t face font-lock-type-face) 13 14 (fontified t) 14 18 (fontified t face font-lock-type-face) 18 20 (fontified t) 20 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t)) . 5859) (undo-tree-id8847 . -1) (undo-tree-id8848 . -24)) nil (25557 4457 741835 762000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5858) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) 5859) nil (25557 4457 741830 812000) 0 nil])
([nil nil ((5858 . 5859) 5859 (t 25557 4457 818016 922000)) nil (25557 4463 592748 900000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 5861) (t 25557 4457 818016 922000)) nil (25557 4463 592747 592000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5856) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (#("
" 0 1 (fontified t)) . -5857) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5858) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (#("
" 0 1 (fontified t)) . -5859) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (#(" " 0 1 (fontified t)) . -5860) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) 5861) nil (25557 4463 592743 167000) 0 nil])
([nil nil ((5993 . 5994)) nil (25557 4463 592675 662000) 0 nil])
([nil nil ((5916 . 5917) (t 25557 4463 657988 570000)) nil (25557 4467 14113 374000) 0 nil])
([nil nil ((5916 . 5921) (t 25557 4467 169971 524000)) nil (25557 4469 11957 542000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5919) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5920) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) 5921) nil (25557 4469 11953 179000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5997) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) 5998 (t 25557 4469 65962 323000)) nil (25557 4472 813082 915000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5910) (undo-tree-id8906 . -1) (#("t" 0 1 (fontified t)) . -5911) (undo-tree-id8907 . -1) (#("r" 0 1 (fontified t)) . -5912) (undo-tree-id8908 . -1) 5913 (t 25557 4472 869943 866000)) nil (25557 4503 326522 97000) 0 nil])
([nil nil ((5910 . 5914)) nil (25557 4503 326495 80000) 0 nil])
([nil nil ((5787 . 5790) (t 25557 4503 385795 948000)) nil (25557 4553 26605 342000) 0 nil])
([nil nil ((5789 . 5793)) nil (25557 4553 26604 513000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -5789) (undo-tree-id8923 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -5790) (undo-tree-id8924 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5791) (undo-tree-id8925 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5792) (undo-tree-id8926 . -1) 5793) nil (25557 4553 26603 327000) 0 nil])
([nil nil ((5789 . 5798)) nil (25557 4553 26599 154000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5797) (undo-tree-id8922 . -1) 5798) nil (25557 4553 26598 380000) 0 nil])
([nil nil ((5797 . 5799)) nil (25557 4553 26596 858000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -5797) (undo-tree-id8920 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5798) (undo-tree-id8921 . -1) 5799) nil (25557 4553 26595 668000) 0 nil])
([nil nil ((5797 . 5812)) nil (25557 4553 26592 913000) 0 nil])
([nil nil ((5812 . 5818)) nil (25557 4553 26592 237000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -5817) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) 5818) nil (25557 4553 26591 247000) 0 nil])
([nil nil ((5817 . 5819)) nil (25557 4553 26586 405000) 0 nil])
([nil nil ((#("char* name, uint16_t units , char* group" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t c-type c-decl-arg-start) 11 12 (fontified t) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 18 (fontified t face font-lock-type-face) 18 19 (fontified t face font-lock-type-face) 19 20 (fontified t face font-lock-type-face) 20 21 (fontified t) 21 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t face font-lock-variable-name-face) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t) 27 28 (fontified t c-type c-decl-arg-start) 28 29 (fontified t) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t face font-lock-type-face) 32 33 (fontified t face font-lock-type-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t face font-lock-variable-name-face)) . 5846) (undo-tree-id8909 . -40) (undo-tree-id8910 . -11) (undo-tree-id8911 . -12) (undo-tree-id8912 . -28) (undo-tree-id8913 . -29) (undo-tree-id8914 . -40) (undo-tree-id8915 . -40) 5886) nil (25557 4553 26584 920000) 0 nil])
([nil nil ((5821 . 5823) (nil rear-nonsticky nil 5885 . 5886) (nil fontified nil 5885 . 5886) (nil fontified nil 5884 . 5885) (nil fontified nil 5883 . 5884) (nil fontified nil 5882 . 5883) (nil fontified nil 5881 . 5882) (nil fontified nil 5880 . 5881) (nil fontified nil 5879 . 5880) (nil fontified nil 5878 . 5879) (nil fontified nil 5877 . 5878) (nil fontified nil 5876 . 5877) (nil fontified nil 5875 . 5876) (nil fontified nil 5874 . 5875) (nil fontified nil 5873 . 5874) (nil fontified nil 5872 . 5873) (nil fontified nil 5871 . 5872) (nil fontified nil 5870 . 5871) (nil fontified nil 5869 . 5870) (nil fontified nil 5868 . 5869) (nil fontified nil 5867 . 5868) (nil fontified nil 5866 . 5867) (nil fontified nil 5865 . 5866) (nil fontified nil 5864 . 5865) (nil fontified nil 5863 . 5864) (nil fontified nil 5862 . 5863) (nil fontified nil 5861 . 5862) (nil fontified nil 5860 . 5861) (nil fontified nil 5859 . 5860) (nil fontified nil 5858 . 5859) (nil fontified nil 5857 . 5858) (nil fontified nil 5856 . 5857) (nil fontified nil 5855 . 5856) (nil fontified nil 5854 . 5855) (nil fontified nil 5853 . 5854) (nil fontified nil 5852 . 5853) (nil fontified nil 5851 . 5852) (nil fontified nil 5850 . 5851) (nil fontified nil 5849 . 5850) (nil fontified nil 5848 . 5849) (nil fontified nil 5847 . 5848) (nil fontified nil 5846 . 5847) (5846 . 5886)) nil (25557 4553 26570 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5857 . 5858) (nil fontified nil 5857 . 5858) (nil fontified nil 5856 . 5857) (nil fontified nil 5855 . 5856) (nil fontified nil 5854 . 5855) (nil fontified nil 5853 . 5854) (nil fontified nil 5852 . 5853) (nil fontified nil 5851 . 5852) (nil fontified nil 5850 . 5851) (nil fontified nil 5849 . 5850) (nil fontified nil 5848 . 5849) (nil fontified nil 5847 . 5848) (nil fontified nil 5846 . 5847) (nil fontified nil 5845 . 5846) (nil fontified nil 5844 . 5845) (nil fontified nil 5843 . 5844) (nil fontified nil 5842 . 5843) (nil fontified nil 5841 . 5842) (nil fontified nil 5840 . 5841) (nil fontified nil 5839 . 5840) (nil fontified nil 5838 . 5839) (nil fontified nil 5837 . 5838) (nil fontified nil 5836 . 5837) (nil fontified nil 5835 . 5836) (nil fontified nil 5834 . 5835) (nil fontified nil 5833 . 5834) (nil fontified nil 5832 . 5833) (nil fontified nil 5831 . 5832) (nil fontified nil 5830 . 5831) (nil fontified nil 5829 . 5830) (nil fontified nil 5828 . 5829) (nil fontified nil 5827 . 5828) (nil fontified nil 5826 . 5827) (nil fontified nil 5825 . 5826) (nil fontified nil 5824 . 5825) (nil fontified nil 5823 . 5824) (nil fontified nil 5822 . 5823) (nil fontified nil 5821 . 5822) (nil fontified nil 5820 . 5821) (nil fontified nil 5819 . 5820) (nil fontified nil 5818 . 5819) (5818 . 5858)) nil (25557 4553 26557 741000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5861) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (#(" " 0 1 (fontified t)) . -5862) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) 5863 (t 25557 4553 93555 562000)) nil (25557 4555 766459 935000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . -5905) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (#(" " 0 1 (fontified t)) . -5906) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -5907) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -5908) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -5909) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -5910) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -5911) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (#(" " 0 1 (fontified t)) . -5912) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5913) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (#(" " 0 1 (fontified t)) . -5914) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (#("c" 0 1 (fontified t)) . -5915) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (#("h" 0 1 (fontified t)) . -5916) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (#("a" 0 1 (fontified t)) . -5917) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -5918) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (#("*" 0 1 (fontified t)) . -5919) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (#(" " 0 1 (fontified t)) . -5920) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -5921) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -5922) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -5923) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -5924) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (#("p" 0 1 (rear-nonsticky t fontified t face font-lock-variable-name-face)) . -5925) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) 5926 (t 25557 4555 817542 408000)) nil (25557 4559 320203 567000) 0 nil])
([nil nil ((#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5896) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (#(" " 0 1 (fontified t)) . -5897) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (#("u" 0 1 (fontified t)) . -5898) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (#("i" 0 1 (fontified t)) . -5899) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (#("n" 0 1 (fontified t)) . -5900) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (#("t" 0 1 (fontified t)) . -5901) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (#("1" 0 1 (fontified t)) . -5902) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (#("6" 0 1 (fontified t)) . -5903) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (#("_" 0 1 (fontified t)) . -5904) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) 5905) nil (25557 4559 320021 44000) 0 nil])
([nil nil ((5859 . 5861) (t 25557 4559 377525 220000)) nil (25557 4564 33815 702000) 0 nil])
([nil nil ((5859 . 5861)) nil (25557 4564 33814 459000) 0 nil])
([nil nil ((5862 . 5864)) nil (25557 4564 33813 102000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5860) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) 5861) nil (25557 4573 268051 207000) 0 nil])
([nil nil ((5862 . 5863) (t 25557 4564 93502 458000)) ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 5862)) (25557 4573 771163 700000) 0 nil])
([nil nil ((5862 . 5863)) nil (25557 4578 702911 853000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -5829) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -5830) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -5831) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -5832) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -5833) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (#("1" 0 1 (fontified t face font-lock-type-face)) . -5834) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (#("6" 0 1 (fontified t face font-lock-type-face)) . -5835) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -5836) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -5837) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (#(" " 0 1 (fontified t)) . -5838) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -5839) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -5840) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -5841) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -5842) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -5843) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (#(" " 0 1 (fontified t)) . -5844) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5845) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (#(" " 0 1 (fontified t)) . -5846) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) 5847) ((5830 . 5847) (nil ws-butler-chg delete 5830 . 5831) (5829 . 5830)) (25557 4572 4435 212000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t ws-butler-chg chg) 1 2 (ws-butler-chg chg fontified t)) . 5862) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) 5863) nil (25557 4578 702907 381000) 0 nil])
nil
([nil nil ((5862 . 5863) 5863 (t 25557 4578 773431 639000)) nil (25557 4607 833126 649000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5862) (undo-tree-id9689 . -1) 5863 (t 25557 4578 773431 639000)) nil (25557 4607 833125 588000) 0 nil])
([nil nil ((5862 . 5866)) nil (25557 4607 833123 865000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -5864) (undo-tree-id9687 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5865) (undo-tree-id9688 . -1) 5866) nil (25557 4607 833123 16000) 0 nil])
([nil nil ((5864 . 5869)) nil (25557 4607 833120 694000) 0 nil])
([nil nil ((5869 . 5872)) nil (25557 4607 833120 56000) 0 nil])
([nil nil ((5863 . 5878) (#("Regex_Has" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg)) . -5863) (undo-tree-id9686 . -9) 5872) nil (25557 4607 833119 257000) 0 nil])
([nil nil ((5878 . 5880)) nil (25557 4607 833117 664000) 0 nil])
([nil nil ((5879 . 5881)) nil (25557 4607 833116 963000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -5879) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5880) (undo-tree-id9685 . -1) 5881) nil (25557 4607 833115 750000) 0 nil])
([nil nil ((5879 . 5883)) nil (25557 4607 833111 995000) 0 nil])
([nil nil ((5884 . 5885)) nil (25557 4607 833111 244000) 0 nil])
([nil nil ((#("uint64_t Regex_RegisterGroup(char* name, uint16_t units , char* group)
" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t face font-lock-function-name-face) 27 28 (fontified t face font-lock-function-name-face) 28 29 (fontified t c-type c-decl-arg-start) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t face font-lock-type-face) 32 33 (fontified t face font-lock-type-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t c-type c-decl-arg-start) 40 41 (fontified t) 41 42 (fontified t face font-lock-type-face) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t face font-lock-type-face) 44 45 (fontified t face font-lock-type-face) 45 46 (fontified t face font-lock-type-face) 46 47 (fontified t face font-lock-type-face) 47 48 (fontified t face font-lock-type-face) 48 49 (fontified t face font-lock-type-face) 49 50 (fontified t) 50 51 (fontified t face font-lock-variable-name-face) 51 52 (fontified t face font-lock-variable-name-face) 52 53 (fontified t face font-lock-variable-name-face) 53 54 (fontified t face font-lock-variable-name-face) 54 55 (fontified t face font-lock-variable-name-face) 55 56 (fontified t) 56 57 (fontified t c-type c-decl-arg-start) 57 58 (fontified t) 58 59 (fontified t face font-lock-type-face) 59 60 (fontified t face font-lock-type-face) 60 61 (fontified t face font-lock-type-face) 61 62 (fontified t face font-lock-type-face) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t face font-lock-variable-name-face) 65 66 (fontified t face font-lock-variable-name-face) 66 67 (fontified t face font-lock-variable-name-face) 67 68 (fontified t face font-lock-variable-name-face) 68 69 (fontified t rear-nonsticky t face font-lock-variable-name-face) 69 70 (fontified t) 70 71 (fontified t)) . 5789) (undo-tree-id9673 . -29) (undo-tree-id9674 . -29) (undo-tree-id9675 . -29) (undo-tree-id9676 . -40) (undo-tree-id9677 . -41) (undo-tree-id9678 . -57) (undo-tree-id9679 . -58) (undo-tree-id9680 . -70) (undo-tree-id9681 . -71)) nil (25557 4607 833109 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5859 . 5860) (nil fontified nil 5859 . 5860) (nil fontified nil 5858 . 5859) (nil fontified nil 5857 . 5858) (nil fontified nil 5856 . 5857) (nil fontified nil 5855 . 5856) (nil fontified nil 5854 . 5855) (nil fontified nil 5853 . 5854) (nil fontified nil 5852 . 5853) (nil fontified nil 5851 . 5852) (nil fontified nil 5850 . 5851) (nil fontified nil 5849 . 5850) (nil fontified nil 5848 . 5849) (nil fontified nil 5847 . 5848) (nil fontified nil 5846 . 5847) (nil fontified nil 5845 . 5846) (nil fontified nil 5844 . 5845) (nil fontified nil 5843 . 5844) (nil fontified nil 5842 . 5843) (nil fontified nil 5841 . 5842) (nil fontified nil 5840 . 5841) (nil fontified nil 5839 . 5840) (nil fontified nil 5838 . 5839) (nil fontified nil 5837 . 5838) (nil fontified nil 5836 . 5837) (nil fontified nil 5835 . 5836) (nil fontified nil 5834 . 5835) (nil fontified nil 5833 . 5834) (nil fontified nil 5832 . 5833) (nil fontified nil 5831 . 5832) (nil fontified nil 5830 . 5831) (nil fontified nil 5829 . 5830) (nil fontified nil 5828 . 5829) (nil fontified nil 5827 . 5828) (nil fontified nil 5826 . 5827) (nil fontified nil 5825 . 5826) (nil fontified nil 5824 . 5825) (nil fontified nil 5823 . 5824) (nil fontified nil 5822 . 5823) (nil fontified nil 5821 . 5822) (nil fontified nil 5820 . 5821) (nil fontified nil 5819 . 5820) (nil fontified nil 5818 . 5819) (nil fontified nil 5817 . 5818) (nil fontified nil 5816 . 5817) (nil fontified nil 5815 . 5816) (nil fontified nil 5814 . 5815) (nil fontified nil 5813 . 5814) (nil fontified nil 5812 . 5813) (nil fontified nil 5811 . 5812) (nil fontified nil 5810 . 5811) (nil fontified nil 5809 . 5810) (nil fontified nil 5808 . 5809) (nil fontified nil 5807 . 5808) (nil fontified nil 5806 . 5807) (nil fontified nil 5805 . 5806) (nil fontified nil 5804 . 5805) (nil fontified nil 5803 . 5804) (nil fontified nil 5802 . 5803) (nil fontified nil 5801 . 5802) (nil fontified nil 5800 . 5801) (nil fontified nil 5799 . 5800) (nil fontified nil 5798 . 5799) (nil fontified nil 5797 . 5798) (nil fontified nil 5796 . 5797) (nil fontified nil 5795 . 5796) (nil fontified nil 5794 . 5795) (nil fontified nil 5793 . 5794) (nil fontified nil 5792 . 5793) (nil fontified nil 5791 . 5792) (nil fontified nil 5790 . 5791) (nil fontified nil 5789 . 5790) (5789 . 5860)) nil (25557 4607 833089 353000) 0 nil])
([nil nil ((5788 . 5789) (t 25557 4607 897291 265000)) nil (25557 4609 233706 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5858 . 5859) (nil fontified nil 5858 . 5859) (nil fontified nil 5857 . 5858) (nil fontified nil 5856 . 5857) (nil fontified nil 5855 . 5856) (nil fontified nil 5854 . 5855) (nil fontified nil 5853 . 5854) (nil fontified nil 5852 . 5853) (nil fontified nil 5851 . 5852) (nil fontified nil 5850 . 5851) (nil fontified nil 5849 . 5850) (nil fontified nil 5848 . 5849) (nil fontified nil 5847 . 5848) (nil fontified nil 5846 . 5847) (nil fontified nil 5845 . 5846) (nil fontified nil 5844 . 5845) (nil fontified nil 5843 . 5844) (nil fontified nil 5842 . 5843) (nil fontified nil 5841 . 5842) (nil fontified nil 5840 . 5841) (nil fontified nil 5839 . 5840) (nil fontified nil 5838 . 5839) (nil fontified nil 5837 . 5838) (nil fontified nil 5836 . 5837) (nil fontified nil 5835 . 5836) (nil fontified nil 5834 . 5835) (nil fontified nil 5833 . 5834) (nil fontified nil 5832 . 5833) (nil fontified nil 5831 . 5832) (nil fontified nil 5830 . 5831) (nil fontified nil 5829 . 5830) (nil fontified nil 5828 . 5829) (nil fontified nil 5827 . 5828) (nil fontified nil 5826 . 5827) (nil fontified nil 5825 . 5826) (nil fontified nil 5824 . 5825) (nil fontified nil 5823 . 5824) (nil fontified nil 5822 . 5823) (nil fontified nil 5821 . 5822) (nil fontified nil 5820 . 5821) (nil fontified nil 5819 . 5820) (nil fontified nil 5818 . 5819) (nil fontified nil 5817 . 5818) (nil fontified nil 5816 . 5817) (nil fontified nil 5815 . 5816) (nil fontified nil 5814 . 5815) (nil fontified nil 5813 . 5814) (nil fontified nil 5812 . 5813) (nil fontified nil 5811 . 5812) (nil fontified nil 5810 . 5811) (nil fontified nil 5809 . 5810) (nil fontified nil 5808 . 5809) (nil fontified nil 5807 . 5808) (nil fontified nil 5806 . 5807) (nil fontified nil 5805 . 5806) (nil fontified nil 5804 . 5805) (nil fontified nil 5803 . 5804) (nil fontified nil 5802 . 5803) (nil fontified nil 5801 . 5802) (nil fontified nil 5800 . 5801) (nil fontified nil 5799 . 5800) (nil fontified nil 5798 . 5799) (nil fontified nil 5797 . 5798) (nil fontified nil 5796 . 5797) (nil fontified nil 5795 . 5796) (nil fontified nil 5794 . 5795) (nil fontified nil 5793 . 5794) (nil fontified nil 5792 . 5793) (nil fontified nil 5791 . 5792) (nil fontified nil 5790 . 5791) (nil fontified nil 5789 . 5790) (nil fontified nil 5788 . 5789) (5788 . 5859)) nil (25557 4609 233699 57000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t face font-lock-function-name-face)) . -5803) (undo-tree-id9692 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -5804) (undo-tree-id9693 . -1) (#("g" 0 1 (fontified t face font-lock-function-name-face)) . -5805) (undo-tree-id9694 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -5806) (undo-tree-id9695 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -5807) (undo-tree-id9696 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -5808) (undo-tree-id9697 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -5809) (undo-tree-id9698 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -5810) (undo-tree-id9699 . -1) (#("G" 0 1 (fontified t face font-lock-function-name-face)) . -5811) (undo-tree-id9700 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -5812) (undo-tree-id9701 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -5813) (undo-tree-id9702 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -5814) (undo-tree-id9703 . -1) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . -5815) (undo-tree-id9704 . -1) 5816 (t 25557 4609 297284 523000)) nil (25557 4619 56751 990000) 0 nil])
([nil nil ((5803 . 5804)) nil (25557 4619 56739 255000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5803) (undo-tree-id9691 . -1) 5804) nil (25557 4619 56738 347000) 0 nil])
([nil nil ((5803 . 5805)) nil (25557 4619 56736 193000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -5804) (undo-tree-id9690 . -1) 5805) nil (25557 4619 56734 637000) 0 nil])
([nil nil ((5804 . 5812)) nil (25557 4619 56727 291000) 0 nil])
([nil nil ((5812 . 5817)) nil (25557 4619 56709 917000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . -5837) (undo-tree-id9736 . -1) (#(" " 0 1 (fontified t)) . -5838) (undo-tree-id9737 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -5839) (undo-tree-id9738 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -5840) (undo-tree-id9739 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -5841) (undo-tree-id9740 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -5842) (undo-tree-id9741 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -5843) (undo-tree-id9742 . -1) (#(" " 0 1 (fontified t)) . -5844) (undo-tree-id9743 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5845) (undo-tree-id9744 . -1) (#(" " 0 1 (fontified t)) . -5846) (undo-tree-id9745 . -1) (#("c" 0 1 (fontified t)) . -5847) (undo-tree-id9746 . -1) (#("h" 0 1 (fontified t)) . -5848) (undo-tree-id9747 . -1) (#("a" 0 1 (fontified t)) . -5849) (undo-tree-id9748 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -5850) (undo-tree-id9749 . -1) (#("*" 0 1 (fontified t)) . -5851) (undo-tree-id9750 . -1) (#(" " 0 1 (fontified t)) . -5852) (undo-tree-id9751 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -5853) (undo-tree-id9752 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -5854) (undo-tree-id9753 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -5855) (undo-tree-id9754 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -5856) (undo-tree-id9755 . -1) (#("p" 0 1 (rear-nonsticky t fontified t face font-lock-variable-name-face)) . -5857) (undo-tree-id9756 . -1) 5858 (t 25557 4619 129237 190000)) nil (25557 4637 58644 738000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -5818) (undo-tree-id9717 . -1) (#("h" 0 1 (fontified t)) . -5819) (undo-tree-id9718 . -1) (#("a" 0 1 (fontified t)) . -5820) (undo-tree-id9719 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -5821) (undo-tree-id9720 . -1) (#("*" 0 1 (fontified t)) . -5822) (undo-tree-id9721 . -1) (#(" " 0 1 (fontified t)) . -5823) (undo-tree-id9722 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -5824) (undo-tree-id9723 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -5825) (undo-tree-id9724 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -5826) (undo-tree-id9725 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -5827) (undo-tree-id9726 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5828) (undo-tree-id9727 . -1) (#(" " 0 1 (fontified t)) . -5829) (undo-tree-id9728 . -1) (#("u" 0 1 (fontified t)) . -5830) (undo-tree-id9729 . -1) (#("i" 0 1 (fontified t)) . -5831) (undo-tree-id9730 . -1) (#("n" 0 1 (fontified t)) . -5832) (undo-tree-id9731 . -1) (#("t" 0 1 (fontified t)) . -5833) (undo-tree-id9732 . -1) (#("1" 0 1 (fontified t)) . -5834) (undo-tree-id9733 . -1) (#("6" 0 1 (fontified t)) . -5835) (undo-tree-id9734 . -1) (#("_" 0 1 (fontified t)) . -5836) (undo-tree-id9735 . -1) 5837) nil (25557 4637 58624 662000) 0 nil])
([nil nil ((5818 . 5821)) nil (25557 4637 58609 677000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -5818) (undo-tree-id9714 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5819) (undo-tree-id9715 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -5820) (undo-tree-id9716 . -1) 5821) nil (25557 4637 58608 618000) 0 nil])
([nil nil ((5818 . 5828)) nil (25557 4637 58604 700000) 0 nil])
([nil nil ((5828 . 5831)) nil (25557 4637 58603 937000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5827) (undo-tree-id9710 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5828) (undo-tree-id9711 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5829) (undo-tree-id9712 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5830) (undo-tree-id9713 . -1) 5831) nil (25557 4637 58602 716000) 0 nil])
([nil nil ((5827 . 5834)) nil (25557 4637 58598 867000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5830) (undo-tree-id9706 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5831) (undo-tree-id9707 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5832) (undo-tree-id9708 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5833) (undo-tree-id9709 . -1) 5834) nil (25557 4637 58597 443000) 0 nil])
([nil nil ((5830 . 5832)) nil (25557 4637 58592 969000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5831) (undo-tree-id9705 . -1) 5832) nil (25557 4637 58591 707000) 0 nil])
([nil nil ((5831 . 5837)) nil (25557 4637 58582 933000) 0 nil])
([nil nil ((5837 . 5838)) nil (25557 4637 58581 694000) 0 nil])
([nil nil ((5838 . 5839)) nil (25557 4637 58576 967000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5818) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (#("i" 0 1 (fontified t)) . -5819) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (#("n" 0 1 (fontified t)) . -5820) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (#("t" 0 1 (fontified t)) . -5821) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (#("6" 0 1 (fontified t)) . -5822) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (#("4" 0 1 (fontified t)) . -5823) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (#("_" 0 1 (fontified t)) . -5824) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -5825) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (#(" " 0 1 (fontified t)) . -5826) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -5827) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -5828) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -5829) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -5830) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -5831) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -5832) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -5833) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -5834) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (#("y" 0 1 (fontified t face font-lock-variable-name-face)) . -5835) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -5836) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -5837) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (#(" " 0 1 (fontified t)) . -5838) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) 5839 (t 25557 4637 125150 614000)) nil (25557 4642 615306 551000) 0 nil])
([nil nil ((5819 . 5821) (t 25557 4642 701123 800000)) nil (25557 4646 824540 621000) 0 nil])
([nil nil ((5819 . 5820)) nil (25557 4646 824539 612000) 0 nil])
([nil nil ((5821 . 5822)) nil (25557 4646 824538 708000) 0 nil])
([nil nil ((5821 . 5824)) nil (25557 4646 824537 334000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 5822) (undo-tree-id10070 . -2) (undo-tree-id10071 . -2) (undo-tree-id10072 . -2) 5824) nil (25557 4646 824533 243000) 0 nil])
([nil nil ((5822 . 5824) 5824 (t 25557 4646 893103 646000)) nil (25557 4647 511601 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5894 . 5895) (nil fontified nil 5894 . 5895) (nil fontified nil 5893 . 5894) (nil fontified nil 5892 . 5893) (nil fontified nil 5891 . 5892) (nil fontified nil 5890 . 5891) (nil fontified nil 5889 . 5890) (nil fontified nil 5888 . 5889) (nil fontified nil 5887 . 5888) (nil fontified nil 5886 . 5887) (nil fontified nil 5885 . 5886) (nil fontified nil 5884 . 5885) (nil fontified nil 5883 . 5884) (nil fontified nil 5882 . 5883) (nil fontified nil 5881 . 5882) (nil fontified nil 5880 . 5881) (nil fontified nil 5879 . 5880) (nil fontified nil 5878 . 5879) (nil fontified nil 5877 . 5878) (nil fontified nil 5876 . 5877) (nil fontified nil 5875 . 5876) (nil fontified nil 5874 . 5875) (nil fontified nil 5873 . 5874) (nil fontified nil 5872 . 5873) (nil fontified nil 5871 . 5872) (nil fontified nil 5870 . 5871) (nil fontified nil 5869 . 5870) (nil fontified nil 5868 . 5869) (nil fontified nil 5867 . 5868) (nil fontified nil 5866 . 5867) (nil fontified nil 5865 . 5866) (nil fontified nil 5864 . 5865) (nil fontified nil 5863 . 5864) (nil fontified nil 5862 . 5863) (nil fontified nil 5861 . 5862) (nil fontified nil 5860 . 5861) (nil fontified nil 5859 . 5860) (nil fontified nil 5858 . 5859) (nil fontified nil 5857 . 5858) (nil fontified nil 5856 . 5857) (nil fontified nil 5855 . 5856) (nil fontified nil 5854 . 5855) (nil fontified nil 5853 . 5854) (nil fontified nil 5852 . 5853) (nil fontified nil 5851 . 5852) (nil fontified nil 5850 . 5851) (nil fontified nil 5849 . 5850) (nil fontified nil 5848 . 5849) (nil fontified nil 5847 . 5848) (nil fontified nil 5846 . 5847) (nil fontified nil 5845 . 5846) (nil fontified nil 5844 . 5845) (nil fontified nil 5843 . 5844) (nil fontified nil 5842 . 5843) (nil fontified nil 5841 . 5842) (nil fontified nil 5840 . 5841) (nil fontified nil 5839 . 5840) (nil fontified nil 5838 . 5839) (nil fontified nil 5837 . 5838) (nil fontified nil 5836 . 5837) (nil fontified nil 5835 . 5836) (nil fontified nil 5834 . 5835) (nil fontified nil 5833 . 5834) (nil fontified nil 5832 . 5833) (nil fontified nil 5831 . 5832) (nil fontified nil 5830 . 5831) (nil fontified nil 5829 . 5830) (nil fontified nil 5828 . 5829) (nil fontified nil 5827 . 5828) (nil fontified nil 5826 . 5827) (nil fontified nil 5825 . 5826) (nil fontified nil 5824 . 5825) (5824 . 5895) (t 25557 4646 893103 646000)) nil (25557 4647 511593 856000) 0 nil])
([nil nil ((#(" uint64_t Regex_RegisterGroup(char* name, uint16_t units , char* group)" 0 1 (fontified t) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t c-type c-decl-id-start face font-lock-type-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t face font-lock-function-name-face) 27 28 (fontified t face font-lock-function-name-face) 28 29 (fontified t face font-lock-function-name-face) 29 30 (fontified t c-type c-decl-arg-start) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t face font-lock-type-face) 32 33 (fontified t face font-lock-type-face) 33 34 (fontified t face font-lock-type-face) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t face font-lock-variable-name-face) 40 41 (fontified t c-type c-decl-arg-start) 41 42 (fontified t) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t face font-lock-type-face) 44 45 (fontified t face font-lock-type-face) 45 46 (fontified t face font-lock-type-face) 46 47 (fontified t face font-lock-type-face) 47 48 (fontified t face font-lock-type-face) 48 49 (fontified t face font-lock-type-face) 49 50 (fontified t face font-lock-type-face) 50 51 (fontified t) 51 52 (fontified t face font-lock-variable-name-face) 52 53 (fontified t face font-lock-variable-name-face) 53 54 (fontified t face font-lock-variable-name-face) 54 55 (fontified t face font-lock-variable-name-face) 55 56 (fontified t face font-lock-variable-name-face) 56 57 (fontified t) 57 58 (fontified t c-type c-decl-arg-start) 58 59 (fontified t) 59 60 (fontified t face font-lock-type-face) 60 61 (fontified t face font-lock-type-face) 61 62 (fontified t face font-lock-type-face) 62 63 (fontified t face font-lock-type-face) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t face font-lock-variable-name-face) 66 67 (fontified t face font-lock-variable-name-face) 67 68 (fontified t face font-lock-variable-name-face) 68 69 (fontified t face font-lock-variable-name-face) 69 70 (rear-nonsticky t fontified t face font-lock-variable-name-face) 70 71 (fontified t)) . 5823) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -71) (t 25557 4647 573100 377000)) nil (25557 4650 82763 743000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5821) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (#(" " 0 1 (fontified t)) . -5822) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) 5823) nil (25557 4650 82739 821000) 0 nil])
([nil nil ((5822 . 5823) (t 25557 4650 149088 1000)) nil (25557 4763 791355 840000) 0 nil])
([nil nil ((295 . 297)) nil (25557 4763 791354 775000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t ws-butler-chg chg)) . -295) (undo-tree-id10123 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -296) (undo-tree-id10124 . -1) 297) nil (25557 4763 791353 823000) 0 nil])
([nil nil ((1640 . 1642)) nil (25557 4763 791351 48000) 0 nil])
([nil nil ((1642 . 1647)) nil (25557 4763 791350 298000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1641) (undo-tree-id10117 . -1) (#("R" 0 1 (fontified t ws-butler-chg chg)) . -1642) (undo-tree-id10118 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1643) (undo-tree-id10119 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1644) (undo-tree-id10120 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1645) (undo-tree-id10121 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -1646) (undo-tree-id10122 . -1) 1647) nil (25557 4763 791348 801000) 0 nil])
([nil nil ((993 . 995)) nil (25557 4763 791343 491000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -993) (undo-tree-id10116 . -1) 994) nil (25557 4763 791342 586000) 0 nil])
([nil nil ((993 . 1003)) nil (25557 4763 791341 166000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -993) (undo-tree-id10106 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -994) (undo-tree-id10107 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -995) (undo-tree-id10108 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -996) (undo-tree-id10109 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -997) (undo-tree-id10110 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -998) (undo-tree-id10111 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face c-type c-decl-type-start)) . -999) (undo-tree-id10112 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1000) (undo-tree-id10113 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1001) (undo-tree-id10114 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1002) (undo-tree-id10115 . -1) 1003) nil (25557 4763 791339 56000) 0 nil])
([nil nil ((993 . 1000)) nil (25557 4763 791329 477000) 0 nil])
([nil nil ((1000 . 1006)) nil (25557 4763 791328 681000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1001) (undo-tree-id10101 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1002) (undo-tree-id10102 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1003) (undo-tree-id10103 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1004) (undo-tree-id10104 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1005) (undo-tree-id10105 . -1) 1006) nil (25557 4763 791327 454000) 0 nil])
([nil nil ((1001 . 1002)) nil (25557 4763 791322 399000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1000) (undo-tree-id10099 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1001) (undo-tree-id10100 . -1) 1002) nil (25557 4763 791321 498000) 0 nil])
([nil nil ((1000 . 1005)) nil (25557 4763 791319 259000) 0 nil])
([nil nil ((1005 . 1006)) nil (25557 4763 791318 603000) 0 nil])
([nil nil ((1006 . 1010)) nil (25557 4763 791317 944000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -1005) (undo-tree-id10094 . -1) (#("C" 0 1 (fontified t ws-butler-chg chg)) . -1006) (undo-tree-id10095 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1007) (undo-tree-id10096 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1008) (undo-tree-id10097 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1009) (undo-tree-id10098 . -1) 1010) nil (25557 4763 791316 439000) 0 nil])
([nil nil ((1005 . 1007)) nil (25557 4763 791312 129000) 0 nil])
([nil nil ((1007 . 1010)) nil (25557 4763 791311 487000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1006) (undo-tree-id10090 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1007) (undo-tree-id10091 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1008) (undo-tree-id10092 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1009) (undo-tree-id10093 . -1) 1010) nil (25557 4763 791309 954000) 0 nil])
([nil nil ((1006 . 1016)) nil (25557 4763 791304 76000) 0 nil])
([nil nil ((1016 . 1017)) nil (25557 4763 791302 762000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg)) . 5848) (undo-tree-id10089 . -1) 1017) nil (25557 4763 791298 655000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1016) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) 1017 (t 25557 4763 872542 727000)) nil (25557 4767 711972 37000) 0 nil])
([nil nil ((1016 . 1018)) nil (25557 4767 711968 86000) 0 nil])
([nil nil ((1016 . 1018)) nil (25557 4767 711967 301000) 0 nil])
([nil nil ((1019 . 1021)) nil (25557 4767 711966 13000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1017) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) 1018) nil (25557 4767 711961 851000) 0 nil])
([nil nil ((1019 . 1020) (t 25557 4767 776524 50000)) nil (25557 4794 898544 513000) 0 nil])
([nil nil ((1020 . 1024)) nil (25557 4794 898543 624000) 0 nil])
([nil nil ((1024 . 1026)) nil (25557 4794 898542 299000) 0 nil])
([nil nil ((1026 . 1032)) nil (25557 4794 898541 83000) 0 nil])
([nil nil ((1032 . 1033)) nil (25557 4794 898536 602000) 0 nil])
([nil nil ((1026 . 1027) (t 25557 4794 964394 59000)) nil (25557 4871 770734 122000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1026) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) 1027 (t 25557 4871 832027 174000)) nil (25557 4875 961368 135000) 0 nil])
([nil nil ((1036 . 1039) (t 25557 4876 32007 153000)) nil (25557 4969 982762 198000) 0 nil])
([nil nil ((1037 . 1040) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1037) (undo-tree-id10218 . -2) 1039) nil (25557 4969 982761 194000) 0 nil])
([nil nil ((1038 . 1041) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1038) (undo-tree-id10217 . -2) 1040) nil (25557 4969 982759 557000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 1039) (undo-tree-id10216 . -2) 1041) nil (25557 4969 982757 519000) 0 nil])
([nil nil ((993 . 994)) nil (25557 4969 982755 749000) 0 nil])
([nil nil ((992 . 993)) nil (25557 4969 982754 945000) 0 nil])
([nil nil ((993 . 1009)) nil (25557 4969 982754 270000) 0 nil])
([nil nil ((1009 . 1011)) nil (25557 4969 982753 486000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1006) (undo-tree-id10211 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1007) (undo-tree-id10212 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1008) (undo-tree-id10213 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1009) (undo-tree-id10214 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1010) (undo-tree-id10215 . -1) 1011) nil (25557 4969 982739 996000) 0 nil])
([nil nil ((1006 . 1013)) nil (25557 4969 982735 138000) 0 nil])
([nil nil ((1000 . 1016) (#("Regex_GroupTa" 0 1 (ws-butler-chg chg fontified t face font-lock-type-face) 1 2 (ws-butler-chg chg fontified t face font-lock-type-face) 2 3 (ws-butler-chg chg fontified t face font-lock-type-face) 3 4 (ws-butler-chg chg fontified t face font-lock-type-face) 4 5 (ws-butler-chg chg fontified t face font-lock-type-face) 5 6 (ws-butler-chg chg fontified t face font-lock-type-face) 6 7 (ws-butler-chg chg fontified t face font-lock-type-face) 7 8 (ws-butler-chg chg fontified t face font-lock-type-face) 8 9 (ws-butler-chg chg fontified t face font-lock-type-face) 9 10 (ws-butler-chg chg fontified t face font-lock-type-face) 10 11 (ws-butler-chg chg fontified t face font-lock-type-face) 11 12 (ws-butler-chg chg fontified t face font-lock-type-face) 12 13 (ws-butler-chg chg fontified t face font-lock-type-face)) . -1000) (undo-tree-id10210 . -13) 1013) nil (25557 4969 982734 33000) 0 nil])
([nil nil ((1016 . 1017)) nil (25557 4969 982732 416000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1016) (undo-tree-id10209 . -1) 1017) nil (25557 4969 982715 199000) 0 nil])
([nil nil ((1016 . 1021)) nil (25557 4969 982713 761000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1019) (undo-tree-id10207 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1020) (undo-tree-id10208 . -1) 1021) nil (25557 4969 982712 727000) 0 nil])
([nil nil ((1019 . 1020)) nil (25557 4969 982710 691000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1018) (undo-tree-id10205 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1019) (undo-tree-id10206 . -1) 1020) nil (25557 4969 982709 855000) 0 nil])
([nil nil ((1018 . 1022)) nil (25557 4969 982707 524000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1018) (undo-tree-id10201 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1019) (undo-tree-id10202 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1020) (undo-tree-id10203 . -1) (#("z" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1021) (undo-tree-id10204 . -1) 1022) nil (25557 4969 982706 319000) 0 nil])
([nil nil ((1018 . 1022)) nil (25557 4969 982702 637000) 0 nil])
([nil nil ((1022 . 1024)) nil (25557 4969 982702 54000) 0 nil])
([nil nil ((1022 . 1023)) nil (25557 4969 982701 368000) 0 nil])
([nil nil ((1024 . 1025)) nil (25557 4969 982700 786000) 0 nil])
([nil nil ((1024 . 1025)) nil (25557 4969 982700 117000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1024) (undo-tree-id10200 . -1) 1025) nil (25557 4969 982699 325000) 0 nil])
([nil nil ((1024 . 1027)) nil (25557 4969 982697 349000) 0 nil])
([nil nil ((1027 . 1028)) nil (25557 4969 982696 727000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1026) (undo-tree-id10198 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1027) (undo-tree-id10199 . -1) 1028) nil (25557 4969 982695 785000) 0 nil])
([nil nil ((1026 . 1027)) nil (25557 4969 982681 850000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -1026) (undo-tree-id10197 . -1) 1027) nil (25557 4969 982680 933000) 0 nil])
([nil nil ((1026 . 1030)) nil (25557 4969 982679 423000) 0 nil])
([nil nil ((1030 . 1031)) nil (25557 4969 982678 689000) 0 nil])
([nil nil ((1031 . 1037)) nil (25557 4969 982678 121000) 0 nil])
([nil nil ((1037 . 1038)) nil (25557 4969 982677 391000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1032) (undo-tree-id10191 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1033) (undo-tree-id10192 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1034) (undo-tree-id10193 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1035) (undo-tree-id10194 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1036) (undo-tree-id10195 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -1037) (undo-tree-id10196 . -1) 1038) nil (25557 4969 982675 940000) 0 nil])
([nil nil ((1032 . 1037)) nil (25557 4969 982669 865000) 0 nil])
([nil nil ((1037 . 1038)) nil (25557 4969 982669 161000) 0 nil])
([nil nil ((1038 . 1041)) nil (25557 4969 982668 506000) 0 nil])
([nil nil ((1041 . 1042)) nil (25557 4969 982667 940000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10189 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1041) (undo-tree-id10190 . -1) 1042) nil (25557 4969 982666 954000) 0 nil])
([nil nil ((1040 . 1044)) nil (25557 4969 982664 721000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10185 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -1041) (undo-tree-id10186 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1042) (undo-tree-id10187 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1043) (undo-tree-id10188 . -1) 1044) nil (25557 4969 982663 351000) 0 nil])
([nil nil ((1040 . 1042)) nil (25557 4969 982659 352000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10183 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1041) (undo-tree-id10184 . -1) 1042) nil (25557 4969 982658 430000) 0 nil])
([nil nil ((1040 . 1048)) nil (25557 4969 982656 195000) 0 nil])
([nil nil ((1040 . 1062) (#("Regex_Gr" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10182 . -8) 1048) nil (25557 4969 982655 312000) 0 nil])
([nil nil ((1062 . 1064)) nil (25557 4969 982653 799000) 0 nil])
([nil nil ((1063 . 1065) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1063) (undo-tree-id10181 . -1) 1064) nil (25557 4969 982652 884000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t ws-butler-chg chg)) . -1044) (undo-tree-id10160 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -1045) (undo-tree-id10161 . -1) (#("G" 0 1 (fontified t ws-butler-chg chg)) . -1046) (undo-tree-id10162 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1047) (undo-tree-id10163 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1048) (undo-tree-id10164 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1049) (undo-tree-id10165 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -1050) (undo-tree-id10166 . -1) (#("T" 0 1 (fontified t ws-butler-chg chg)) . -1051) (undo-tree-id10167 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1052) (undo-tree-id10168 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -1053) (undo-tree-id10169 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1054) (undo-tree-id10170 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1055) (undo-tree-id10171 . -1) (#("B" 0 1 (fontified t ws-butler-chg chg)) . -1056) (undo-tree-id10172 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1057) (undo-tree-id10173 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1058) (undo-tree-id10174 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -1059) (undo-tree-id10175 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1060) (undo-tree-id10176 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1061) (undo-tree-id10177 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -1062) (undo-tree-id10178 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -1063) (undo-tree-id10179 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1064) (undo-tree-id10180 . -1) 1065) nil (25557 4969 982647 828000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10156 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1041) (undo-tree-id10157 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1042) (undo-tree-id10158 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1043) (undo-tree-id10159 . -1) 1044) nil (25557 4969 982565 63000) 0 nil])
([nil nil ((1040 . 1049)) nil (25557 4969 982560 250000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1048) (undo-tree-id10155 . -1) 1049) nil (25557 4969 982559 527000) 0 nil])
([nil nil ((1048 . 1050)) nil (25557 4969 982545 361000) 0 nil])
([nil nil ((1047 . 1060) (#("Reg" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1047) (undo-tree-id10154 . -3) 1050) nil (25557 4969 982544 460000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1058) (undo-tree-id10152 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1059) (undo-tree-id10153 . -1) 1060) nil (25557 4969 982542 720000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1053) (undo-tree-id10147 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1054) (undo-tree-id10148 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1055) (undo-tree-id10149 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1056) (undo-tree-id10150 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1057) (undo-tree-id10151 . -1) 1058) nil (25557 4969 982539 946000) 0 nil])
([nil nil ((1053 . 1058)) nil (25557 4969 982520 958000) 0 nil])
([nil nil ((1047 . 1063) (#("Regex_Group" 0 6 (fontified t ws-butler-chg chg face font-lock-type-face) 6 7 (fontified t ws-butler-chg chg face font-lock-type-face) 7 8 (fontified t ws-butler-chg chg face font-lock-type-face) 8 9 (fontified t ws-butler-chg chg face font-lock-type-face) 9 10 (fontified t ws-butler-chg chg face font-lock-type-face) 10 11 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1047) (undo-tree-id10146 . -11) 1058) nil (25557 4969 982520 133000) 0 nil])
([nil nil ((1063 . 1068)) nil (25557 4969 982518 546000) 0 nil])
([nil nil ((1068 . 1070)) nil (25557 4969 982517 931000) 0 nil])
([nil nil ((1068 . 1070)) nil (25557 4969 982517 320000) 0 nil])
([nil nil ((1071 . 1073)) nil (25557 4969 982516 583000) 0 nil])
([nil nil ((1071 . 1075)) nil (25557 4969 982515 926000) 0 nil])
([nil nil ((1072 . 1076) (#("   " 0 3 (fontified t ws-butler-chg chg)) . 1072) (undo-tree-id10145 . -3) 1075) nil (25557 4969 982515 72000) 0 nil])
([nil nil ((1076 . 1077)) nil (25557 4969 982513 489000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1072) (undo-tree-id10140 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1073) (undo-tree-id10141 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1074) (undo-tree-id10142 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1075) (undo-tree-id10143 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1076) (undo-tree-id10144 . -1) 1077) nil (25557 4969 982512 102000) 0 nil])
([nil nil ((1072 . 1074)) nil (25557 4969 982507 154000) 0 nil])
([nil nil ((#("Regex_GroupTableBucet" 0 16 (fontified t ws-butler-chg chg face font-lock-type-face) 16 17 (fontified t ws-butler-chg chg face font-lock-type-face) 17 18 (fontified t ws-butler-chg chg face font-lock-type-face) 18 19 (fontified t ws-butler-chg chg face font-lock-type-face) 19 20 (fontified t ws-butler-chg chg face font-lock-type-face) 20 21 (fontified t ws-butler-chg chg face font-lock-type-face)) . 1047) (undo-tree-id10139 . -21)) nil (25557 4969 982506 242000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1076 . 1077) (nil fontified nil 1076 . 1077) (nil fontified nil 1075 . 1076) (nil fontified nil 1074 . 1075) (nil fontified nil 1073 . 1074) (nil fontified nil 1072 . 1073) (nil fontified nil 1056 . 1072) (1056 . 1077)) nil (25557 4969 982504 10000) 0 nil])
([nil nil ((#("  " 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t)) . 1050) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1046) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) 1077) nil (25557 4969 982499 17000) 0 nil])
([nil nil ((1072 . 1073) (t 25557 4970 55559 562000)) nil (25557 4972 512510 188000) 0 nil])
([nil nil ((1075 . 1076) (t 25557 4972 587547 525000)) nil (25557 4987 718835 541000) 0 nil])
([nil nil ((#("struct
 {

 }Regex_GroupTableBucket;" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (rear-nonsticky t fontified t face font-lock-variable-name-face) 35 36 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10223 . -36) (undo-tree-id10224 . -13) (undo-tree-id10225 . -36) 1052) nil (25557 4987 718834 524000) 0 nil])
([nil nil ((1040 . 1041)) nil (25557 4987 718831 901000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10222 . -1) 1041) nil (25557 4987 718831 106000) 0 nil])
([nil nil ((1040 . 1044)) nil (25557 4987 718829 509000) 0 nil])
([nil nil ((1044 . 1045)) nil (25557 4987 718828 934000) 0 nil])
([nil nil ((1045 . 1048)) nil (25557 4987 718828 332000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1046) (undo-tree-id10220 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1047) (undo-tree-id10221 . -1) 1048) nil (25557 4987 718827 329000) 0 nil])
([nil nil ((1046 . 1049)) nil (25557 4987 718824 683000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -1048) (undo-tree-id10219 . -1) 1049) nil (25557 4987 718823 301000) 0 nil])
([nil nil ((1048 . 1050)) nil (25557 4987 718813 122000) 0 nil])
([nil nil ((1050 . 1051)) nil (25557 4987 718808 794000) 0 nil])
([nil nil ((#("struct Regex_GroupTableBucket
{
 char* entry;
 void* next;
}
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 23 (fontified t face font-lock-type-face) 23 24 (fontified t face font-lock-type-face) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t face font-lock-type-face) 34 35 (fontified t face font-lock-type-face) 35 36 (fontified t face font-lock-type-face) 36 37 (fontified t c-type c-decl-id-start face font-lock-type-face) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t face font-lock-variable-name-face) 40 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t face font-lock-variable-name-face) 42 43 (fontified t face font-lock-variable-name-face) 43 44 (fontified t face font-lock-variable-name-face) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t face font-lock-type-face) 48 49 (fontified t face font-lock-type-face) 49 50 (fontified t face font-lock-type-face) 50 51 (fontified t c-type c-decl-id-start face font-lock-type-face) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t face font-lock-variable-name-face) 54 55 (fontified t face font-lock-variable-name-face) 55 56 (fontified t face font-lock-variable-name-face) 56 57 (fontified t face font-lock-variable-name-face) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t)) . 993) (undo-tree-id10226 . -61) (undo-tree-id10227 . -47) (undo-tree-id10228 . -47) (undo-tree-id10229 . -57) (undo-tree-id10230 . -58) (undo-tree-id10231 . -58) (undo-tree-id10232 . -58) (undo-tree-id10233 . -47) (undo-tree-id10234 . -61) (undo-tree-id10235 . -61) (undo-tree-id10236 . -61) (undo-tree-id10237 . -61) (t 25557 4987 787475 271000)) nil (25557 5001 400718 37000) 0 nil])
([nil nil ((1040 . 1042) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 1040) (1025 . 1027) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 1025) (nil rear-nonsticky nil 1053 . 1054) (nil fontified nil 1053 . 1054) (nil fontified nil 1052 . 1053) (nil fontified nil 1051 . 1052) (nil fontified nil 1050 . 1051) (nil fontified nil 1049 . 1050) (nil fontified nil 1048 . 1049) (nil fontified nil 1047 . 1048) (nil fontified nil 1046 . 1047) (nil fontified nil 1045 . 1046) (nil fontified nil 1044 . 1045) (nil fontified nil 1043 . 1044) (nil fontified nil 1042 . 1043) (nil fontified nil 1041 . 1042) (nil fontified nil 1040 . 1041) (nil fontified nil 1039 . 1040) (nil fontified nil 1038 . 1039) (nil fontified nil 1037 . 1038) (nil fontified nil 1036 . 1037) (nil fontified nil 1035 . 1036) (nil fontified nil 1034 . 1035) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1027 . 1028) (nil fontified nil 1026 . 1027) (nil fontified nil 1025 . 1026) (nil fontified nil 1024 . 1025) (nil fontified nil 1023 . 1024) (nil fontified nil 1022 . 1023) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1019 . 1020) (nil fontified nil 1018 . 1019) (nil fontified nil 1017 . 1018) (nil fontified nil 1016 . 1017) (nil fontified nil 1000 . 1016) (nil fontified nil 999 . 1000) (nil fontified nil 998 . 999) (nil fontified nil 997 . 998) (nil fontified nil 996 . 997) (nil fontified nil 995 . 996) (nil fontified nil 994 . 995) (nil fontified nil 993 . 994) (993 . 1054)) nil (25557 5001 400667 59000) 0 nil])
([nil nil ((993 . 998) (t 25557 5001 471410 247000)) nil (25557 5011 330518 907000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -993) (undo-tree-id10239 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -994) (undo-tree-id10240 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -995) (undo-tree-id10241 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -996) (undo-tree-id10242 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -997) (undo-tree-id10243 . -1) 998) nil (25557 5011 330517 313000) 0 nil])
([nil nil ((993 . 1001)) nil (25557 5011 330509 772000) 0 nil])
([nil nil ((#("Regex_GroupTableBucket" 0 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 18 (fontified t face font-lock-type-face) 18 19 (fontified t face font-lock-type-face) 19 20 (fontified t face font-lock-type-face) 20 21 (fontified t face font-lock-type-face) 21 22 (fontified t face font-lock-type-face)) . 1008) (undo-tree-id10238 . -22)) nil (25557 5011 330507 989000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1029 . 1030) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1027 . 1028) (nil fontified nil 1026 . 1027) (nil fontified nil 1025 . 1026) (nil fontified nil 1024 . 1025) (nil fontified nil 1008 . 1024) (1008 . 1030)) nil (25557 5011 330485 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1084 . 1085) (nil fontified nil 1084 . 1085) (nil fontified nil 1083 . 1084) (nil fontified nil 1082 . 1083) (nil fontified nil 1081 . 1082) (nil fontified nil 1080 . 1081) (nil fontified nil 1079 . 1080) (nil fontified nil 1063 . 1079) (1063 . 1085) (t 25557 5011 403363 64000)) nil (25557 5012 704835 772000) 0 nil])
([nil nil ((1085 . 1086) (t 25557 5012 779356 527000)) nil (25557 5013 681832 111000) 0 nil])
([nil nil ((#("Regex_GroupTableBucket" 0 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 18 (fontified t face font-lock-type-face) 18 19 (fontified t face font-lock-type-face) 19 20 (fontified t face font-lock-type-face) 20 21 (fontified t face font-lock-type-face) 21 22 (fontified t rear-nonsticky t face font-lock-type-face)) . 1008) (undo-tree-id10250 . -22) (undo-tree-id10251 . -22) (t 25557 5013 747351 930000)) nil (25557 5016 775481 982000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1007) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) 1008) nil (25557 5016 775476 173000) 0 nil])
([nil nil ((1007 . 1008) 1008 (t 25557 5016 847337 206000)) nil (25557 5019 789158 13000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1007) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) 1008 (t 25557 5016 847337 206000)) nil (25557 5019 789153 277000) 0 nil])
([nil nil ((1038 . 1041) (t 25557 5019 855322 921000)) nil (25557 5021 455116 511000) 0 nil])
([nil nil ((1039 . 1042) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1039) (undo-tree-id10260 . -2) (undo-tree-id10261 . -2) (undo-tree-id10262 . -2) 1041) nil (25557 5021 455114 773000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 1040) (undo-tree-id10256 . -2) (undo-tree-id10257 . -2) (undo-tree-id10258 . -2) (undo-tree-id10259 . -2) 1042) nil (25557 5021 455107 361000) 0 nil])
([nil nil ((1040 . 1042) 1042 (t 25557 5021 527314 980000)) nil (25557 5022 655778 574000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1038) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (#("
" 0 1 (fontified t)) . -1039) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1040) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1041) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) 1042 (t 25557 5021 527314 980000)) nil (25557 5022 655772 789000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1011) (undo-tree-id10290 . -1) 1012 (t 25557 5022 715309 338000)) nil (25557 5027 294403 731000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1024)) nil (25557 5027 294391 301000) 0 nil])
([nil nil ((1037 . 1038) (t 25557 5027 359287 285000)) nil (25557 5029 339358 704000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1037) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) 1038 (t 25557 5029 407277 560000)) nil (25557 5030 447909 269000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -1090) (undo-tree-id10298 . -1) (#("h" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -1091) (undo-tree-id10299 . -1) (#("a" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -1092) (undo-tree-id10300 . -1) (#("r" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -1093) (undo-tree-id10301 . -1) (#("*" 0 1 (fontified t)) . -1094) (undo-tree-id10302 . -1) (#("*" 0 1 (fontified t)) . -1095) (undo-tree-id10303 . -1) 1096 (t 25557 5030 511272 320000)) nil (25557 5082 89665 122000) 0 nil])
([nil nil ((1090 . 1095)) nil (25557 5082 89629 801000) 0 nil])
([nil nil ((1090 . 1112) (#("Regex" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg face font-lock-type-face) 4 5 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1090) (undo-tree-id10296 . -5) (undo-tree-id10297 . -5) 1095) nil (25557 5082 89626 60000) 0 nil])
([nil nil ((1112 . 1113) (t 25557 5082 195169 860000)) nil (25557 5083 511536 193000) 0 nil])
([nil nil ((1123 . 1126) (t 25557 5083 575169 68000)) nil (25557 5128 237793 44000) 0 nil])
([nil nil ((1124 . 1127) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1124) (undo-tree-id10346 . -2) 1126) nil (25557 5128 237792 82000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1124) (undo-tree-id10343 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1125) (undo-tree-id10344 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1126) (undo-tree-id10345 . -1) 1127) nil (25557 5128 237790 34000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -1124) (undo-tree-id10341 . -1) (#("
" 0 1 (fontified t)) . -1125) (undo-tree-id10342 . -1) 1126) nil (25557 5128 237785 678000) 0 nil])
([nil nil ((1124 . 1129)) nil (25557 5128 237783 605000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -1124) (undo-tree-id10336 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1125) (undo-tree-id10337 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1126) (undo-tree-id10338 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1127) (undo-tree-id10339 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -1128) (undo-tree-id10340 . -1) 1129) nil (25557 5128 237782 270000) 0 nil])
([nil nil ((1124 . 1129)) nil (25557 5128 237778 8000) 0 nil])
([nil nil ((1124 . 1146) (#("Regex" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg face font-lock-type-face) 4 5 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1124) (undo-tree-id10335 . -5) 1129) nil (25557 5128 237777 72000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -1131) (undo-tree-id10320 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1132) (undo-tree-id10321 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1133) (undo-tree-id10322 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1134) (undo-tree-id10323 . -1) (#("T" 0 1 (fontified t ws-butler-chg chg)) . -1135) (undo-tree-id10324 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1136) (undo-tree-id10325 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -1137) (undo-tree-id10326 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1138) (undo-tree-id10327 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1139) (undo-tree-id10328 . -1) (#("B" 0 1 (fontified t ws-butler-chg chg)) . -1140) (undo-tree-id10329 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1141) (undo-tree-id10330 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1142) (undo-tree-id10331 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -1143) (undo-tree-id10332 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1144) (undo-tree-id10333 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1145) (undo-tree-id10334 . -1) 1146) nil (25557 5128 237773 438000) 0 nil])
([nil nil ((1131 . 1132)) nil (25557 5128 237759 336000) 0 nil])
([nil nil ((1132 . 1133)) nil (25557 5128 237758 634000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1132) (undo-tree-id10319 . -1) 1133) nil (25557 5128 237757 799000) 0 nil])
([nil nil ((1132 . 1133)) nil (25557 5128 237756 457000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -1131) (undo-tree-id10317 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1132) (undo-tree-id10318 . -1) 1133) nil (25557 5128 237755 587000) 0 nil])
([nil nil ((1131 . 1133)) nil (25557 5128 237753 50000) 0 nil])
([nil nil ((1124 . 1146) (#("Regex_Gro" 0 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg)) . -1124) (undo-tree-id10316 . -9) 1133) nil (25557 5128 237752 182000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg)) . -1140) (undo-tree-id10310 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1141) (undo-tree-id10311 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1142) (undo-tree-id10312 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -1143) (undo-tree-id10313 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1144) (undo-tree-id10314 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1145) (undo-tree-id10315 . -1) 1146) nil (25557 5128 237749 777000) 0 nil])
([nil nil ((1140 . 1141)) nil (25557 5128 237744 913000) 0 nil])
([nil nil ((1141 . 1146)) nil (25557 5128 237744 338000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg)) . -1141) (undo-tree-id10305 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1142) (undo-tree-id10306 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1143) (undo-tree-id10307 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1144) (undo-tree-id10308 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -1145) (undo-tree-id10309 . -1) 1146) nil (25557 5128 237742 856000) 0 nil])
([nil nil ((1141 . 1142)) nil (25557 5128 237737 985000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -1141) (undo-tree-id10304 . -1) 1142) nil (25557 5128 237736 581000) 0 nil])
([nil nil ((1141 . 1152)) nil (25557 5128 237727 648000) 0 nil])
([nil nil ((1152 . 1153)) nil (25557 5128 237723 28000) 0 nil])
([nil nil ((1124 . 1127) (t 25557 5128 307136 281000)) nil (25557 5137 7792 490000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1124) (undo-tree-id10352 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1125) (undo-tree-id10353 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1126) (undo-tree-id10354 . -1) 1127) nil (25557 5137 7791 237000) 0 nil])
([nil nil ((1124 . 1129)) nil (25557 5137 7788 194000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1124) (undo-tree-id10347 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1125) (undo-tree-id10348 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1126) (undo-tree-id10349 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1127) (undo-tree-id10350 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -1128) (undo-tree-id10351 . -1) 1129) nil (25557 5137 7785 537000) 0 nil])
([nil nil ((1124 . 1131)) nil (25557 5137 7769 960000) 0 nil])
([nil nil ((5991 . 5992) (t 25557 5137 75128 289000)) nil (25557 5147 494503 751000) 0 nil])
([nil nil ((5992 . 5995)) nil (25557 5147 494502 902000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -5992) (undo-tree-id10358 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -5993) (undo-tree-id10359 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5994) (undo-tree-id10360 . -1) 5995) nil (25557 5147 494501 853000) 0 nil])
([nil nil ((5992 . 5993)) nil (25557 5147 494498 132000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -5992) (undo-tree-id10357 . -1) 5993) nil (25557 5147 494496 855000) 0 nil])
([nil nil ((5992 . 5997)) nil (25557 5147 494494 551000) 0 nil])
([nil nil ((5992 . 6003) (#("group" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -5992) (undo-tree-id10355 . -5) (undo-tree-id10356 . -5) 5997) nil (25557 5147 494490 372000) 0 nil])
([nil nil ((5987 . 5992) (t 25557 5147 567118 80000)) nil (25557 5180 399795 496000) 0 nil])
([nil nil ((nil fontified nil 5987 . 5994) (5987 . 5994) (#("uint8" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -5987) (undo-tree-id10375 . -5) 5992) nil (25557 5180 399794 479000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t ws-butler-chg chg)) . -5991) (undo-tree-id10372 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -5992) (undo-tree-id10373 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -5993) (undo-tree-id10374 . -1) 5994) nil (25557 5180 399792 309000) 0 nil])
([nil nil ((5991 . 5994)) nil (25557 5180 399789 172000) 0 nil])
([nil nil ((nil fontified nil 5987 . 5995) (5987 . 5995) (#("uint64_" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -5987) (undo-tree-id10371 . -7) 5994) nil (25557 5180 399788 171000) 0 nil])
([nil nil ((5995 . 5998)) nil (25557 5180 399786 317000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5996) (undo-tree-id10369 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5997) (undo-tree-id10370 . -1) 5998) nil (25557 5180 399785 179000) 0 nil])
([nil nil ((5996 . 6001)) nil (25557 5180 399782 806000) 0 nil])
([nil nil ((6001 . 6007)) nil (25557 5180 399782 43000) 0 nil])
([nil nil ((6007 . 6008)) nil (25557 5180 399781 280000) 0 nil])
([nil nil ((#("uint64_t group_count," 0 8 (fontified t ws-butler-chg chg face font-lock-type-face) 8 9 (fontified t ws-butler-chg chg) 9 10 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 10 11 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 11 12 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 12 13 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 13 14 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 14 15 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 15 16 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 16 17 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 17 18 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 18 19 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 19 20 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 20 21 (fontified t ws-butler-chg chg c-type c-decl-arg-start)) . 5987) (undo-tree-id10361 . -21) (undo-tree-id10362 . -20) (undo-tree-id10363 . -21) (undo-tree-id10364 . -21) (undo-tree-id10365 . -21) (undo-tree-id10366 . -21) (undo-tree-id10367 . -21) (undo-tree-id10368 . -21)) nil (25557 5180 399779 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6007 . 6008) (nil fontified nil 6007 . 6008) (nil fontified nil 6006 . 6007) (nil fontified nil 6005 . 6006) (nil fontified nil 6004 . 6005) (nil fontified nil 6003 . 6004) (nil fontified nil 6002 . 6003) (nil fontified nil 6001 . 6002) (nil fontified nil 6000 . 6001) (nil fontified nil 5999 . 6000) (nil fontified nil 5998 . 5999) (nil fontified nil 5997 . 5998) (nil fontified nil 5996 . 5997) (nil fontified nil 5995 . 5996) (nil fontified nil 5987 . 5995) (5987 . 6008)) nil (25557 5180 399761 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6028 . 6029) (nil fontified nil 6028 . 6029) (nil fontified nil 6027 . 6028) (nil fontified nil 6026 . 6027) (nil fontified nil 6025 . 6026) (nil fontified nil 6024 . 6025) (nil fontified nil 6023 . 6024) (nil fontified nil 6022 . 6023) (nil fontified nil 6021 . 6022) (nil fontified nil 6020 . 6021) (nil fontified nil 6019 . 6020) (nil fontified nil 6018 . 6019) (nil fontified nil 6017 . 6018) (nil fontified nil 6016 . 6017) (nil fontified nil 6008 . 6016) (6008 . 6029) (t 25557 5180 471081 663000)) nil (25557 5181 369886 900000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -6008) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (#("i" 0 1 (fontified t)) . -6009) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (#("n" 0 1 (fontified t)) . -6010) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (#("t" 0 1 (fontified t)) . -6011) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (#("6" 0 1 (fontified t)) . -6012) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (#("4" 0 1 (fontified t)) . -6013) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (#("_" 0 1 (fontified t)) . -6014) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -6015) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (#(" " 0 1 (fontified t)) . -6016) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -6017) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -6018) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -6019) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -6020) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -6021) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -6022) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -6023) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -6024) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -6025) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -6026) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -6027) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (#("," 0 1 (fontified t rear-nonsticky t c-type c-decl-arg-start)) . -6028) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) 6029 (t 25557 5181 435080 498000)) nil (25557 5185 366898 186000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t c-type c-decl-arg-start)) . -6007) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) 6008) nil (25557 5185 366664 921000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -5996) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -5997) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -5998) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -5999) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -6000) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -6001) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -6002) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -6003) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -6004) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -6005) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -6006) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) 6007 (t 25557 5185 447075 592000)) nil (25557 5197 599023 368000) 0 nil])
([nil nil ((5996 . 6009)) nil (25557 5197 598974 231000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6007) (undo-tree-id10698 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6008) (undo-tree-id10699 . -1) 6009) nil (25557 5197 598973 38000) 0 nil])
([nil nil ((6007 . 6011)) nil (25557 5197 598955 899000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6010) (undo-tree-id10697 . -1) 6011) nil (25557 5197 598954 168000) 0 nil])
([nil nil ((6010 . 6013)) nil (25557 5197 598943 310000) 0 nil])
([nil nil ((6029 . 6030) (t 25557 5197 671060 68000)) nil (25557 5229 54116 316000) 0 nil])
([nil nil ((6030 . 6033)) nil (25557 5229 54115 306000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -6030) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -6031) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -6032) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) 6033) nil (25557 5229 54113 305000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -6006) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -6007) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -6008) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -6009) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -6010) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -6011) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -6012) (undo-tree-id10772 . -1) 6013) nil (25557 5229 54099 475000) 0 nil])
([nil nil ((6006 . 6007) (t 25557 5229 123016 276000)) nil (25557 5248 326555 177000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg c-type c-decl-arg-start)) . -6006) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) 6007) nil (25557 5248 326550 831000) 0 nil])
([nil nil ((1009 . 1012) (t 25557 5248 394986 816000)) nil (25557 5282 321507 139000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1011) (undo-tree-id10789 . -1) 1012) nil (25557 5282 321505 391000) 0 nil])
([nil nil ((1011 . 1015)) nil (25557 5282 321496 852000) 0 nil])
([nil nil ((1015 . 1016)) nil (25557 5282 321495 773000) 0 nil])
([nil nil ((1016 . 1021)) nil (25557 5282 321494 375000) 0 nil])
([nil nil ((1021 . 1022)) nil (25557 5282 321489 921000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1030) (undo-tree-id10790 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -1031) (undo-tree-id10791 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1032) (undo-tree-id10792 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -1033) (undo-tree-id10793 . -1) (#("y" 0 1 (fontified t face font-lock-variable-name-face)) . -1034) (undo-tree-id10794 . -1) 1035 (t 25557 5282 386930 234000)) nil (25557 5285 562595 25000) 0 nil])
([nil nil ((1030 . 1035)) nil (25557 5285 562580 440000) 0 nil])
([nil nil ((6036 . 6048) (t 25557 5285 638924 525000)) nil (25557 5353 956899 122000) 0 nil])
([nil nil ((6048 . 6050)) nil (25557 5353 956898 183000) 0 nil])
([nil nil ((6049 . 6053)) nil (25557 5353 956897 507000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t ws-butler-chg chg)) . -6051) (undo-tree-id10813 . -1) (#("6" 0 1 (fontified t ws-butler-chg chg)) . -6052) (undo-tree-id10814 . -1) 6053) nil (25557 5353 956883 826000) 0 nil])
([nil nil ((6051 . 6052)) nil (25557 5353 956881 311000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -6049) (undo-tree-id10810 . -1) (#("2" 0 1 (fontified t ws-butler-chg chg)) . -6050) (undo-tree-id10811 . -1) (#("6" 0 1 (fontified t ws-butler-chg chg)) . -6051) (undo-tree-id10812 . -1) 6052) nil (25557 5353 956880 78000) 0 nil])
([nil nil ((6049 . 6051)) nil (25557 5353 956876 648000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg)) . -6049) (undo-tree-id10808 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6050) (undo-tree-id10809 . -1) 6051) nil (25557 5353 956875 784000) 0 nil])
([nil nil ((6049 . 6053)) nil (25557 5353 956859 244000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg)) . -6049) (undo-tree-id10804 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg)) . -6050) (undo-tree-id10805 . -1) (#("F" 0 1 (fontified t ws-butler-chg chg)) . -6051) (undo-tree-id10806 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg)) . -6052) (undo-tree-id10807 . -1) 6053) nil (25557 5353 956857 963000) 0 nil])
([nil nil ((6049 . 6053)) nil (25557 5353 956853 80000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -6049) (undo-tree-id10800 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg)) . -6050) (undo-tree-id10801 . -1) (#("G" 0 1 (fontified t ws-butler-chg chg)) . -6051) (undo-tree-id10802 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg)) . -6052) (undo-tree-id10803 . -1) 6053) nil (25557 5353 956851 542000) 0 nil])
([nil nil ((6049 . 6057)) nil (25557 5353 956847 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6056) (undo-tree-id10799 . -1) 6057) nil (25557 5353 956846 430000) 0 nil])
([nil nil ((6056 . 6067)) nil (25557 5353 956844 863000) 0 nil])
([nil nil ((6067 . 6068)) nil (25557 5353 956844 179000) 0 nil])
([nil nil ((6068 . 6073)) nil (25557 5353 956843 402000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -6071) (undo-tree-id10797 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6072) (undo-tree-id10798 . -1) 6073) nil (25557 5353 956842 130000) 0 nil])
([nil nil ((6071 . 6074)) nil (25557 5353 956826 819000) 0 nil])
([nil nil ((6074 . 6076)) nil (25557 5353 956826 74000) 0 nil])
([nil nil ((6075 . 6080)) nil (25557 5353 956825 216000) 0 nil])
([nil nil ((6080 . 6083)) nil (25557 5353 956824 70000) 0 nil])
([nil nil ((6075 . 6097) (#("Regex_Gr" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -6075) (undo-tree-id10795 . -8) (undo-tree-id10796 . -8) 6083) nil (25557 5353 956820 435000) 0 nil])
([nil nil ((6099 . 6100) (t 25557 5354 30793 176000)) nil (25557 5357 377480 524000) 0 nil])
([nil nil ((6100 . 6102) (t 25557 5357 454786 60000)) nil (25557 5363 534288 155000) 0 nil])
([nil nil ((6101 . 6103) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6101) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) 6102) nil (25557 5363 534287 57000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6102) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) 6103) nil (25557 5363 534284 308000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -6101) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) 6102) nil (25557 5363 534281 545000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -6042) (undo-tree-id10815 . -1) 6043) nil (25557 5363 534277 392000) 0 nil])
([nil nil ((6042 . 6043)) nil (25557 5363 534253 343000) 0 nil])
([nil nil ((6049 . 6050) (t 25557 5363 602773 168000)) nil (25557 5368 992160 92000) 0 nil])
([nil nil ((6050 . 6051)) nil (25557 5368 992155 712000) 0 nil])
([nil nil ((#("sizeof(Regex_GroupTableBucket)" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 29 (fontified t) 29 30 (fontified t)) . 6070) (undo-tree-id10823 . -30) (undo-tree-id10824 . -30) (undo-tree-id10825 . -30) 6100 (t 25557 5369 62761 588000)) nil (25557 5393 489231 424000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -6049) (undo-tree-id10822 . -1) 6050) nil (25557 5393 489227 397000) 0 nil])
([nil nil ((6023 . 6025) (#(" " 0 1 (fontified nil)) . 6023) (nil rear-nonsticky nil 6078 . 6079) (nil fontified nil 6078 . 6079) (nil fontified nil 6056 . 6078) (nil fontified nil 6055 . 6056) (nil fontified nil 6054 . 6055) (nil fontified nil 6053 . 6054) (nil fontified nil 6052 . 6053) (nil fontified nil 6051 . 6052) (nil fontified nil 6050 . 6051) (nil fontified nil 6049 . 6050) (6049 . 6079)) nil (25557 5393 489214 370000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -6099) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) 6100 (t 25557 5393 554708 169000)) nil (25557 5399 29881 865000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6024) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) 6025 (t 25557 5399 98695 750000)) nil (25557 5401 427568 111000) 0 nil])
([nil nil ((6101 . 6102) (t 25557 5401 490690 352000)) nil (25557 5418 761997 767000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 6101) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) 6102) nil (25557 5418 761993 782000) 0 nil])
([nil nil ((6101 . 6102) 6102 (t 25557 5418 830650 594000)) nil (25557 5420 543231 701000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6101) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) 6102 (t 25557 5418 830650 594000)) nil (25557 5420 543226 940000) 0 nil])
([nil nil ((6101 . 6102) (t 25557 5420 606646 461000)) nil (25557 5462 156306 572000) 0 nil])
([nil nil ((6101 . 6103) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6101) (undo-tree-id10860 . -1) 6102) nil (25557 5462 156305 607000) 0 nil])
([nil nil ((6103 . 6106)) nil (25557 5462 156304 90000) 0 nil])
([nil nil ((6106 . 6108)) nil (25557 5462 156303 300000) 0 nil])
([nil nil ((6107 . 6110)) nil (25557 5462 156302 665000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t ws-butler-chg chg)) . -6108) (undo-tree-id10858 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6109) (undo-tree-id10859 . -1) 6110) nil (25557 5462 156301 672000) 0 nil])
([nil nil ((6108 . 6115)) nil (25557 5462 156299 577000) 0 nil])
([nil nil ((6115 . 6116)) nil (25557 5462 156298 945000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6115) (undo-tree-id10857 . -1) 6116) nil (25557 5462 156298 139000) 0 nil])
([nil nil ((6115 . 6120)) nil (25557 5462 156296 625000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6115) (undo-tree-id10852 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6116) (undo-tree-id10853 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6117) (undo-tree-id10854 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6118) (undo-tree-id10855 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6119) (undo-tree-id10856 . -1) 6120) nil (25557 5462 156295 130000) 0 nil])
([nil nil ((6115 . 6118)) nil (25557 5462 156290 732000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -6117) (undo-tree-id10851 . -1) 6118) nil (25557 5462 156289 927000) 0 nil])
([nil nil ((6117 . 6118)) nil (25557 5462 156288 299000) 0 nil])
([nil nil ((6118 . 6119)) nil (25557 5462 156287 611000) 0 nil])
([nil nil ((6119 . 6122)) nil (25557 5462 156287 31000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t ws-butler-chg chg)) . -6121) (undo-tree-id10850 . -1) 6122) nil (25557 5462 156286 251000) 0 nil])
([nil nil ((6121 . 6123)) nil (25557 5462 156284 603000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6122) (undo-tree-id10849 . -1) 6123) nil (25557 5462 156283 818000) 0 nil])
([nil nil ((6122 . 6123)) nil (25557 5462 156280 915000) 0 nil])
([nil nil ((6123 . 6124)) nil (25557 5462 156280 310000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg)) . -6122) (undo-tree-id10847 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6123) (undo-tree-id10848 . -1) 6124) nil (25557 5462 156279 358000) 0 nil])
([nil nil ((6122 . 6124)) nil (25557 5462 156276 835000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -6122) (undo-tree-id10845 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6123) (undo-tree-id10846 . -1) 6124) nil (25557 5462 156275 924000) 0 nil])
([nil nil ((6122 . 6129)) nil (25557 5462 156273 634000) 0 nil])
([nil nil ((6122 . 6140) (#("DEFAULT" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 7 (fontified t ws-butler-chg chg)) . -6122) (undo-tree-id10844 . -7) 6129) nil (25557 5462 156272 745000) 0 nil])
([nil nil ((6140 . 6141)) nil (25557 5462 156271 0) 0 nil])
([nil nil ((6141 . 6144)) nil (25557 5462 156270 282000) 0 nil])
([nil nil ((6145 . 6147)) nil (25557 5462 156269 639000) 0 nil])
([nil nil ((6145 . 6149)) nil (25557 5462 156268 996000) 0 nil])
([nil nil ((6150 . 6154)) nil (25557 5462 156268 127000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6147) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6148) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) 6149) nil (25557 5462 156266 420000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 6150) (undo-tree-id10838 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6150)) nil (25557 5462 156258 677000) 0 nil])
([nil nil ((6148 . 6152) (t 25557 5462 226546 340000)) nil (25557 5463 760358 479000) 0 nil])
([nil nil ((6152 . 6153)) nil (25557 5463 760357 12000) 0 nil])
([nil nil ((#("    " 0 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . 6149) (undo-tree-id10861 . -4) (undo-tree-id10862 . -4) 6153) nil (25557 5463 760340 597000) 0 nil])
([nil nil ((6149 . 6153) 6153 (t 25557 5463 834542 351000)) nil (25557 5504 341028 517000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6152) (undo-tree-id11406 . -1) 6153 (t 25557 5463 834542 351000)) nil (25557 5504 341027 308000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6151) (undo-tree-id11405 . -1) 6152) nil (25557 5504 341025 715000) 0 nil])
([nil nil ((6151 . 6156)) nil (25557 5504 341024 411000) 0 nil])
([nil nil ((6151 . 6162) (#("group" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -6151) (undo-tree-id11404 . -5) 6156) nil (25557 5504 341023 523000) 0 nil])
([nil nil ((6162 . 6164)) nil (25557 5504 341022 5000) 0 nil])
([nil nil ((6163 . 6165)) nil (25557 5504 341021 374000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -6164) (undo-tree-id11403 . -1) 6165) nil (25557 5504 341020 216000) 0 nil])
([nil nil ((6165 . 6166)) nil (25557 5504 341018 672000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -6165) (undo-tree-id11402 . -1) 6166) nil (25557 5504 341017 952000) 0 nil])
([nil nil ((6165 . 6169)) nil (25557 5504 341016 624000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -6167) (undo-tree-id11400 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6168) (undo-tree-id11401 . -1) 6169) nil (25557 5504 341015 821000) 0 nil])
([nil nil ((6167 . 6177)) nil (25557 5504 341013 709000) 0 nil])
([nil nil ((6177 . 6179)) nil (25557 5504 341013 115000) 0 nil])
([nil nil ((6178 . 6184)) nil (25557 5504 341012 526000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -6178) (undo-tree-id11394 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6179) (undo-tree-id11395 . -1) (#("z" 0 1 (fontified t ws-butler-chg chg)) . -6180) (undo-tree-id11396 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6181) (undo-tree-id11397 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -6182) (undo-tree-id11398 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -6183) (undo-tree-id11399 . -1) 6184) nil (25557 5504 341010 844000) 0 nil])
([nil nil ((6178 . 6181)) nil (25557 5504 341005 22000) 0 nil])
([nil nil ((6181 . 6182)) nil (25557 5504 341004 372000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -6181) (undo-tree-id11393 . -1) 6182) nil (25557 5504 341003 580000) 0 nil])
([nil nil ((6181 . 6182)) nil (25557 5504 341002 174000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -6181) (undo-tree-id11392 . -1) 6182) nil (25557 5504 341001 461000) 0 nil])
([nil nil ((6181 . 6182)) nil (25557 5504 341000 165000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -6181) (undo-tree-id11391 . -1) 6182) nil (25557 5504 340999 433000) 0 nil])
([nil nil ((6181 . 6183)) nil (25557 5504 340997 873000) 0 nil])
([nil nil ((6178 . 6193) (#("MAX_W" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -6178) (undo-tree-id11389 . -5) (undo-tree-id11390 . -5) 6183) nil (25557 5504 340996 846000) 0 nil])
([nil nil ((6193 . 6223)) nil (25557 5504 340994 65000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6202) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6203) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6204) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6205) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6206) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6207) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6208) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6209) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6210) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6211) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6212) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6213) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6214) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6215) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6216) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6217) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6218) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6219) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6220) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6221) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6222) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) 6223) nil (25557 5504 340981 162000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -6193) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6194) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6195) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6196) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6197) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6198) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6199) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6200) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6201) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) 6202) nil (25557 5504 340801 636000) 0 nil])
([nil nil ((6194 . 6195) (t 25557 5504 398438 904000)) nil (25557 5508 307255 972000) 0 nil])
([nil nil ((#("group_table[i].name=malloc(MAX_WORD_LENGTH);" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t ws-butler-chg chg)) . 6151) (undo-tree-id11448 . -27) (undo-tree-id11449 . -27) (undo-tree-id11450 . -42) (undo-tree-id11451 . -42) (undo-tree-id11452 . -42) (undo-tree-id11453 . -42) (undo-tree-id11454 . -42) (undo-tree-id11455 . -42) (undo-tree-id11456 . -42) (undo-tree-id11457 . -42) (undo-tree-id11458 . -42) (undo-tree-id11459 . -42) (undo-tree-id11460 . -42) (undo-tree-id11461 . -42) (undo-tree-id11462 . -42) (undo-tree-id11463 . -42) (undo-tree-id11464 . -42) (undo-tree-id11465 . -42) (undo-tree-id11466 . -42) (undo-tree-id11467 . -42) (undo-tree-id11468 . -42) (undo-tree-id11469 . -42) (undo-tree-id11470 . -42) (undo-tree-id11471 . -42) (undo-tree-id11472 . -42) (undo-tree-id11473 . -42) (undo-tree-id11474 . -42) (undo-tree-id11475 . -42) (undo-tree-id11476 . -42) (undo-tree-id11477 . -42) (undo-tree-id11478 . -42) (undo-tree-id11479 . -42) (undo-tree-id11480 . -42) (undo-tree-id11481 . -43) (undo-tree-id11482 . -42) (undo-tree-id11483 . -42) (undo-tree-id11484 . -43) (undo-tree-id11485 . -44) (undo-tree-id11486 . -44) (undo-tree-id11487 . -44)) nil (25557 5508 307253 537000) 0 nil])
([nil nil ((6149 . 6152) (#("  " 0 2 (fontified nil)) . 6149) (undo-tree-id11407 . -2) (undo-tree-id11408 . -2) (undo-tree-id11409 . -2) (undo-tree-id11410 . -2) (undo-tree-id11411 . -2) (undo-tree-id11412 . -2) (undo-tree-id11413 . -2) (undo-tree-id11414 . -2) (undo-tree-id11415 . -2) (undo-tree-id11416 . -2) (undo-tree-id11417 . -2) (undo-tree-id11418 . -2) (undo-tree-id11419 . -2) (undo-tree-id11420 . -2) (undo-tree-id11421 . -2) (undo-tree-id11422 . -2) (undo-tree-id11423 . -2) (undo-tree-id11424 . -2) (undo-tree-id11425 . -2) (undo-tree-id11426 . -2) (undo-tree-id11427 . -2) (undo-tree-id11428 . -2) (undo-tree-id11429 . -2) (undo-tree-id11430 . -2) (undo-tree-id11431 . -2) (undo-tree-id11432 . -2) (undo-tree-id11433 . -2) (undo-tree-id11434 . -2) (undo-tree-id11435 . -2) (undo-tree-id11436 . -2) (undo-tree-id11437 . -2) (undo-tree-id11438 . -2) (undo-tree-id11439 . -2) (undo-tree-id11440 . -2) (undo-tree-id11441 . -2) (undo-tree-id11442 . -2) (undo-tree-id11443 . -2) (undo-tree-id11444 . -2) (undo-tree-id11445 . -2) (undo-tree-id11446 . -2) (undo-tree-id11447 . -2) (nil rear-nonsticky nil 6194 . 6195) (nil fontified nil 6194 . 6195) (nil fontified nil 6193 . 6194) (nil fontified nil 6178 . 6193) (nil fontified nil 6177 . 6178) (nil fontified nil 6176 . 6177) (nil fontified nil 6175 . 6176) (nil fontified nil 6174 . 6175) (nil fontified nil 6173 . 6174) (nil fontified nil 6172 . 6173) (nil fontified nil 6171 . 6172) (nil fontified nil 6170 . 6171) (nil fontified nil 6169 . 6170) (nil fontified nil 6168 . 6169) (nil fontified nil 6167 . 6168) (nil fontified nil 6166 . 6167) (nil fontified nil 6165 . 6166) (nil fontified nil 6164 . 6165) (nil fontified nil 6163 . 6164) (nil fontified nil 6162 . 6163) (nil fontified nil 6151 . 6162) (6151 . 6195)) nil (25557 5508 307224 621000) 0 nil])
([nil nil ((6196 . 6200)) nil (25557 5508 307155 220000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6243 . 6244) (nil fontified nil 6243 . 6244) (nil fontified nil 6242 . 6243) (nil fontified nil 6227 . 6242) (nil fontified nil 6226 . 6227) (nil fontified nil 6225 . 6226) (nil fontified nil 6224 . 6225) (nil fontified nil 6223 . 6224) (nil fontified nil 6222 . 6223) (nil fontified nil 6221 . 6222) (nil fontified nil 6220 . 6221) (nil fontified nil 6219 . 6220) (nil fontified nil 6218 . 6219) (nil fontified nil 6217 . 6218) (nil fontified nil 6216 . 6217) (nil fontified nil 6215 . 6216) (nil fontified nil 6214 . 6215) (nil fontified nil 6213 . 6214) (nil fontified nil 6212 . 6213) (nil fontified nil 6211 . 6212) (nil fontified nil 6200 . 6211) (6200 . 6244)) nil (25557 5508 307150 17000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -6237) (undo-tree-id11492 . -1) (#("N" 0 1 (fontified t)) . -6238) (undo-tree-id11493 . -1) (#("G" 0 1 (fontified t)) . -6239) (undo-tree-id11494 . -1) (#("T" 0 1 (fontified t)) . -6240) (undo-tree-id11495 . -1) (#("H" 0 1 (fontified t)) . -6241) (undo-tree-id11496 . -1) 6242 (t 25557 5508 374428 478000)) nil (25557 5525 179046 976000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -6231) (undo-tree-id11488 . -1) (#("O" 0 1 (fontified t)) . -6232) (undo-tree-id11489 . -1) (#("R" 0 1 (fontified t)) . -6233) (undo-tree-id11490 . -1) (#("D" 0 1 (fontified t)) . -6234) (undo-tree-id11491 . -1) 6235) nil (25557 5525 179039 615000) 0 nil])
([nil nil ((6231 . 6236)) nil (25557 5525 179024 525000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -6237) (undo-tree-id11497 . -1) 6238 (t 25557 5525 250383 699000)) nil (25557 5528 828765 558000) 0 nil])
([nil nil ((6237 . 6243)) nil (25557 5528 828741 540000) 0 nil])
([nil nil ((#("group_table[i].name=malloc(MAX_GROUP_LENGTH);" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (rear-nonsticky t fontified t)) . 6200) (undo-tree-id11498 . -43) (undo-tree-id11499 . -43) (undo-tree-id11500 . -44) (undo-tree-id11501 . -45) (t 25557 5528 894373 921000)) nil (25557 5563 171363 396000) 0 nil])
([nil nil ((nil fontified nil 6244 . 6245) (nil fontified nil 6243 . 6244) (nil fontified nil 6242 . 6243) (nil fontified nil 6241 . 6242) (nil fontified nil 6240 . 6241) (nil fontified nil 6239 . 6240) (nil fontified nil 6238 . 6239) (nil fontified nil 6237 . 6238) (nil fontified nil 6236 . 6237) (nil fontified nil 6235 . 6236) (nil fontified nil 6234 . 6235) (nil fontified nil 6233 . 6234) (nil fontified nil 6232 . 6233) (nil fontified nil 6231 . 6232) (nil fontified nil 6227 . 6231) (nil fontified nil 6226 . 6227) (nil fontified nil 6225 . 6226) (nil fontified nil 6224 . 6225) (nil fontified nil 6223 . 6224) (nil fontified nil 6222 . 6223) (nil fontified nil 6221 . 6222) (nil fontified nil 6220 . 6221) (nil fontified nil 6219 . 6220) (nil fontified nil 6218 . 6219) (nil fontified nil 6217 . 6218) (nil fontified nil 6216 . 6217) (nil fontified nil 6215 . 6216) (nil fontified nil 6214 . 6215) (nil fontified nil 6213 . 6214) (nil fontified nil 6212 . 6213) (nil fontified nil 6211 . 6212) (nil fontified nil 6200 . 6211) (6200 . 6245)) nil (25557 5563 171291 342000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -6215) (undo-tree-id11502 . -1) (#("a" 0 1 (fontified t)) . -6216) (undo-tree-id11503 . -1) (#("m" 0 1 (fontified t)) . -6217) (undo-tree-id11504 . -1) (#("e" 0 1 (fontified t)) . -6218) (undo-tree-id11505 . -1) 6219 (t 25557 5563 234279 840000)) nil (25557 5573 521072 996000) 0 nil])
([nil nil ((6215 . 6216)) nil (25557 5573 521061 40000) 0 nil])
([nil nil ((6216 . 6220)) nil (25557 5573 521056 484000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6294) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -6295) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -6296) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -6297) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -6298) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (#("1" 0 1 (fontified t face font-lock-type-face)) . -6299) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (#("6" 0 1 (fontified t face font-lock-type-face)) . -6300) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -6301) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -6302) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (#(" " 0 1 (fontified t)) . -6303) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -6304) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -6305) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -6306) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -6307) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -6308) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (#(" " 0 1 (fontified t)) . -6309) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -6310) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (#(" " 0 1 (fontified t)) . -6311) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) 6312 (t 25557 5573 594250 799000)) nil (25557 5597 382257 895000) 0 nil])
([nil nil ((6332 . 6334) (t 25557 5597 454182 820000)) nil (25557 5633 345776 779000) 0 nil])
([nil nil ((6334 . 6335)) nil (25557 5633 345775 804000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -6334) (undo-tree-id11768 . -1) 6335) nil (25557 5633 345775 56000) 0 nil])
([nil nil ((6334 . 6335)) nil (25557 5633 345773 147000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -6334) (undo-tree-id11767 . -1) 6335) nil (25557 5633 345772 331000) 0 nil])
([nil nil ((6334 . 6343)) nil (25557 5633 345770 800000) 0 nil])
([nil nil ((6334 . 6345) (#("group_tab" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg)) . -6334) (undo-tree-id11766 . -9) 6343) nil (25557 5633 345769 928000) 0 nil])
([nil nil ((6345 . 6347)) nil (25557 5633 345768 243000) 0 nil])
([nil nil ((6332 . 6334)) nil (25557 5633 345767 516000) 0 nil])
([nil nil ((6334 . 6348)) nil (25557 5633 345766 747000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6347) (undo-tree-id11765 . -1) 6348) nil (25557 5633 345765 880000) 0 nil])
([nil nil ((6347 . 6349)) nil (25557 5633 345764 213000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6348) (undo-tree-id11764 . -1) 6349) nil (25557 5633 345763 238000) 0 nil])
([nil nil ((#("Regex_HashGroup(name);" 0 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 6310) (undo-tree-id11763 . -22)) nil (25557 5633 345761 279000) 0 nil])
([nil nil ((6311 . 6313) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 6311) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (nil rear-nonsticky nil 6347 . 6348) (nil fontified nil 6347 . 6348) (nil fontified nil 6346 . 6347) (nil fontified nil 6345 . 6346) (nil fontified nil 6344 . 6345) (nil fontified nil 6343 . 6344) (nil fontified nil 6342 . 6343) (nil fontified nil 6341 . 6342) (nil fontified nil 6326 . 6341) (6326 . 6348)) nil (25557 5633 345758 405000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6309) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) 6349) nil (25557 5633 345750 308000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6311) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) 6312 (t 25557 5633 410077 602000)) nil (25557 5635 89095 962000) 0 nil])
([nil nil ((6346 . 6347) (t 25557 5635 162072 393000)) nil (25557 5647 356865 479000) 0 nil])
([nil nil ((6347 . 6352)) nil (25557 5647 356864 484000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg)) . -6347) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6348) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -6349) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -6350) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -6351) (undo-tree-id11788 . -1) 6352) nil (25557 5647 356862 408000) 0 nil])
([nil nil ((6347 . 6354)) nil (25557 5647 356851 722000) 0 nil])
([nil nil ((6347 . 6365) (#("DEFAULT" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -6347) (undo-tree-id11771 . -7) (undo-tree-id11772 . -5) (undo-tree-id11773 . -7) (undo-tree-id11774 . -6) (undo-tree-id11775 . -7) 6354) nil (25557 5647 356847 626000) 0 nil])
([nil nil ((6380 . 6384) (t 25557 5647 430035 710000)) nil (25557 5650 869754 343000) 0 nil])
([nil nil ((6385 . 6386)) nil (25557 5650 869749 364000) 0 nil])
([nil nil ((6366 . 6368) (t 25557 5650 938025 154000)) nil (25557 5674 686199 461000) 0 nil])
([nil nil ((6368 . 6370)) nil (25557 5674 686198 475000) 0 nil])
([nil nil ((6370 . 6372)) nil (25557 5674 686197 763000) 0 nil])
([nil nil ((6371 . 6375)) nil (25557 5674 686197 141000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -6371) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -6372) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -6373) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -6374) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) 6375) nil (25557 5674 686194 798000) 0 nil])
([nil nil ((#("group_table[slot];" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 6374) (undo-tree-id11792 . -18)) nil (25557 5674 686152 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6388 . 6389) (nil fontified nil 6388 . 6389) (nil fontified nil 6387 . 6388) (nil fontified nil 6386 . 6387) (nil fontified nil 6385 . 6386) (nil fontified nil 6384 . 6385) (nil fontified nil 6383 . 6384) (nil fontified nil 6382 . 6383) (nil fontified nil 6371 . 6382) (6371 . 6389)) nil (25557 5674 686150 570000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6391) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) 6389) nil (25557 5674 686144 739000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -6388) (undo-tree-id11820 . -1) 6389 (t 25557 5674 753952 754000)) nil (25557 5688 944676 831000) 0 nil])
([nil nil ((6388 . 6389)) nil (25557 5688 944675 98000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -6388) (undo-tree-id11819 . -1) 6389) nil (25557 5688 944674 151000) 0 nil])
([nil nil ((6388 . 6393)) nil (25557 5688 944672 322000) 0 nil])
([nil nil ((#("group_table[i].name=malloc(MAX_WORD_LENGTH);" 0 1 (fontified t) 1 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t rear-nonsticky t)) . 6152) (undo-tree-id11818 . -44)) nil (25557 5688 944670 697000) 0 nil])
([nil nil ((nil fontified nil 6195 . 6196) (nil fontified nil 6194 . 6195) (nil fontified nil 6179 . 6194) (nil fontified nil 6178 . 6179) (nil fontified nil 6177 . 6178) (nil fontified nil 6176 . 6177) (nil fontified nil 6175 . 6176) (nil fontified nil 6174 . 6175) (nil fontified nil 6173 . 6174) (nil fontified nil 6172 . 6173) (nil fontified nil 6171 . 6172) (nil fontified nil 6170 . 6171) (nil fontified nil 6169 . 6170) (nil fontified nil 6168 . 6169) (nil fontified nil 6167 . 6168) (nil fontified nil 6166 . 6167) (nil fontified nil 6165 . 6166) (nil fontified nil 6164 . 6165) (nil fontified nil 6163 . 6164) (nil fontified nil 6153 . 6163) (nil fontified nil 6152 . 6153) (6152 . 6196)) nil (25557 5688 944658 518000) 0 nil])
([nil nil ((6196 . 6200) (t 25557 5689 13908 789000)) nil (25557 5694 689675 515000) 0 nil])
([nil nil ((6197 . 6201) (#("   " 0 3 (fontified t ws-butler-chg chg)) . 6197) (undo-tree-id11825 . -3) 6200) nil (25557 5694 689674 319000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -6197) (undo-tree-id11821 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6198) (undo-tree-id11822 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6199) (undo-tree-id11823 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6200) (undo-tree-id11824 . -1) 6201) nil (25557 5694 689671 470000) 0 nil])
([nil nil ((6197 . 6200)) nil (25557 5694 689659 504000) 0 nil])
([nil nil ((nil fontified nil 6243 . 6244) (nil fontified nil 6242 . 6243) (nil fontified nil 6227 . 6242) (nil fontified nil 6226 . 6227) (nil fontified nil 6225 . 6226) (nil fontified nil 6224 . 6225) (nil fontified nil 6223 . 6224) (nil fontified nil 6222 . 6223) (nil fontified nil 6221 . 6222) (nil fontified nil 6220 . 6221) (nil fontified nil 6219 . 6220) (nil fontified nil 6218 . 6219) (nil fontified nil 6217 . 6218) (nil fontified nil 6216 . 6217) (nil fontified nil 6215 . 6216) (nil fontified nil 6214 . 6215) (nil fontified nil 6213 . 6214) (nil fontified nil 6212 . 6213) (nil fontified nil 6211 . 6212) (nil fontified nil 6201 . 6211) (nil fontified nil 6200 . 6201) (6200 . 6244)) nil (25557 5694 689653 961000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -6264) (undo-tree-id11827 . -1) (#("t" 0 1 (fontified t)) . -6265) (undo-tree-id11828 . -1) (#("r" 0 1 (fontified t)) . -6266) (undo-tree-id11829 . -1) (#("y" 0 1 (fontified t)) . -6267) (undo-tree-id11830 . -1) 6268 (t 25557 5694 765890 931000)) nil (25557 5700 193874 133000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -6263) (undo-tree-id11826 . -1) 6264) nil (25557 5700 193868 509000) 0 nil])
([nil nil ((6263 . 6268)) nil (25557 5700 193856 273000) 0 nil])
([nil nil ((6219 . 6221) (t 25557 5700 261873 805000)) nil (25557 5720 908581 10000) 0 nil])
([nil nil ((6220 . 6222)) nil (25557 5720 908580 278000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t ws-butler-chg chg)) . -6220) (undo-tree-id11832 . -1) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -6221) (undo-tree-id11833 . -1) 6222) nil (25557 5720 908579 302000) 0 nil])
([nil nil ((6220 . 6221)) nil (25557 5720 908576 690000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t ws-butler-chg chg)) . -6220) (undo-tree-id11831 . -1) 6221) nil (25557 5720 908575 767000) 0 nil])
([nil nil ((6220 . 6221)) nil (25557 5720 908567 64000) 0 nil])
([nil nil ((6223 . 6225)) nil (25557 5720 908566 294000) 0 nil])
([nil nil ((6224 . 6225)) nil (25557 5720 908565 644000) 0 nil])
([nil nil ((#("malloc(MAX_WORD_LENGTH);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 22 (fontified t) 22 23 (fontified t) 23 24 (rear-nonsticky t fontified t)) . 6226)) nil (25557 5720 908564 426000) 0 nil])
([nil nil ((6226 . 6227)) nil (25557 5720 908563 152000) 0 nil])
([nil nil ((6224 . 6225)) nil (25557 5720 908558 917000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -6172) (undo-tree-id11835 . -1) 6173 (t 25557 5720 981808 655000)) nil (25557 5743 552535 318000) 0 nil])
([nil nil ((6172 . 6174)) nil (25557 5743 552532 585000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -6173) (undo-tree-id11834 . -1) 6174) nil (25557 5743 552528 445000) 0 nil])
([nil nil ((6179 . 6180) (t 25557 5743 613736 484000)) nil (25557 5754 538177 862000) 0 nil])
([nil nil ((6180 . 6181)) nil (25557 5754 538176 820000) 0 nil])
([nil nil ((6262 . 6263)) nil (25557 5754 538175 529000) 0 nil])
([nil nil ((6263 . 6264)) nil (25557 5754 538158 205000) 0 nil])
([nil nil ((6429 . 6433) (t 25557 5754 633700 976000)) nil (25557 5822 107978 660000) 0 nil])
([nil nil ((6432 . 6433)) nil (25557 5822 107977 879000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6432) (undo-tree-id11863 . -1) 6433) nil (25557 5822 107977 197000) 0 nil])
([nil nil ((6432 . 6433)) nil (25557 5822 107975 655000) 0 nil])
([nil nil ((6433 . 6434)) nil (25557 5822 107975 37000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6432) (undo-tree-id11861 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg)) . -6433) (undo-tree-id11862 . -1) 6434) nil (25557 5822 107974 232000) 0 nil])
([nil nil ((6432 . 6433)) nil (25557 5822 107971 911000) 0 nil])
([nil nil ((6433 . 6434)) nil (25557 5822 107971 353000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6432) (undo-tree-id11859 . -1) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -6433) (undo-tree-id11860 . -1) 6434) nil (25557 5822 107970 516000) 0 nil])
([nil nil ((6432 . 6434)) nil (25557 5822 107968 434000) 0 nil])
([nil nil ((6436 . 6438)) nil (25557 5822 107967 814000) 0 nil])
([nil nil ((6437 . 6442)) nil (25557 5822 107967 231000) 0 nil])
([nil nil ((6438 . 6449) (#("grou" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -6438) (undo-tree-id11858 . -4) 6442) nil (25557 5822 107966 506000) 0 nil])
([nil nil ((6449 . 6451)) nil (25557 5822 107964 816000) 0 nil])
([nil nil ((6450 . 6454)) nil (25557 5822 107964 158000) 0 nil])
([nil nil ((6455 . 6456)) nil (25557 5822 107963 577000) 0 nil])
([nil nil ((6456 . 6457)) nil (25557 5822 107962 856000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6456) (undo-tree-id11857 . -1) 6457) nil (25557 5822 107962 39000) 0 nil])
([nil nil ((6438 . 6441) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 6438) (6437 . 6438)) nil (25557 5822 107959 712000) 0 nil])
([nil nil ((6441 . 6442)) nil (25557 5822 107958 739000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6441) (undo-tree-id11856 . -1) 6442) nil (25557 5822 107957 915000) 0 nil])
([nil nil ((6441 . 6442)) nil (25557 5822 107956 528000) 0 nil])
([nil nil ((6460 . 6467)) nil (25557 5822 107955 885000) 0 nil])
([nil nil ((6467 . 6468)) nil (25557 5822 107955 281000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6462) (undo-tree-id11850 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6463) (undo-tree-id11851 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6464) (undo-tree-id11852 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6465) (undo-tree-id11853 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6466) (undo-tree-id11854 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6467) (undo-tree-id11855 . -1) 6468) nil (25557 5822 107953 720000) 0 nil])
([nil nil ((6438 . 6439) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6438) (undo-tree-id11849 . -1) 6439) nil (25557 5822 107948 299000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . -6439) (undo-tree-id11846 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6440) (undo-tree-id11847 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6441) (undo-tree-id11848 . -1) 6442) nil (25557 5822 107934 50000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -6438) (undo-tree-id11845 . -1) 6439) nil (25557 5822 107930 963000) 0 nil])
([nil nil ((6438 . 6440)) nil (25557 5822 107929 438000) 0 nil])
([nil nil ((6438 . 6442) (#("  " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 6438) (undo-tree-id11844 . -2) 6440) nil (25557 5822 107928 615000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6441) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) 6442) nil (25557 5822 107926 736000) 0 nil])
([nil nil ((6436 . 6440)) nil (25557 5822 107909 579000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6438) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6439) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) 6440) nil (25557 5822 107908 408000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -6440) (undo-tree-id11836 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -6441) (undo-tree-id11837 . -1) 6442) nil (25557 5822 107902 575000) 0 nil])
([nil nil ((6440 . 6441)) nil (25557 5822 107876 69000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -6459) (undo-tree-id11874 . -1) 6460 (t 25557 5822 189478 428000)) nil (25557 5842 95496 471000) 0 nil])
([nil nil ((6459 . 6460)) nil (25557 5842 95494 703000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -6458) (undo-tree-id11872 . -1) (#("," 0 1 (fontified t ws-butler-chg chg)) . -6459) (undo-tree-id11873 . -1) 6460) nil (25557 5842 95493 747000) 0 nil])
([nil nil ((6458 . 6460)) nil (25557 5842 95491 505000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -6459) (undo-tree-id11871 . -1) 6460) nil (25557 5842 95490 678000) 0 nil])
([nil nil ((6442 . 6450)) nil (25557 5842 95489 119000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -6447) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -6448) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -6449) (undo-tree-id11870 . -1) 6450) nil (25557 5842 95487 0) 0 nil])
([nil nil ((6447 . 6449)) nil (25557 5842 95473 57000) 0 nil])
([nil nil ((6449 . 6450)) nil (25557 5842 95468 875000) 0 nil])
([nil nil ((6467 . 6468) (t 25557 5842 165411 108000)) nil (25557 5853 72489 621000) 0 nil])
([nil nil ((6467 . 6470) (t 25557 5853 149373 815000)) nil (25557 5877 320073 812000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -6468) (undo-tree-id11876 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -6469) (undo-tree-id11877 . -1) 6470) nil (25557 5877 320072 293000) 0 nil])
([nil nil ((6468 . 6472)) nil (25557 5877 320069 87000) 0 nil])
([nil nil ((6472 . 6473)) nil (25557 5877 320068 433000) 0 nil])
([nil nil ((6473 . 6477)) nil (25557 5877 320067 599000) 0 nil])
([nil nil ((6477 . 6478)) nil (25557 5877 320066 886000) 0 nil])
([nil nil ((6478 . 6481)) nil (25557 5877 320066 77000) 0 nil])
([nil nil ((6478 . 6493) (#("MAX" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -6478) (undo-tree-id11875 . -3) 6481) nil (25557 5877 320048 301000) 0 nil])
([nil nil ((6494 . 6495)) nil (25557 5877 320037 508000) 0 nil])
([nil nil ((#("strncpy(group_table[slot].name,name,MAX_WORD_LENGTH);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 6442) (undo-tree-id11886 . -36) (undo-tree-id11887 . -51) (undo-tree-id11888 . -52) (undo-tree-id11889 . -53) (undo-tree-id11890 . -53) (undo-tree-id11891 . -53) (undo-tree-id11892 . -53) (t 25557 5877 397290 830000)) nil (25557 5881 403565 637000) 0 nil])
([nil nil ((6440 . 6443) (#("  " 0 1 (fontified nil) 1 2 (fontified nil)) . 6440) (undo-tree-id11878 . -2) (undo-tree-id11879 . -2) (undo-tree-id11880 . -2) (undo-tree-id11881 . -2) (undo-tree-id11882 . -2) (undo-tree-id11883 . -2) (undo-tree-id11884 . -2) (undo-tree-id11885 . -2) (nil rear-nonsticky nil 6494 . 6495) (nil fontified nil 6494 . 6495) (nil fontified nil 6493 . 6494) (nil fontified nil 6478 . 6493) (nil fontified nil 6477 . 6478) (nil fontified nil 6476 . 6477) (nil fontified nil 6475 . 6476) (nil fontified nil 6474 . 6475) (nil fontified nil 6473 . 6474) (nil fontified nil 6472 . 6473) (nil fontified nil 6471 . 6472) (nil fontified nil 6470 . 6471) (nil fontified nil 6469 . 6470) (nil fontified nil 6468 . 6469) (nil fontified nil 6467 . 6468) (nil fontified nil 6466 . 6467) (nil fontified nil 6465 . 6466) (nil fontified nil 6464 . 6465) (nil fontified nil 6463 . 6464) (nil fontified nil 6462 . 6463) (nil fontified nil 6461 . 6462) (nil fontified nil 6451 . 6461) (nil fontified nil 6450 . 6451) (nil fontified nil 6449 . 6450) (nil fontified nil 6448 . 6449) (nil fontified nil 6447 . 6448) (nil fontified nil 6446 . 6447) (nil fontified nil 6445 . 6446) (nil fontified nil 6444 . 6445) (nil fontified nil 6443 . 6444) (nil fontified nil 6442 . 6443) (6442 . 6495)) nil (25557 5881 403555 518000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6442) (undo-tree-id11893 . -1) 6443 (t 25557 5881 473276 793000)) nil (25557 5884 275072 721000) 0 nil])
([nil nil ((#("strncpy(group_table[slot].name,name,MAX_WORD_LENGTH);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t rear-nonsticky t)) . 6442) (undo-tree-id11901 . -53) (undo-tree-id11902 . -53) (t 25557 5884 349266 874000)) nil (25557 5885 458436 235000) 0 nil])
([nil nil ((6440 . 6443) (#("  " 0 2 (fontified nil)) . 6440) (undo-tree-id11894 . -2) (undo-tree-id11895 . -2) (undo-tree-id11896 . -2) (undo-tree-id11897 . -2) (undo-tree-id11898 . -2) (undo-tree-id11899 . -2) (undo-tree-id11900 . -2) (nil fontified nil 6494 . 6495) (nil fontified nil 6493 . 6494) (nil fontified nil 6478 . 6493) (nil fontified nil 6477 . 6478) (nil fontified nil 6476 . 6477) (nil fontified nil 6475 . 6476) (nil fontified nil 6474 . 6475) (nil fontified nil 6473 . 6474) (nil fontified nil 6472 . 6473) (nil fontified nil 6471 . 6472) (nil fontified nil 6470 . 6471) (nil fontified nil 6469 . 6470) (nil fontified nil 6468 . 6469) (nil fontified nil 6467 . 6468) (nil fontified nil 6466 . 6467) (nil fontified nil 6465 . 6466) (nil fontified nil 6464 . 6465) (nil fontified nil 6463 . 6464) (nil fontified nil 6462 . 6463) (nil fontified nil 6461 . 6462) (nil fontified nil 6451 . 6461) (nil fontified nil 6450 . 6451) (nil fontified nil 6449 . 6450) (nil fontified nil 6448 . 6449) (nil fontified nil 6447 . 6448) (nil fontified nil 6446 . 6447) (nil fontified nil 6445 . 6446) (nil fontified nil 6444 . 6445) (nil fontified nil 6443 . 6444) (nil fontified nil 6442 . 6443) (6442 . 6495)) nil (25557 5885 458429 846000) 0 nil])
([nil nil ((6496 . 6500) (t 25557 5885 533262 787000)) nil (25557 5887 112299 699000) 0 nil])
([nil nil ((nil fontified nil 6552 . 6553) (nil fontified nil 6551 . 6552) (nil fontified nil 6536 . 6551) (nil fontified nil 6535 . 6536) (nil fontified nil 6534 . 6535) (nil fontified nil 6533 . 6534) (nil fontified nil 6532 . 6533) (nil fontified nil 6531 . 6532) (nil fontified nil 6530 . 6531) (nil fontified nil 6529 . 6530) (nil fontified nil 6528 . 6529) (nil fontified nil 6527 . 6528) (nil fontified nil 6526 . 6527) (nil fontified nil 6525 . 6526) (nil fontified nil 6524 . 6525) (nil fontified nil 6523 . 6524) (nil fontified nil 6522 . 6523) (nil fontified nil 6521 . 6522) (nil fontified nil 6520 . 6521) (nil fontified nil 6519 . 6520) (nil fontified nil 6509 . 6519) (nil fontified nil 6508 . 6509) (nil fontified nil 6507 . 6508) (nil fontified nil 6506 . 6507) (nil fontified nil 6505 . 6506) (nil fontified nil 6504 . 6505) (nil fontified nil 6503 . 6504) (nil fontified nil 6502 . 6503) (nil fontified nil 6501 . 6502) (nil fontified nil 6500 . 6501) (6500 . 6553)) nil (25557 5887 112294 58000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6499) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) 6500 (t 25557 5887 177257 108000)) nil (25557 5899 23560 76000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6442)) nil (25557 5899 23545 360000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -6524) (undo-tree-id11912 . -1) (#("a" 0 1 (fontified t)) . -6525) (undo-tree-id11913 . -1) (#("m" 0 1 (fontified t)) . -6526) (undo-tree-id11914 . -1) (#("e" 0 1 (fontified t)) . -6527) (undo-tree-id11915 . -1) 6528 (t 25557 5899 93215 821000)) nil (25557 5919 703191 533000) 0 nil])
([nil nil ((6524 . 6525)) nil (25557 5919 703187 791000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -6524) (undo-tree-id11911 . -1) 6525) nil (25557 5919 703186 920000) 0 nil])
([nil nil ((6524 . 6525)) nil (25557 5919 703185 422000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -6524) (undo-tree-id11910 . -1) 6525) nil (25557 5919 703184 584000) 0 nil])
([nil nil ((6524 . 6528)) nil (25557 5919 703182 904000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -6524) (undo-tree-id11906 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -6525) (undo-tree-id11907 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6526) (undo-tree-id11908 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -6527) (undo-tree-id11909 . -1) 6528) nil (25557 5919 703180 353000) 0 nil])
([nil nil ((6524 . 6529)) nil (25557 5919 703165 460000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -6539) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (#("O" 0 1 (fontified t)) . -6540) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (#("R" 0 1 (fontified t)) . -6541) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (#("D" 0 1 (fontified t)) . -6542) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (#("_" 0 1 (fontified t)) . -6543) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (#("L" 0 1 (fontified t)) . -6544) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (#("E" 0 1 (fontified t)) . -6545) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (#("N" 0 1 (fontified t)) . -6546) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (#("G" 0 1 (fontified t)) . -6547) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (#("T" 0 1 (fontified t)) . -6548) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (#("H" 0 1 (fontified t)) . -6549) (undo-tree-id11950 . -1) 6550 (t 25557 5919 777143 684000)) nil (25557 5926 54311 138000) 0 nil])
([nil nil ((6539 . 6540)) nil (25557 5926 54285 877000) 0 nil])
([nil nil ((6535 . 6551) (#("MAX_G" 0 4 (fontified t) 4 5 (fontified t ws-butler-chg chg)) . -6535) (undo-tree-id11916 . -5) (undo-tree-id11917 . -5) (undo-tree-id11918 . -5) (undo-tree-id11919 . -5) 6540) nil (25557 5926 54281 992000) 0 nil])
([nil nil ((6557 . 6559) (t 25557 5926 129121 416000)) nil (25557 5947 532837 717000) 0 nil])
([nil nil ((6558 . 6560) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6558) (undo-tree-id11973 . -1) 6559) nil (25557 5947 532836 824000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -6557) (undo-tree-id11970 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -6558) (undo-tree-id11971 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6559) (undo-tree-id11972 . -1) 6560) nil (25557 5947 532834 736000) 0 nil])
([nil nil ((6557 . 6558)) nil (25557 5947 532831 941000) 0 nil])
([nil nil ((6557 . 6559) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6557) (undo-tree-id11969 . -1) 6558) nil (25557 5947 532830 769000) 0 nil])
([nil nil ((6559 . 6563)) nil (25557 5947 532829 229000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6558) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6559) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -6560) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -6561) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -6562) (undo-tree-id11968 . -1) 6563) nil (25557 5947 532827 370000) 0 nil])
([nil nil ((6403 . 6404)) nil (25557 5947 532807 917000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -6290) (undo-tree-id11955 . -1) 6291) nil (25557 5947 532806 913000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t face font-lock-type-face)) . -6293) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -6294) (undo-tree-id11954 . -1) 6295) nil (25557 5947 532803 811000) 0 nil])
([nil nil ((6293 . 6294)) nil (25557 5947 532789 90000) 0 nil])
([nil nil ((6552 . 6555) (t 25557 5947 613045 679000)) nil (25557 5952 503455 533000) 0 nil])
([nil nil ((6555 . 6558)) nil (25557 5952 503454 475000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6555) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6556) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6557) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) 6558) nil (25557 5952 503451 934000) 0 nil])
([nil nil ((6555 . 6563)) nil (25557 5952 503418 512000) 0 nil])
([nil nil ((6563 . 6564)) nil (25557 5952 503401 388000) 0 nil])
([nil nil ((6554 . 6556) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . 6554) (6553 . 6554) (#(" " 0 1 (fontified t)) . 6553) (undo-tree-id11981 . -1) 6554 (t 25557 5952 573028 106000)) nil (25557 5954 499070 592000) 0 nil])
([nil nil ((6570 . 6571) (t 25557 5954 573021 11000)) nil (25557 5964 622314 847000) 0 nil])
([nil nil ((#("group_table[slot].name" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 6406) (undo-tree-id11982 . -22) (undo-tree-id11983 . -22) 6428) nil (25557 5964 622313 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6427 . 6428) (nil fontified nil 6427 . 6428) (nil fontified nil 6426 . 6427) (nil fontified nil 6425 . 6426) (nil fontified nil 6424 . 6425) (nil fontified nil 6423 . 6424) (nil fontified nil 6422 . 6423) (nil fontified nil 6421 . 6422) (nil fontified nil 6420 . 6421) (nil fontified nil 6419 . 6420) (nil fontified nil 6418 . 6419) (nil fontified nil 6417 . 6418) (nil fontified nil 6406 . 6417) (6406 . 6428)) nil (25557 5964 622293 253000) 0 nil])
([nil nil ((6570 . 6571)) nil (25557 5964 622290 692000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6592 . 6593) (nil fontified nil 6592 . 6593) (nil fontified nil 6591 . 6592) (nil fontified nil 6590 . 6591) (nil fontified nil 6589 . 6590) (nil fontified nil 6588 . 6589) (nil fontified nil 6587 . 6588) (nil fontified nil 6586 . 6587) (nil fontified nil 6585 . 6586) (nil fontified nil 6584 . 6585) (nil fontified nil 6583 . 6584) (nil fontified nil 6582 . 6583) (nil fontified nil 6571 . 6582) (6571 . 6593)) nil (25557 5964 622288 900000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 6593)) nil (25557 5964 622282 386000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -6589) (undo-tree-id11996 . -1) (#("a" 0 1 (fontified t)) . -6590) (undo-tree-id11997 . -1) (#("m" 0 1 (fontified t)) . -6591) (undo-tree-id11998 . -1) (#("e" 0 1 (fontified t rear-nonsticky t)) . -6592) (undo-tree-id11999 . -1) 6593 (t 25557 5964 696985 19000)) nil (25557 5989 323635 785000) 0 nil])
([nil nil ((6589 . 6600)) nil (25557 5989 323632 43000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -6594) (undo-tree-id11990 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6595) (undo-tree-id11991 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -6596) (undo-tree-id11992 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -6597) (undo-tree-id11993 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -6598) (undo-tree-id11994 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -6599) (undo-tree-id11995 . -1) 6600) nil (25557 5989 323630 630000) 0 nil])
([nil nil ((6594 . 6599)) nil (25557 5989 323625 467000) 0 nil])
([nil nil ((6594 . 6600) (#("callo" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -6594) (undo-tree-id11989 . -5) 6599) nil (25557 5989 323624 635000) 0 nil])
([nil nil ((6600 . 6602)) nil (25557 5989 323623 55000) 0 nil])
([nil nil ((6601 . 6607)) nil (25557 5989 323622 521000) 0 nil])
([nil nil ((6607 . 6608)) nil (25557 5989 323621 883000) 0 nil])
([nil nil ((6608 . 6609)) nil (25557 5989 323621 317000) 0 nil])
([nil nil ((6608 . 6613)) nil (25557 5989 323620 752000) 0 nil])
([nil nil ((6608 . 6630) (#("Regex" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -6608) (undo-tree-id11988 . -5) 6613) nil (25557 5989 323619 572000) 0 nil])
([nil nil ((6631 . 6632)) nil (25557 5989 323617 209000) 0 nil])
([nil nil ((6632 . 6633)) nil (25557 5989 323616 401000) 0 nil])
([nil nil ((6634 . 6635)) nil (25557 5989 323615 595000) 0 nil])
([nil nil ((6635 . 6637)) nil (25557 5989 323614 428000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 6636) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) 6637) nil (25557 5989 323610 442000) 0 nil])
([nil nil ((6636 . 6637) 6637 (t 25557 5989 388896 688000)) nil (25557 5995 31319 425000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 6636) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) 6637 (t 25557 5989 388896 688000)) nil (25557 5995 31317 916000) 0 nil])
([nil nil ((#("group_table[slot].next" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 6571) (undo-tree-id12000 . -22) (undo-tree-id12001 . -22) (undo-tree-id12002 . -22) 6593) nil (25557 5995 31311 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6592 . 6593) (nil fontified nil 6592 . 6593) (nil fontified nil 6591 . 6592) (nil fontified nil 6590 . 6591) (nil fontified nil 6589 . 6590) (nil fontified nil 6588 . 6589) (nil fontified nil 6587 . 6588) (nil fontified nil 6586 . 6587) (nil fontified nil 6585 . 6586) (nil fontified nil 6584 . 6585) (nil fontified nil 6583 . 6584) (nil fontified nil 6582 . 6583) (nil fontified nil 6571 . 6582) (6571 . 6593)) nil (25557 5995 31300 117000) 0 nil])
([nil nil ((6636 . 6637) (nil rear-nonsticky nil 6657 . 6658) (nil fontified nil 6657 . 6658) (nil fontified nil 6656 . 6657) (nil fontified nil 6655 . 6656) (nil fontified nil 6654 . 6655) (nil fontified nil 6653 . 6654) (nil fontified nil 6652 . 6653) (nil fontified nil 6651 . 6652) (nil fontified nil 6650 . 6651) (nil fontified nil 6649 . 6650) (nil fontified nil 6648 . 6649) (nil fontified nil 6647 . 6648) (nil fontified nil 6636 . 6647) (6636 . 6658)) nil (25557 5995 31292 681000) 0 nil])
([nil nil ((6637 . 6638) (t 25557 5995 132876 32000)) nil (25557 5996 392926 517000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -6637) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) 6638) nil (25557 5996 392921 981000) 0 nil])
([nil nil ((#("if(group_table[slot].name=='\\0')
 {
  strncpy(group_table[slot].name,name,MAX_WORD_LENGTH);
  strncpy(group_table[slot].group,name,MAX_GROUP_LENGTH);

  return 1;
 }
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t rear-nonsticky t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 89 (fontified t) 89 90 (fontified t) 90 91 (rear-nonsticky t fontified t) 91 92 (fontified t) 92 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 147 (fontified t) 147 148 (fontified t) 148 149 (rear-nonsticky t fontified t) 149 150 (fontified t) 150 153 (fontified t) 153 154 (fontified t face font-lock-keyword-face) 154 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t face font-lock-keyword-face) 156 157 (fontified t face font-lock-keyword-face) 157 158 (fontified t face font-lock-keyword-face) 158 159 (fontified t face font-lock-keyword-face) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t)) . 6403) (undo-tree-id12019 . -149) (undo-tree-id12020 . -166) (undo-tree-id12021 . -166) 6569 (t 25557 5996 456871 263000)) nil (25557 6005 719075 23000) 0 nil])
([nil nil ((6577 . 6580) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 6577) (6562 . 6567) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 6562) (6500 . 6505) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 6500) (6441 . 6446) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 6441) (6436 . 6439) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 6436) (nil rear-nonsticky nil 6568 . 6569) (nil fontified nil 6568 . 6569) (nil fontified nil 6567 . 6568) (nil fontified nil 6566 . 6567) (nil fontified nil 6565 . 6566) (nil fontified nil 6564 . 6565) (nil fontified nil 6563 . 6564) (nil fontified nil 6562 . 6563) (nil fontified nil 6561 . 6562) (nil fontified nil 6560 . 6561) (nil fontified nil 6559 . 6560) (nil fontified nil 6558 . 6559) (nil fontified nil 6557 . 6558) (nil fontified nil 6556 . 6557) (nil fontified nil 6553 . 6556) (nil fontified nil 6552 . 6553) (nil fontified nil 6551 . 6552) (nil fontified nil 6550 . 6551) (nil fontified nil 6534 . 6550) (nil fontified nil 6533 . 6534) (nil fontified nil 6532 . 6533) (nil fontified nil 6531 . 6532) (nil fontified nil 6530 . 6531) (nil fontified nil 6529 . 6530) (nil fontified nil 6528 . 6529) (nil fontified nil 6527 . 6528) (nil fontified nil 6526 . 6527) (nil fontified nil 6525 . 6526) (nil fontified nil 6524 . 6525) (nil fontified nil 6523 . 6524) (nil fontified nil 6522 . 6523) (nil fontified nil 6521 . 6522) (nil fontified nil 6520 . 6521) (nil fontified nil 6519 . 6520) (nil fontified nil 6518 . 6519) (nil fontified nil 6517 . 6518) (nil fontified nil 6516 . 6517) (nil fontified nil 6506 . 6516) (nil fontified nil 6505 . 6506) (nil fontified nil 6504 . 6505) (nil fontified nil 6503 . 6504) (nil fontified nil 6502 . 6503) (nil fontified nil 6501 . 6502) (nil fontified nil 6500 . 6501) (nil fontified nil 6499 . 6500) (nil fontified nil 6498 . 6499) (nil fontified nil 6497 . 6498) (nil fontified nil 6495 . 6497) (nil fontified nil 6494 . 6495) (nil fontified nil 6493 . 6494) (nil fontified nil 6492 . 6493) (nil fontified nil 6477 . 6492) (nil fontified nil 6476 . 6477) (nil fontified nil 6475 . 6476) (nil fontified nil 6474 . 6475) (nil fontified nil 6473 . 6474) (nil fontified nil 6472 . 6473) (nil fontified nil 6471 . 6472) (nil fontified nil 6470 . 6471) (nil fontified nil 6469 . 6470) (nil fontified nil 6468 . 6469) (nil fontified nil 6467 . 6468) (nil fontified nil 6466 . 6467) (nil fontified nil 6465 . 6466) (nil fontified nil 6464 . 6465) (nil fontified nil 6463 . 6464) (nil fontified nil 6462 . 6463) (nil fontified nil 6461 . 6462) (nil fontified nil 6460 . 6461) (nil fontified nil 6450 . 6460) (nil fontified nil 6449 . 6450) (nil fontified nil 6448 . 6449) (nil fontified nil 6447 . 6448) (nil fontified nil 6446 . 6447) (nil fontified nil 6445 . 6446) (nil fontified nil 6444 . 6445) (nil fontified nil 6443 . 6444) (nil fontified nil 6442 . 6443) (nil fontified nil 6441 . 6442) (nil fontified nil 6439 . 6441) (nil fontified nil 6438 . 6439) (nil fontified nil 6437 . 6438) (nil fontified nil 6436 . 6437) (nil fontified nil 6435 . 6436) (nil fontified nil 6434 . 6435) (nil fontified nil 6433 . 6434) (nil fontified nil 6432 . 6433) (nil fontified nil 6431 . 6432) (nil fontified nil 6430 . 6431) (nil fontified nil 6429 . 6430) (nil fontified nil 6428 . 6429) (nil fontified nil 6427 . 6428) (nil fontified nil 6426 . 6427) (nil fontified nil 6425 . 6426) (nil fontified nil 6424 . 6425) (nil fontified nil 6423 . 6424) (nil fontified nil 6422 . 6423) (nil fontified nil 6421 . 6422) (nil fontified nil 6420 . 6421) (nil fontified nil 6419 . 6420) (nil fontified nil 6418 . 6419) (nil fontified nil 6417 . 6418) (nil fontified nil 6406 . 6417) (nil fontified nil 6405 . 6406) (nil fontified nil 6404 . 6405) (nil fontified nil 6403 . 6404) (6403 . 6569)) nil (25557 6005 719067 279000) 0 nil])
([nil nil ((6649 . 6650)) nil (25557 6005 719046 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -6649) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (#(" " 0 1 (fontified t)) . -6650) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) 6651) nil (25557 6005 719045 248000) 0 nil])
([nil nil ((6649 . 6650)) nil (25557 6005 719040 236000) 0 nil])
([nil nil ((6649 . 6651) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6649) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) 6650) nil (25557 6005 719038 612000) 0 nil])
([nil nil ((6824 . 6827) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 6824) (6809 . 6814) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 6809) (6747 . 6752) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 6747) (6688 . 6693) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 6688) (6683 . 6686) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 6683) (6649 . 6650) (nil rear-nonsticky nil 6814 . 6815) (nil fontified nil 6814 . 6815) (nil fontified nil 6813 . 6814) (nil fontified nil 6812 . 6813) (nil fontified nil 6811 . 6812) (nil fontified nil 6810 . 6811) (nil fontified nil 6809 . 6810) (nil fontified nil 6808 . 6809) (nil fontified nil 6807 . 6808) (nil fontified nil 6806 . 6807) (nil fontified nil 6805 . 6806) (nil fontified nil 6804 . 6805) (nil fontified nil 6803 . 6804) (nil fontified nil 6802 . 6803) (nil fontified nil 6799 . 6802) (nil fontified nil 6798 . 6799) (nil fontified nil 6797 . 6798) (nil fontified nil 6796 . 6797) (nil fontified nil 6780 . 6796) (nil fontified nil 6779 . 6780) (nil fontified nil 6778 . 6779) (nil fontified nil 6777 . 6778) (nil fontified nil 6776 . 6777) (nil fontified nil 6775 . 6776) (nil fontified nil 6774 . 6775) (nil fontified nil 6773 . 6774) (nil fontified nil 6772 . 6773) (nil fontified nil 6771 . 6772) (nil fontified nil 6770 . 6771) (nil fontified nil 6769 . 6770) (nil fontified nil 6768 . 6769) (nil fontified nil 6767 . 6768) (nil fontified nil 6766 . 6767) (nil fontified nil 6765 . 6766) (nil fontified nil 6764 . 6765) (nil fontified nil 6763 . 6764) (nil fontified nil 6762 . 6763) (nil fontified nil 6752 . 6762) (nil fontified nil 6751 . 6752) (nil fontified nil 6750 . 6751) (nil fontified nil 6749 . 6750) (nil fontified nil 6748 . 6749) (nil fontified nil 6747 . 6748) (nil fontified nil 6746 . 6747) (nil fontified nil 6745 . 6746) (nil fontified nil 6744 . 6745) (nil fontified nil 6743 . 6744) (nil fontified nil 6741 . 6743) (nil fontified nil 6740 . 6741) (nil fontified nil 6739 . 6740) (nil fontified nil 6738 . 6739) (nil fontified nil 6723 . 6738) (nil fontified nil 6722 . 6723) (nil fontified nil 6721 . 6722) (nil fontified nil 6720 . 6721) (nil fontified nil 6719 . 6720) (nil fontified nil 6718 . 6719) (nil fontified nil 6717 . 6718) (nil fontified nil 6716 . 6717) (nil fontified nil 6715 . 6716) (nil fontified nil 6714 . 6715) (nil fontified nil 6713 . 6714) (nil fontified nil 6712 . 6713) (nil fontified nil 6711 . 6712) (nil fontified nil 6710 . 6711) (nil fontified nil 6709 . 6710) (nil fontified nil 6708 . 6709) (nil fontified nil 6707 . 6708) (nil fontified nil 6706 . 6707) (nil fontified nil 6696 . 6706) (nil fontified nil 6695 . 6696) (nil fontified nil 6694 . 6695) (nil fontified nil 6693 . 6694) (nil fontified nil 6692 . 6693) (nil fontified nil 6691 . 6692) (nil fontified nil 6690 . 6691) (nil fontified nil 6689 . 6690) (nil fontified nil 6688 . 6689) (nil fontified nil 6687 . 6688) (nil fontified nil 6685 . 6687) (nil fontified nil 6684 . 6685) (nil fontified nil 6683 . 6684) (nil fontified nil 6682 . 6683) (nil fontified nil 6681 . 6682) (nil fontified nil 6680 . 6681) (nil fontified nil 6679 . 6680) (nil fontified nil 6678 . 6679) (nil fontified nil 6677 . 6678) (nil fontified nil 6676 . 6677) (nil fontified nil 6675 . 6676) (nil fontified nil 6674 . 6675) (nil fontified nil 6673 . 6674) (nil fontified nil 6672 . 6673) (nil fontified nil 6671 . 6672) (nil fontified nil 6670 . 6671) (nil fontified nil 6669 . 6670) (nil fontified nil 6668 . 6669) (nil fontified nil 6667 . 6668) (nil fontified nil 6666 . 6667) (nil fontified nil 6665 . 6666) (nil fontified nil 6664 . 6665) (nil fontified nil 6663 . 6664) (nil fontified nil 6652 . 6663) (nil fontified nil 6651 . 6652) (nil fontified nil 6650 . 6651) (nil fontified nil 6649 . 6650) (6649 . 6815)) nil (25557 6005 719019 538000) 0 nil])
([nil nil ((6649 . 6650) (t 25557 6005 792837 594000)) nil (25557 6007 299206 476000) 0 nil])
([nil nil ((#("group_table[slot].next" 0 1 (fontified t) 1 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (rear-nonsticky t fontified t)) . 6832) (undo-tree-id12026 . -22) (t 25557 6007 364831 915000)) nil (25557 6009 975303 761000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6831) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) 6832) nil (25557 6009 975286 112000) 0 nil])
([nil nil ((6831 . 6832) 6832 (t 25557 6010 52822 195000)) nil (25557 6016 54928 798000) 0 nil])
([nil nil ((6672 . 6677) (t 25557 6010 52822 195000)) nil (25557 6016 54926 471000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 6836) 6677) nil (25557 6016 54921 340000) 0 nil])
([nil nil ((#("if(group_table[slot].next.name=='\\0')" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (rear-nonsticky t fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t)) . 6651) (undo-tree-id12033 . -32) (undo-tree-id12034 . -26) (undo-tree-id12035 . -26) (undo-tree-id12036 . -37) (t 25557 6016 144800 136000)) nil (25557 6022 58695 381000) 0 nil])
([nil nil ((#("   {
" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 6652) (undo-tree-id12032 . -5)) nil (25557 6022 58691 4000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6650) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) 6652) nil (25557 6022 58686 71000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 6650) (#("
" 0 1 (fontified t)) . 6650) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (t 25557 6022 160778 316000)) nil (25557 6030 370180 1000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 6650) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6650) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6650)) nil (25557 6030 370176 666000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 6705) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6705) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6705) (#(" " 0 1 (fontified t)) . 6705)) nil (25557 6030 370175 227000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 6763) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6763) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6763) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 6763) (#(" " 0 1 (fontified t)) . 6763)) nil (25557 6030 370173 259000) 0 nil])
([nil nil ((#("return 1;
   }
" 0 1 (ws-butler-chg delete fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 13 (fontified t) 13 14 (fontified t) 14 15 (rear-nonsticky t fontified t)) . -6763) (undo-tree-id12052 . -15) (undo-tree-id12053 . -15) (undo-tree-id12054 . -15)) nil (25557 6030 370171 84000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6762) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) 6763) nil (25557 6030 370164 666000) 0 nil])
([nil nil ((6677 . 6682) (t 25557 6030 452748 169000)) nil (25557 6041 27923 990000) 0 nil])
([nil nil ((6737 . 6738) (t 25557 6041 92709 374000)) nil (25557 6045 987769 751000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -6737) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) 6738) nil (25557 6045 987767 537000) 0 nil])
([nil nil ((6737 . 6742)) nil (25557 6045 987754 704000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6771) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) 6772 (t 25557 6046 60691 216000)) nil (25557 6047 773281 248000) 0 nil])
([nil nil ((2083 . 2084) (t 25557 6047 836684 724000)) nil (25557 6063 617772 642000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg)) . -2083) (undo-tree-id12064 . -1) 2084) nil (25557 6063 617768 208000) 0 nil])
([nil nil ((2063 . 2065) (t 25557 6063 688626 572000)) nil (25557 6067 943111 692000) 0 nil])
([nil nil ((#("char* test=\"      Bu!lu  Al%ib Alabber D% Hall!Was Geht\";" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 6 (fontified t) 6 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t face font-lock-string-face) 54 55 (fontified t face font-lock-string-face) 55 56 (fontified t face font-lock-string-face) 56 57 (fontified t)) . 1968) (undo-tree-id12084 . -12) (undo-tree-id12085 . -19) (undo-tree-id12086 . -20) (undo-tree-id12087 . -12) (undo-tree-id12088 . -12) (undo-tree-id12089 . -11) (undo-tree-id12090 . -24) (undo-tree-id12091 . -24) (undo-tree-id12092 . -31) (undo-tree-id12093 . -25) (undo-tree-id12094 . -27) (undo-tree-id12095 . -38) (undo-tree-id12096 . -56) (undo-tree-id12097 . -40) (undo-tree-id12098 . -57)) nil (25557 6067 943109 843000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1967) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) 1968) nil (25557 6067 943095 950000) 0 nil])
([nil nil ((1967 . 1968) 1968 (t 25557 6068 16610 653000)) nil (25557 6072 105566 619000) 0 nil])
([nil nil ((#("Regex_Action action=&TestAction;" 0 8 (fontified t face font-lock-type-face) 8 11 (fontified t face font-lock-type-face) 11 12 (fontified t c-type c-decl-id-start face font-lock-type-face) 12 13 (fontified t) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t) 20 21 (fontified t) 21 31 (fontified t) 31 32 (fontified t)) . 1971) (undo-tree-id12105 . -32) (t 25557 6068 16610 653000)) nil (25557 6072 105565 215000) 0 nil])
([nil nil ((1837 . 1839) (nil rear-nonsticky nil 1868 . 1869) (nil fontified nil 1868 . 1869) (nil fontified nil 1858 . 1868) (nil fontified nil 1857 . 1858) (nil fontified nil 1856 . 1857) (nil fontified nil 1855 . 1856) (nil fontified nil 1854 . 1855) (nil fontified nil 1853 . 1854) (nil fontified nil 1852 . 1853) (nil fontified nil 1851 . 1852) (nil fontified nil 1850 . 1851) (nil fontified nil 1849 . 1850) (nil fontified nil 1848 . 1849) (nil fontified nil 1845 . 1848) (nil fontified nil 1837 . 1845) (1837 . 1869)) nil (25557 6072 105562 210000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2003) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 2001) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) 1871) nil (25557 6072 105555 604000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1837) (undo-tree-id12106 . -2) 1839 (t 25557 6072 180595 312000)) nil (25557 6073 137246 904000) 0 nil])
([nil nil ((1837 . 1838) (t 25557 6073 280591 258000)) nil (25557 6073 932376 89000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2001) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (#("
" 0 1 (fontified t)) . -2002) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) 2003 (t 25557 6074 588 605000)) nil (25557 6201 212673 839000) 0 nil])
([nil nil ((2000 . 2002) (t 25557 6201 280111 756000)) nil (25557 6244 778264 66000) 0 nil])
([nil nil ((2002 . 2007)) nil (25557 6244 778263 250000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t ws-butler-chg chg)) . -2002) (undo-tree-id12121 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2003) (undo-tree-id12122 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -2004) (undo-tree-id12123 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2005) (undo-tree-id12124 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -2006) (undo-tree-id12125 . -1) 2007) nil (25557 6244 778261 970000) 0 nil])
([nil nil ((2001 . 2003)) nil (25557 6244 778255 929000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -2002) (undo-tree-id12120 . -1) 2003) nil (25557 6244 778254 899000) 0 nil])
([nil nil ((2002 . 2004)) nil (25557 6244 778253 115000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -2002) (undo-tree-id12118 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -2003) (undo-tree-id12119 . -1) 2004) nil (25557 6244 778252 73000) 0 nil])
([nil nil ((2002 . 2007)) nil (25557 6244 778234 985000) 0 nil])
([nil nil ((2002 . 2022) (#("Regex" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -2002) (undo-tree-id12117 . -5) 2007) nil (25557 6244 778234 82000) 0 nil])
([nil nil ((2022 . 2023)) nil (25557 6244 778232 68000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2022) (undo-tree-id12116 . -1) 2023) nil (25557 6244 778230 995000) 0 nil])
([nil nil ((2022 . 2024)) nil (25557 6244 778229 214000) 0 nil])
([nil nil ((2023 . 2035) (#(") 

 //Regex" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg delete) 2 3 (fontified t ws-butler-chg delete) 3 4 (fontified t) 4 5 (c-in-sws t c-is-sws t fontified t) 5 6 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 6 7 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7 12 (c-in-sws t fontified t face font-lock-comment-face)) . 2023)) nil (25557 6244 778228 260000) 0 nil])
([nil nil ((2022 . 2035) (#("() 

 //Regex" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg delete) 3 4 (fontified t ws-butler-chg delete) 4 5 (fontified t) 5 6 (c-in-sws t c-is-sws t fontified t) 6 7 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7 8 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8 13 (c-in-sws t fontified t face font-lock-comment-face)) . 2022)) nil (25557 6244 778226 662000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . -2024) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) 2025) nil (25557 6244 778222 223000) 0 nil])
([nil nil ((2023 . 2026) (t 25557 6244 855945 366000)) nil (25557 6252 316338 895000) 0 nil])
([nil nil ((2027 . 2028)) nil (25557 6252 316333 808000) 0 nil])
([nil nil ((2029 . 2031) (t 25557 6252 387916 467000)) nil (25557 6295 208521 477000) 0 nil])
([nil nil ((2030 . 2032) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 2030) (undo-tree-id12144 . -1) 2031) nil (25557 6295 208520 501000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2031) (undo-tree-id12143 . -1) 2032) nil (25557 6295 208508 565000) 0 nil])
([nil nil ((2030 . 2035)) nil (25557 6295 208507 240000) 0 nil])
([nil nil ((2035 . 2036)) nil (25557 6295 208506 590000) 0 nil])
([nil nil ((2036 . 2043)) nil (25557 6295 208506 32000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2042) (undo-tree-id12142 . -1) 2043) nil (25557 6295 208505 220000) 0 nil])
([nil nil ((2042 . 2043)) nil (25557 6295 208503 700000) 0 nil])
([nil nil ((2043 . 2047)) nil (25557 6295 208503 94000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -2043) (undo-tree-id12138 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -2044) (undo-tree-id12139 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -2045) (undo-tree-id12140 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -2046) (undo-tree-id12141 . -1) 2047) nil (25557 6295 208501 876000) 0 nil])
([nil nil ((2043 . 2044)) nil (25557 6295 208498 120000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg)) . -2043) (undo-tree-id12137 . -1) 2044) nil (25557 6295 208497 5000) 0 nil])
([nil nil ((2044 . 2045) (nil syntax-table nil 2044 . 2045) (nil syntax-table (1) 2043 . 2044) (2043 . 2044)) nil (25557 6295 208495 431000) 0 nil])
([nil nil ((2045 . 2046)) nil (25557 6295 208494 344000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2045) (undo-tree-id12136 . -1) 2046) nil (25557 6295 208493 620000) 0 nil])
([nil nil ((2044 . 2046)) nil (25557 6295 208492 301000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2045) (undo-tree-id12135 . -1) 2046) nil (25557 6295 208491 493000) 0 nil])
([nil nil ((2045 . 2049)) nil (25557 6295 208490 65000) 0 nil])
([nil nil ((2049 . 2050)) nil (25557 6295 208489 371000) 0 nil])
([nil nil ((2050 . 2052)) nil (25557 6295 208488 517000) 0 nil])
([nil nil ((2052 . 2053)) nil (25557 6295 208487 964000) 0 nil])
([nil nil ((2053 . 2054)) nil (25557 6295 208487 413000) 0 nil])
([nil nil ((2054 . 2055)) nil (25557 6295 208486 784000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2054) (undo-tree-id12134 . -1) 2055) nil (25557 6295 208486 25000) 0 nil])
([nil nil ((2054 . 2055)) nil (25557 6295 208484 579000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2054) (undo-tree-id12133 . -1) 2055) nil (25557 6295 208483 700000) 0 nil])
([nil nil ((2054 . 2059)) nil (25557 6295 208482 212000) 0 nil])
([nil nil ((2059 . 2061)) nil (25557 6295 208481 566000) 0 nil])
([nil nil ((2061 . 2062)) nil (25557 6295 208480 896000) 0 nil])
([nil nil ((2062 . 2065)) nil (25557 6295 208480 185000) 0 nil])
([nil nil ((2065 . 2066)) nil (25557 6295 208479 635000) 0 nil])
([nil nil ((2066 . 2068)) nil (25557 6295 208478 798000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2067) (undo-tree-id12132 . -1) 2068) nil (25557 6295 208477 898000) 0 nil])
([nil nil ((2067 . 2070)) nil (25557 6295 208476 129000) 0 nil])
([nil nil ((2071 . 2072)) nil (25557 6295 208475 298000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -2071) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) 2072) nil (25557 6295 208474 177000) 0 nil])
([nil nil ((2071 . 2072)) nil (25557 6295 208470 446000) 0 nil])
([nil nil ((2072 . 2074)) nil (25557 6295 208469 150000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2073) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) 2074) nil (25557 6295 208465 391000) 0 nil])
([nil nil ((2073 . 2074) 2074 (t 25557 6295 303750 991000)) nil (25557 6351 693166 786000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2073) (undo-tree-id12153 . -1) 2074 (t 25557 6295 303750 991000)) nil (25557 6351 693165 771000) 0 nil])
([nil nil ((2070 . 2071)) nil (25557 6351 693163 917000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2070) (undo-tree-id12152 . -1) 2071) nil (25557 6351 693163 9000) 0 nil])
([nil nil ((2070 . 2071)) nil (25557 6351 693161 703000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2070) (undo-tree-id12151 . -1) 2071) nil (25557 6351 693160 892000) 0 nil])
([nil nil ((2070 . 2071)) nil (25557 6351 693158 531000) 0 nil])
([nil nil ((2071 . 2073)) nil (25557 6351 693157 850000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2071) (undo-tree-id12149 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2072) (undo-tree-id12150 . -1) 2073) nil (25557 6351 693156 825000) 0 nil])
([nil nil ((2071 . 2073)) nil (25557 6351 693154 567000) 0 nil])
([nil nil ((2073 . 2078)) nil (25557 6351 693153 882000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2076) (undo-tree-id12145 . -1) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2077) (undo-tree-id12148 . -1) 2078) nil (25557 6351 693151 697000) 0 nil])
([nil nil ((2076 . 2078)) nil (25557 6351 693136 821000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t face font-lock-string-face)) . -2071) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (#("|" 0 1 (fontified t face font-lock-string-face)) . -2072) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (#("E" 0 1 (fontified t face font-lock-string-face)) . -2073) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (#("N" 0 1 (fontified t face font-lock-string-face)) . -2074) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) (#("D" 0 1 (fontified t face font-lock-string-face)) . -2075) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (#("|" 0 1 (fontified t face font-lock-string-face)) . -2076) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (#("|" 0 1 (fontified t face font-lock-string-face)) . -2077) (undo-tree-id12172 . -1) 2078 (t 25557 6351 771531 415000)) nil (25557 6363 501536 194000) 0 nil])
([nil nil ((2071 . 2072)) nil (25557 6363 501483 485000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -2070) (undo-tree-id12173 . -1) 2071 (t 25557 6363 579485 247000)) nil (25557 6374 749209 891000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t face font-lock-string-face)) . -2070) (undo-tree-id12174 . -1) 2071 (t 25557 6374 815441 230000)) nil (25557 6375 926396 399000) 0 nil])
([nil nil ((2070 . 2071)) nil (25557 6375 926384 108000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -2070) (undo-tree-id12175 . -1) 2071 (t 25557 6376 7436 559000)) nil (25557 6382 839500 432000) 0 nil])
([nil nil ((2070 . 2071)) nil (25557 6382 839492 622000) 0 nil])
([nil nil ((2071 . 2072)) nil (25557 6382 839487 632000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -2070) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -2071) (undo-tree-id12182 . -1) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1) 2072 (t 25557 6382 915409 456000)) nil (25557 6441 715776 62000) 0 nil])
([nil nil ((2074 . 2076) (t 25557 6441 791177 483000)) nil (25557 6496 895315 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2075) (undo-tree-id12200 . -1) 2076) nil (25557 6496 895314 797000) 0 nil])
([nil nil ((2075 . 2083)) nil (25557 6496 895313 40000) 0 nil])
([nil nil ((2075 . 2094) (#("Regex_Re" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -2075) (undo-tree-id12199 . -8) 2083) nil (25557 6496 895312 169000) 0 nil])
([nil nil ((2094 . 2096)) nil (25557 6496 895310 735000) 0 nil])
([nil nil ((2095 . 2105) (#(")
 //Regex" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg delete) 2 3 (c-in-sws t c-is-sws t fontified t) 3 4 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 4 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 10 (c-in-sws t fontified t face font-lock-comment-face)) . 2095)) nil (25557 6496 895309 927000) 0 nil])
([nil nil ((2096 . 2097) (nil syntax-table nil 2097 . 2098) (nil syntax-table (1) 2095 . 2096) (2095 . 2096)) nil (25557 6496 895308 957000) 0 nil])
([nil nil ((2096 . 2107)) nil (25557 6496 895307 831000) 0 nil])
([nil nil ((#("V" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2096) (undo-tree-id12188 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2097) (undo-tree-id12189 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2098) (undo-tree-id12190 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2099) (undo-tree-id12191 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2100) (undo-tree-id12192 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2101) (undo-tree-id12193 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2102) (undo-tree-id12194 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2103) (undo-tree-id12195 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2104) (undo-tree-id12196 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2105) (undo-tree-id12197 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2106) (undo-tree-id12198 . -1) 2107) nil (25557 6496 895305 664000) 0 nil])
([nil nil ((2096 . 2101)) nil (25557 6496 895295 444000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2099) (undo-tree-id12186 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2100) (undo-tree-id12187 . -1) 2101) nil (25557 6496 895294 333000) 0 nil])
([nil nil ((2099 . 2102)) nil (25557 6496 895291 860000) 0 nil])
([nil nil ((2103 . 2104)) nil (25557 6496 895291 291000) 0 nil])
([nil nil ((2104 . 2105)) nil (25557 6496 895290 543000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -2104) (undo-tree-id12185 . -1) 2105) nil (25557 6496 895289 133000) 0 nil])
([nil nil ((2104 . 2109)) nil (25557 6496 895280 204000) 0 nil])
([nil nil ((2110 . 2111)) nil (25557 6496 895275 617000) 0 nil])
([nil nil ((2111 . 2113) (t 25557 6496 974958 484000)) nil (25557 6497 715970 690000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2112) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) 2113) nil (25557 6497 715966 59000) 0 nil])
([nil nil ((2112 . 2113) 2113 (t 25557 6497 790955 235000)) nil (25557 6530 718301 730000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 2112) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) 2113 (t 25557 6497 790955 235000)) nil (25557 6530 718300 285000) 0 nil])
([nil nil ((#("struct Regex_GroupTable
{
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t face font-lock-type-face) 15 16 (fontified t face font-lock-type-face) 16 17 (fontified t face font-lock-type-face) 17 18 (fontified t face font-lock-type-face) 18 19 (fontified t face font-lock-type-face) 19 20 (fontified t face font-lock-type-face) 20 21 (fontified t face font-lock-type-face) 21 22 (fontified t face font-lock-type-face) 22 23 (fontified t face font-lock-type-face) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 1076) (undo-tree-id12212 . -26) (undo-tree-id12213 . -26) (undo-tree-id12214 . -26) (undo-tree-id12215 . -26) 1102) nil (25557 6530 718281 279000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -1108) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) 1109) nil (25557 6530 718256 611000) 0 nil])
([nil nil ((#(" Regex_GroupTableBucket* table;
" 0 1 (fontified t) 1 22 (fontified t face font-lock-type-face) 22 23 (fontified t c-type c-decl-id-start face font-lock-type-face) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t face font-lock-variable-name-face) 28 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t) 31 32 (fontified t)) . 1076) (undo-tree-id12237 . -32) (undo-tree-id12238 . -32) (undo-tree-id12239 . -32) (undo-tree-id12240 . -32) (undo-tree-id12241 . -32) (undo-tree-id12242 . -32) (undo-tree-id12243 . -32) (undo-tree-id12244 . -32) (undo-tree-id12245 . -32) (undo-tree-id12246 . -32) (undo-tree-id12247 . -32) (t 25557 6530 794823 583000)) nil (25557 6535 342437 831000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1075) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) 1076) nil (25557 6535 342429 529000) 0 nil])
([nil nil ((1075 . 1077)) nil (25557 6535 342409 31000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified nil)) . 1077) (nil rear-nonsticky nil 1108 . 1109) (nil fontified nil 1108 . 1109) (nil fontified nil 1107 . 1108) (nil fontified nil 1106 . 1107) (nil fontified nil 1105 . 1106) (nil fontified nil 1104 . 1105) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1100 . 1101) (nil fontified nil 1099 . 1100) (nil fontified nil 1078 . 1099) (nil fontified nil 1077 . 1078) (1077 . 1109)) nil (25557 6535 342403 337000) 0 nil])
([nil nil ((#("Regex_GroupTableBucket* table;
" 0 1 (fontified t face font-lock-type-face) 1 21 (fontified t face font-lock-type-face) 21 22 (fontified t c-type c-decl-id-start face font-lock-type-face) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t face font-lock-variable-name-face) 28 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t) 30 31 (fontified t rear-nonsticky t)) . 1077) (undo-tree-id12248 . -31) (undo-tree-id12249 . -31) (undo-tree-id12250 . -31) (undo-tree-id12251 . -31) (undo-tree-id12252 . -31) (undo-tree-id12253 . -31) (undo-tree-id12254 . -31) (undo-tree-id12255 . -31) (undo-tree-id12256 . -31) (undo-tree-id12257 . -24) (undo-tree-id12258 . -24) (undo-tree-id12259 . -24) (undo-tree-id12260 . -24) (undo-tree-id12261 . -24) (undo-tree-id12262 . -24) (undo-tree-id12263 . -31) (t 25557 6535 430805 54000)) nil (25557 6551 32692 104000) 0 nil])
([nil nil ((nil fontified nil 1107 . 1108) (nil fontified nil 1106 . 1107) (nil fontified nil 1105 . 1106) (nil fontified nil 1104 . 1105) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1100 . 1101) (nil fontified nil 1099 . 1100) (nil fontified nil 1098 . 1099) (nil fontified nil 1078 . 1098) (nil fontified nil 1077 . 1078) (1077 . 1108) (t 25557 6551 114742 300000)) nil (25557 6552 586487 185000) 0 nil])
([nil nil ((1101 . 1107) (t 25557 6552 662736 101000)) nil (25557 6556 354187 658000) 0 nil])
([nil nil ((#("struct Regex_GroupTable group_table;
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-type-face) 8 22 (fontified t face font-lock-type-face) 22 23 (fontified t c-type c-decl-id-start face font-lock-type-face) 23 24 (fontified t) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t face font-lock-variable-name-face) 27 28 (fontified t face font-lock-variable-name-face) 28 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (fontified t)) . 1116) (undo-tree-id12281 . -36) (undo-tree-id12282 . -36) (undo-tree-id12283 . -37) (t 25557 6556 434720 992000)) nil (25557 6559 537096 839000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1114) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (#("
" 0 1 (fontified t)) . -1115) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) 1116) nil (25557 6559 537090 189000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name)
" 0 1 (fontified t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (fontified t)) . 6769) (undo-tree-id12284 . -25) (undo-tree-id12285 . -25) (undo-tree-id12286 . -36) (undo-tree-id12287 . -36) (undo-tree-id12288 . -36) (undo-tree-id12289 . -36) (undo-tree-id12290 . -36) (undo-tree-id12291 . -36) (undo-tree-id12292 . -36) (undo-tree-id12293 . -37) (t 25557 6559 614708 253000)) nil (25557 6575 631448 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6805 . 6806) (nil fontified nil 6805 . 6806) (nil fontified nil 6804 . 6805) (nil fontified nil 6803 . 6804) (nil fontified nil 6802 . 6803) (nil fontified nil 6801 . 6802) (nil fontified nil 6800 . 6801) (nil fontified nil 6799 . 6800) (nil fontified nil 6798 . 6799) (nil fontified nil 6797 . 6798) (nil fontified nil 6796 . 6797) (nil fontified nil 6795 . 6796) (nil fontified nil 6794 . 6795) (nil fontified nil 6793 . 6794) (nil fontified nil 6792 . 6793) (nil fontified nil 6791 . 6792) (nil fontified nil 6790 . 6791) (nil fontified nil 6789 . 6790) (nil fontified nil 6788 . 6789) (nil fontified nil 6787 . 6788) (nil fontified nil 6786 . 6787) (nil fontified nil 6785 . 6786) (nil fontified nil 6784 . 6785) (nil fontified nil 6783 . 6784) (nil fontified nil 6782 . 6783) (nil fontified nil 6781 . 6782) (nil fontified nil 6780 . 6781) (nil fontified nil 6779 . 6780) (nil fontified nil 6778 . 6779) (nil fontified nil 6777 . 6778) (nil fontified nil 6776 . 6777) (nil fontified nil 6774 . 6776) (nil fontified nil 6770 . 6774) (nil fontified nil 6769 . 6770) (6769 . 6806)) nil (25557 6575 631429 177000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name)
" 0 1 (fontified t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (fontified t rear-nonsticky t)) . 6769) (undo-tree-id12294 . -37) (undo-tree-id12295 . -37) (undo-tree-id12296 . -37) (undo-tree-id12297 . -37) (undo-tree-id12298 . -37) (undo-tree-id12299 . -37) (t 25557 6575 698643 737000)) nil (25557 6582 796379 371000) 0 nil])
([nil nil ((nil fontified nil 6805 . 6806) (nil fontified nil 6804 . 6805) (nil fontified nil 6803 . 6804) (nil fontified nil 6802 . 6803) (nil fontified nil 6801 . 6802) (nil fontified nil 6800 . 6801) (nil fontified nil 6799 . 6800) (nil fontified nil 6798 . 6799) (nil fontified nil 6797 . 6798) (nil fontified nil 6796 . 6797) (nil fontified nil 6795 . 6796) (nil fontified nil 6794 . 6795) (nil fontified nil 6793 . 6794) (nil fontified nil 6792 . 6793) (nil fontified nil 6791 . 6792) (nil fontified nil 6790 . 6791) (nil fontified nil 6789 . 6790) (nil fontified nil 6788 . 6789) (nil fontified nil 6787 . 6788) (nil fontified nil 6786 . 6787) (nil fontified nil 6785 . 6786) (nil fontified nil 6784 . 6785) (nil fontified nil 6783 . 6784) (nil fontified nil 6782 . 6783) (nil fontified nil 6781 . 6782) (nil fontified nil 6780 . 6781) (nil fontified nil 6779 . 6780) (nil fontified nil 6778 . 6779) (nil fontified nil 6777 . 6778) (nil fontified nil 6776 . 6777) (nil fontified nil 6774 . 6776) (nil fontified nil 6770 . 6774) (nil fontified nil 6769 . 6770) (6769 . 6806)) nil (25557 6582 796363 869000) 0 nil])
([nil nil ((nil fontified nil 6318 . 6319) (nil fontified nil 6317 . 6318) (nil fontified nil 6316 . 6317) (nil fontified nil 6315 . 6316) (nil fontified nil 6314 . 6315) (nil fontified nil 6313 . 6314) (nil fontified nil 6312 . 6313) (nil fontified nil 6311 . 6312) (nil fontified nil 6310 . 6311) (nil fontified nil 6309 . 6310) (nil fontified nil 6308 . 6309) (nil fontified nil 6307 . 6308) (nil fontified nil 6306 . 6307) (nil fontified nil 6305 . 6306) (nil fontified nil 6304 . 6305) (nil fontified nil 6303 . 6304) (nil fontified nil 6302 . 6303) (nil fontified nil 6301 . 6302) (nil fontified nil 6300 . 6301) (nil fontified nil 6299 . 6300) (nil fontified nil 6298 . 6299) (nil fontified nil 6297 . 6298) (nil fontified nil 6296 . 6297) (nil fontified nil 6295 . 6296) (nil fontified nil 6294 . 6295) (nil fontified nil 6293 . 6294) (nil fontified nil 6292 . 6293) (nil fontified nil 6291 . 6292) (nil fontified nil 6290 . 6291) (nil fontified nil 6289 . 6290) (nil fontified nil 6287 . 6289) (nil fontified nil 6283 . 6287) (nil fontified nil 6282 . 6283) (6282 . 6319)) nil (25557 6582 796354 46000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name)

int8_t Regex_RegisterGroup(char* name,char* group)" 0 1 (fontified t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (rear-nonsticky t fontified t) 37 38 (fontified t) 38 39 (fontified t face font-lock-type-face) 39 40 (fontified t face font-lock-type-face) 40 41 (fontified t face font-lock-type-face) 41 42 (fontified t face font-lock-type-face) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t c-type c-decl-id-start face font-lock-type-face) 44 45 (fontified t) 45 46 (fontified t face font-lock-function-name-face) 46 47 (fontified t face font-lock-function-name-face) 47 48 (fontified t face font-lock-function-name-face) 48 49 (fontified t face font-lock-function-name-face) 49 50 (fontified t face font-lock-function-name-face) 50 51 (fontified t face font-lock-function-name-face) 51 52 (fontified t face font-lock-function-name-face) 52 53 (fontified t face font-lock-function-name-face) 53 54 (fontified t face font-lock-function-name-face) 54 55 (fontified t face font-lock-function-name-face) 55 56 (fontified t face font-lock-function-name-face) 56 57 (fontified t face font-lock-function-name-face) 57 58 (fontified t face font-lock-function-name-face) 58 59 (fontified t face font-lock-function-name-face) 59 60 (fontified t face font-lock-function-name-face) 60 61 (fontified t face font-lock-function-name-face) 61 62 (fontified t face font-lock-function-name-face) 62 63 (fontified t face font-lock-function-name-face) 63 64 (fontified t face font-lock-function-name-face) 64 65 (fontified t c-type c-decl-arg-start) 65 66 (fontified t face font-lock-type-face) 66 67 (fontified t face font-lock-type-face) 67 68 (fontified t face font-lock-type-face) 68 69 (fontified t face font-lock-type-face) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t face font-lock-variable-name-face) 72 73 (fontified t face font-lock-variable-name-face) 73 74 (fontified t face font-lock-variable-name-face) 74 75 (fontified t face font-lock-variable-name-face) 75 76 (fontified t c-type c-decl-arg-start) 76 77 (fontified t face font-lock-type-face) 77 78 (fontified t face font-lock-type-face) 78 79 (fontified t face font-lock-type-face) 79 80 (fontified t face font-lock-type-face) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t face font-lock-variable-name-face) 83 84 (fontified t face font-lock-variable-name-face) 84 85 (fontified t face font-lock-variable-name-face) 85 86 (fontified t face font-lock-variable-name-face) 86 87 (rear-nonsticky t fontified t face font-lock-variable-name-face) 87 88 (fontified t)) . 6282) (undo-tree-id12303 . -38) (undo-tree-id12304 . -38) (undo-tree-id12305 . -65) (undo-tree-id12306 . -76) (undo-tree-id12307 . -76) (undo-tree-id12308 . -88) (undo-tree-id12309 . -88) (undo-tree-id12310 . -37) (undo-tree-id12311 . -37) (undo-tree-id12312 . -37) (undo-tree-id12313 . -88) (undo-tree-id12314 . -38) (undo-tree-id12315 . -88) 6370 (t 25557 6582 874614 921000)) nil (25557 6587 541659 774000) 0 nil])
([nil nil ((6320 . 6322) (nil rear-nonsticky nil 6369 . 6370) (nil fontified nil 6369 . 6370) (nil fontified nil 6368 . 6369) (nil fontified nil 6367 . 6368) (nil fontified nil 6366 . 6367) (nil fontified nil 6365 . 6366) (nil fontified nil 6364 . 6365) (nil fontified nil 6363 . 6364) (nil fontified nil 6362 . 6363) (nil fontified nil 6361 . 6362) (nil fontified nil 6360 . 6361) (nil fontified nil 6359 . 6360) (nil fontified nil 6358 . 6359) (nil fontified nil 6357 . 6358) (nil fontified nil 6356 . 6357) (nil fontified nil 6355 . 6356) (nil fontified nil 6354 . 6355) (nil fontified nil 6353 . 6354) (nil fontified nil 6352 . 6353) (nil fontified nil 6351 . 6352) (nil fontified nil 6350 . 6351) (nil fontified nil 6349 . 6350) (nil fontified nil 6348 . 6349) (nil fontified nil 6347 . 6348) (nil fontified nil 6346 . 6347) (nil fontified nil 6345 . 6346) (nil fontified nil 6344 . 6345) (nil fontified nil 6343 . 6344) (nil fontified nil 6342 . 6343) (nil fontified nil 6341 . 6342) (nil fontified nil 6340 . 6341) (nil fontified nil 6339 . 6340) (nil fontified nil 6338 . 6339) (nil fontified nil 6337 . 6338) (nil fontified nil 6336 . 6337) (nil fontified nil 6335 . 6336) (nil fontified nil 6334 . 6335) (nil fontified nil 6333 . 6334) (nil fontified nil 6332 . 6333) (nil fontified nil 6331 . 6332) (nil fontified nil 6330 . 6331) (nil fontified nil 6329 . 6330) (nil fontified nil 6328 . 6329) (nil fontified nil 6327 . 6328) (nil fontified nil 6326 . 6327) (nil fontified nil 6325 . 6326) (nil fontified nil 6324 . 6325) (nil fontified nil 6323 . 6324) (nil fontified nil 6322 . 6323) (nil fontified nil 6321 . 6322) (nil fontified nil 6320 . 6321) (nil fontified nil 6319 . 6320) (nil fontified nil 6318 . 6319) (nil fontified nil 6317 . 6318) (nil fontified nil 6316 . 6317) (nil fontified nil 6315 . 6316) (nil fontified nil 6314 . 6315) (nil fontified nil 6313 . 6314) (nil fontified nil 6312 . 6313) (nil fontified nil 6311 . 6312) (nil fontified nil 6310 . 6311) (nil fontified nil 6309 . 6310) (nil fontified nil 6308 . 6309) (nil fontified nil 6307 . 6308) (nil fontified nil 6306 . 6307) (nil fontified nil 6305 . 6306) (nil fontified nil 6304 . 6305) (nil fontified nil 6303 . 6304) (nil fontified nil 6302 . 6303) (nil fontified nil 6301 . 6302) (nil fontified nil 6300 . 6301) (nil fontified nil 6299 . 6300) (nil fontified nil 6298 . 6299) (nil fontified nil 6297 . 6298) (nil fontified nil 6296 . 6297) (nil fontified nil 6295 . 6296) (nil fontified nil 6294 . 6295) (nil fontified nil 6293 . 6294) (nil fontified nil 6292 . 6293) (nil fontified nil 6291 . 6292) (nil fontified nil 6290 . 6291) (nil fontified nil 6289 . 6290) (nil fontified nil 6287 . 6289) (nil fontified nil 6283 . 6287) (nil fontified nil 6282 . 6283) (6282 . 6370)) nil (25557 6587 541647 281000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -6320) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -6321) (undo-tree-id12302 . -1) 6322) nil (25557 6587 541630 901000) 0 nil])
([nil nil ((5962 . 5964) (t 25557 6587 626595 827000)) nil (25557 6594 246197 800000) 0 nil])
([nil nil ((6001 . 6003) (nil rear-nonsticky nil 6050 . 6051) (nil fontified nil 6050 . 6051) (nil fontified nil 6049 . 6050) (nil fontified nil 6048 . 6049) (nil fontified nil 6047 . 6048) (nil fontified nil 6046 . 6047) (nil fontified nil 6045 . 6046) (nil fontified nil 6044 . 6045) (nil fontified nil 6043 . 6044) (nil fontified nil 6042 . 6043) (nil fontified nil 6041 . 6042) (nil fontified nil 6040 . 6041) (nil fontified nil 6039 . 6040) (nil fontified nil 6038 . 6039) (nil fontified nil 6037 . 6038) (nil fontified nil 6036 . 6037) (nil fontified nil 6035 . 6036) (nil fontified nil 6034 . 6035) (nil fontified nil 6033 . 6034) (nil fontified nil 6032 . 6033) (nil fontified nil 6031 . 6032) (nil fontified nil 6030 . 6031) (nil fontified nil 6029 . 6030) (nil fontified nil 6028 . 6029) (nil fontified nil 6027 . 6028) (nil fontified nil 6026 . 6027) (nil fontified nil 6025 . 6026) (nil fontified nil 6024 . 6025) (nil fontified nil 6023 . 6024) (nil fontified nil 6022 . 6023) (nil fontified nil 6021 . 6022) (nil fontified nil 6020 . 6021) (nil fontified nil 6019 . 6020) (nil fontified nil 6018 . 6019) (nil fontified nil 6017 . 6018) (nil fontified nil 6016 . 6017) (nil fontified nil 6015 . 6016) (nil fontified nil 6014 . 6015) (nil fontified nil 6013 . 6014) (nil fontified nil 6012 . 6013) (nil fontified nil 6011 . 6012) (nil fontified nil 6010 . 6011) (nil fontified nil 6009 . 6010) (nil fontified nil 6008 . 6009) (nil fontified nil 6007 . 6008) (nil fontified nil 6006 . 6007) (nil fontified nil 6005 . 6006) (nil fontified nil 6004 . 6005) (nil fontified nil 6003 . 6004) (nil fontified nil 6002 . 6003) (nil fontified nil 6001 . 6002) (nil fontified nil 6000 . 6001) (nil fontified nil 5999 . 6000) (nil fontified nil 5998 . 5999) (nil fontified nil 5997 . 5998) (nil fontified nil 5996 . 5997) (nil fontified nil 5995 . 5996) (nil fontified nil 5994 . 5995) (nil fontified nil 5993 . 5994) (nil fontified nil 5992 . 5993) (nil fontified nil 5991 . 5992) (nil fontified nil 5990 . 5991) (nil fontified nil 5989 . 5990) (nil fontified nil 5988 . 5989) (nil fontified nil 5987 . 5988) (nil fontified nil 5986 . 5987) (nil fontified nil 5985 . 5986) (nil fontified nil 5984 . 5985) (nil fontified nil 5983 . 5984) (nil fontified nil 5982 . 5983) (nil fontified nil 5981 . 5982) (nil fontified nil 5980 . 5981) (nil fontified nil 5979 . 5980) (nil fontified nil 5978 . 5979) (nil fontified nil 5977 . 5978) (nil fontified nil 5976 . 5977) (nil fontified nil 5975 . 5976) (nil fontified nil 5974 . 5975) (nil fontified nil 5973 . 5974) (nil fontified nil 5972 . 5973) (nil fontified nil 5971 . 5972) (nil fontified nil 5970 . 5971) (nil fontified nil 5968 . 5970) (nil fontified nil 5964 . 5968) (nil fontified nil 5963 . 5964) (5963 . 6051)) nil (25557 6594 246190 398000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6001) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (#(" " 0 1 (fontified t)) . -6002) (undo-tree-id12318 . -1) 6003 (t 25557 6594 326568 893000)) nil (25557 6595 756867 965000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name)
" 0 1 (fontified t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (rear-nonsticky t fontified t)) . 6372) (undo-tree-id12330 . -37) (t 25557 6595 834562 829000)) nil (25557 6598 899459 303000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6371) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) 6372) nil (25557 6598 899454 17000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name)

int8_t Regex_RegisterGroup(char* name,char* group)

uint64_t Regex_InitGroupTable(uint64_t table_load)" 0 1 (fontified t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (rear-nonsticky t fontified t) 37 38 (fontified t) 38 39 (fontified t face font-lock-type-face) 39 40 (fontified t face font-lock-type-face) 40 41 (fontified t face font-lock-type-face) 41 42 (fontified t face font-lock-type-face) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t c-type c-decl-id-start face font-lock-type-face) 44 45 (fontified t) 45 46 (fontified t face font-lock-function-name-face) 46 47 (fontified t face font-lock-function-name-face) 47 48 (fontified t face font-lock-function-name-face) 48 49 (fontified t face font-lock-function-name-face) 49 50 (fontified t face font-lock-function-name-face) 50 51 (fontified t face font-lock-function-name-face) 51 52 (fontified t face font-lock-function-name-face) 52 53 (fontified t face font-lock-function-name-face) 53 54 (fontified t face font-lock-function-name-face) 54 55 (fontified t face font-lock-function-name-face) 55 56 (fontified t face font-lock-function-name-face) 56 57 (fontified t face font-lock-function-name-face) 57 58 (fontified t face font-lock-function-name-face) 58 59 (fontified t face font-lock-function-name-face) 59 60 (fontified t face font-lock-function-name-face) 60 61 (fontified t face font-lock-function-name-face) 61 62 (fontified t face font-lock-function-name-face) 62 63 (fontified t face font-lock-function-name-face) 63 64 (fontified t face font-lock-function-name-face) 64 65 (fontified t c-type c-decl-arg-start) 65 66 (fontified t face font-lock-type-face) 66 67 (fontified t face font-lock-type-face) 67 68 (fontified t face font-lock-type-face) 68 69 (fontified t face font-lock-type-face) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t face font-lock-variable-name-face) 72 73 (fontified t face font-lock-variable-name-face) 73 74 (fontified t face font-lock-variable-name-face) 74 75 (fontified t face font-lock-variable-name-face) 75 76 (fontified t c-type c-decl-arg-start) 76 77 (fontified t face font-lock-type-face) 77 78 (fontified t face font-lock-type-face) 78 79 (fontified t face font-lock-type-face) 79 80 (fontified t face font-lock-type-face) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t face font-lock-variable-name-face) 83 84 (fontified t face font-lock-variable-name-face) 84 85 (fontified t face font-lock-variable-name-face) 85 86 (fontified t face font-lock-variable-name-face) 86 87 (rear-nonsticky t fontified t face font-lock-variable-name-face) 87 88 (fontified t rear-nonsticky t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t face font-lock-type-face) 91 92 (fontified t face font-lock-type-face) 92 93 (fontified t face font-lock-type-face) 93 94 (fontified t face font-lock-type-face) 94 95 (fontified t face font-lock-type-face) 95 96 (fontified t face font-lock-type-face) 96 97 (fontified t face font-lock-type-face) 97 98 (fontified t c-type c-decl-id-start face font-lock-type-face) 98 99 (fontified t) 99 100 (fontified t face font-lock-function-name-face) 100 101 (fontified t face font-lock-function-name-face) 101 102 (fontified t face font-lock-function-name-face) 102 103 (fontified t face font-lock-function-name-face) 103 104 (fontified t face font-lock-function-name-face) 104 105 (fontified t face font-lock-function-name-face) 105 106 (fontified t face font-lock-function-name-face) 106 107 (fontified t face font-lock-function-name-face) 107 108 (fontified t face font-lock-function-name-face) 108 109 (fontified t face font-lock-function-name-face) 109 110 (fontified t face font-lock-function-name-face) 110 111 (fontified t face font-lock-function-name-face) 111 112 (fontified t face font-lock-function-name-face) 112 113 (fontified t face font-lock-function-name-face) 113 114 (fontified t face font-lock-function-name-face) 114 115 (fontified t face font-lock-function-name-face) 115 116 (fontified t face font-lock-function-name-face) 116 117 (fontified t face font-lock-function-name-face) 117 118 (fontified t face font-lock-function-name-face) 118 119 (fontified t face font-lock-function-name-face) 119 120 (fontified t c-type c-decl-arg-start) 120 128 (fontified t face font-lock-type-face) 128 129 (fontified t) 129 130 (fontified t face font-lock-variable-name-face) 130 131 (fontified t face font-lock-variable-name-face) 131 132 (fontified t face font-lock-variable-name-face) 132 133 (fontified t face font-lock-variable-name-face) 133 134 (fontified t face font-lock-variable-name-face) 134 135 (fontified t face font-lock-variable-name-face) 135 136 (fontified t face font-lock-variable-name-face) 136 137 (fontified t face font-lock-variable-name-face) 137 138 (fontified t face font-lock-variable-name-face) 138 139 (fontified t face font-lock-variable-name-face) 139 140 (fontified t)) . 5963) (undo-tree-id12331 . -90) (undo-tree-id12332 . -120) (undo-tree-id12333 . -129) (undo-tree-id12334 . -90) (undo-tree-id12335 . -120) (undo-tree-id12336 . -140) (undo-tree-id12337 . -140) (undo-tree-id12338 . -89) (undo-tree-id12339 . -140) (undo-tree-id12340 . -90) (undo-tree-id12341 . -140) 6103 (t 25557 6598 970550 218000)) nil (25557 6613 175210 806000) 0 nil])
([nil nil ((6055 . 6057) (6001 . 6003) (nil rear-nonsticky nil 6102 . 6103) (nil fontified nil 6102 . 6103) (nil fontified nil 6101 . 6102) (nil fontified nil 6100 . 6101) (nil fontified nil 6099 . 6100) (nil fontified nil 6098 . 6099) (nil fontified nil 6097 . 6098) (nil fontified nil 6096 . 6097) (nil fontified nil 6095 . 6096) (nil fontified nil 6094 . 6095) (nil fontified nil 6093 . 6094) (nil fontified nil 6092 . 6093) (nil fontified nil 6091 . 6092) (nil fontified nil 6083 . 6091) (nil fontified nil 6082 . 6083) (nil fontified nil 6081 . 6082) (nil fontified nil 6080 . 6081) (nil fontified nil 6079 . 6080) (nil fontified nil 6078 . 6079) (nil fontified nil 6077 . 6078) (nil fontified nil 6076 . 6077) (nil fontified nil 6075 . 6076) (nil fontified nil 6074 . 6075) (nil fontified nil 6073 . 6074) (nil fontified nil 6072 . 6073) (nil fontified nil 6071 . 6072) (nil fontified nil 6070 . 6071) (nil fontified nil 6069 . 6070) (nil fontified nil 6068 . 6069) (nil fontified nil 6067 . 6068) (nil fontified nil 6066 . 6067) (nil fontified nil 6065 . 6066) (nil fontified nil 6064 . 6065) (nil fontified nil 6063 . 6064) (nil fontified nil 6062 . 6063) (nil fontified nil 6061 . 6062) (nil fontified nil 6060 . 6061) (nil fontified nil 6059 . 6060) (nil fontified nil 6058 . 6059) (nil fontified nil 6057 . 6058) (nil fontified nil 6056 . 6057) (nil fontified nil 6055 . 6056) (nil fontified nil 6054 . 6055) (nil fontified nil 6053 . 6054) (nil fontified nil 6052 . 6053) (nil fontified nil 6051 . 6052) (nil fontified nil 6050 . 6051) (nil fontified nil 6049 . 6050) (nil fontified nil 6048 . 6049) (nil fontified nil 6047 . 6048) (nil fontified nil 6046 . 6047) (nil fontified nil 6045 . 6046) (nil fontified nil 6044 . 6045) (nil fontified nil 6043 . 6044) (nil fontified nil 6042 . 6043) (nil fontified nil 6041 . 6042) (nil fontified nil 6040 . 6041) (nil fontified nil 6039 . 6040) (nil fontified nil 6038 . 6039) (nil fontified nil 6037 . 6038) (nil fontified nil 6036 . 6037) (nil fontified nil 6035 . 6036) (nil fontified nil 6034 . 6035) (nil fontified nil 6033 . 6034) (nil fontified nil 6032 . 6033) (nil fontified nil 6031 . 6032) (nil fontified nil 6030 . 6031) (nil fontified nil 6029 . 6030) (nil fontified nil 6028 . 6029) (nil fontified nil 6027 . 6028) (nil fontified nil 6026 . 6027) (nil fontified nil 6025 . 6026) (nil fontified nil 6024 . 6025) (nil fontified nil 6023 . 6024) (nil fontified nil 6022 . 6023) (nil fontified nil 6021 . 6022) (nil fontified nil 6020 . 6021) (nil fontified nil 6019 . 6020) (nil fontified nil 6018 . 6019) (nil fontified nil 6017 . 6018) (nil fontified nil 6016 . 6017) (nil fontified nil 6015 . 6016) (nil fontified nil 6014 . 6015) (nil fontified nil 6013 . 6014) (nil fontified nil 6012 . 6013) (nil fontified nil 6011 . 6012) (nil fontified nil 6010 . 6011) (nil fontified nil 6009 . 6010) (nil fontified nil 6008 . 6009) (nil fontified nil 6007 . 6008) (nil fontified nil 6006 . 6007) (nil fontified nil 6005 . 6006) (nil fontified nil 6004 . 6005) (nil fontified nil 6003 . 6004) (nil fontified nil 6002 . 6003) (nil fontified nil 6001 . 6002) (nil fontified nil 6000 . 6001) (nil fontified nil 5999 . 6000) (nil fontified nil 5998 . 5999) (nil fontified nil 5997 . 5998) (nil fontified nil 5996 . 5997) (nil fontified nil 5995 . 5996) (nil fontified nil 5994 . 5995) (nil fontified nil 5993 . 5994) (nil fontified nil 5992 . 5993) (nil fontified nil 5991 . 5992) (nil fontified nil 5990 . 5991) (nil fontified nil 5989 . 5990) (nil fontified nil 5988 . 5989) (nil fontified nil 5987 . 5988) (nil fontified nil 5986 . 5987) (nil fontified nil 5985 . 5986) (nil fontified nil 5984 . 5985) (nil fontified nil 5983 . 5984) (nil fontified nil 5982 . 5983) (nil fontified nil 5981 . 5982) (nil fontified nil 5980 . 5981) (nil fontified nil 5979 . 5980) (nil fontified nil 5978 . 5979) (nil fontified nil 5977 . 5978) (nil fontified nil 5976 . 5977) (nil fontified nil 5975 . 5976) (nil fontified nil 5974 . 5975) (nil fontified nil 5973 . 5974) (nil fontified nil 5972 . 5973) (nil fontified nil 5971 . 5972) (nil fontified nil 5970 . 5971) (nil fontified nil 5968 . 5970) (nil fontified nil 5964 . 5968) (nil fontified nil 5963 . 5964) (5963 . 6103)) nil (25557 6613 175190 955000) 0 nil])
([nil nil ((1761 . 1762)) nil (25557 6613 175171 443000) 0 nil])
([nil nil ((1854 . 1856) (1800 . 1802) (nil rear-nonsticky nil 1901 . 1902) (nil fontified nil 1901 . 1902) (nil fontified nil 1900 . 1901) (nil fontified nil 1899 . 1900) (nil fontified nil 1898 . 1899) (nil fontified nil 1897 . 1898) (nil fontified nil 1896 . 1897) (nil fontified nil 1895 . 1896) (nil fontified nil 1894 . 1895) (nil fontified nil 1893 . 1894) (nil fontified nil 1892 . 1893) (nil fontified nil 1891 . 1892) (nil fontified nil 1890 . 1891) (nil fontified nil 1882 . 1890) (nil fontified nil 1881 . 1882) (nil fontified nil 1880 . 1881) (nil fontified nil 1879 . 1880) (nil fontified nil 1878 . 1879) (nil fontified nil 1877 . 1878) (nil fontified nil 1876 . 1877) (nil fontified nil 1875 . 1876) (nil fontified nil 1874 . 1875) (nil fontified nil 1873 . 1874) (nil fontified nil 1872 . 1873) (nil fontified nil 1871 . 1872) (nil fontified nil 1870 . 1871) (nil fontified nil 1869 . 1870) (nil fontified nil 1868 . 1869) (nil fontified nil 1867 . 1868) (nil fontified nil 1866 . 1867) (nil fontified nil 1865 . 1866) (nil fontified nil 1864 . 1865) (nil fontified nil 1863 . 1864) (nil fontified nil 1862 . 1863) (nil fontified nil 1861 . 1862) (nil fontified nil 1860 . 1861) (nil fontified nil 1859 . 1860) (nil fontified nil 1858 . 1859) (nil fontified nil 1857 . 1858) (nil fontified nil 1856 . 1857) (nil fontified nil 1855 . 1856) (nil fontified nil 1854 . 1855) (nil fontified nil 1853 . 1854) (nil fontified nil 1852 . 1853) (nil fontified nil 1851 . 1852) (nil fontified nil 1850 . 1851) (nil fontified nil 1849 . 1850) (nil fontified nil 1848 . 1849) (nil fontified nil 1847 . 1848) (nil fontified nil 1846 . 1847) (nil fontified nil 1845 . 1846) (nil fontified nil 1844 . 1845) (nil fontified nil 1843 . 1844) (nil fontified nil 1842 . 1843) (nil fontified nil 1841 . 1842) (nil fontified nil 1840 . 1841) (nil fontified nil 1839 . 1840) (nil fontified nil 1838 . 1839) (nil fontified nil 1837 . 1838) (nil fontified nil 1836 . 1837) (nil fontified nil 1835 . 1836) (nil fontified nil 1834 . 1835) (nil fontified nil 1833 . 1834) (nil fontified nil 1832 . 1833) (nil fontified nil 1831 . 1832) (nil fontified nil 1830 . 1831) (nil fontified nil 1829 . 1830) (nil fontified nil 1828 . 1829) (nil fontified nil 1827 . 1828) (nil fontified nil 1826 . 1827) (nil fontified nil 1825 . 1826) (nil fontified nil 1824 . 1825) (nil fontified nil 1823 . 1824) (nil fontified nil 1822 . 1823) (nil fontified nil 1821 . 1822) (nil fontified nil 1820 . 1821) (nil fontified nil 1819 . 1820) (nil fontified nil 1818 . 1819) (nil fontified nil 1817 . 1818) (nil fontified nil 1816 . 1817) (nil fontified nil 1815 . 1816) (nil fontified nil 1814 . 1815) (nil fontified nil 1813 . 1814) (nil fontified nil 1812 . 1813) (nil fontified nil 1811 . 1812) (nil fontified nil 1810 . 1811) (nil fontified nil 1809 . 1810) (nil fontified nil 1808 . 1809) (nil fontified nil 1807 . 1808) (nil fontified nil 1806 . 1807) (nil fontified nil 1805 . 1806) (nil fontified nil 1804 . 1805) (nil fontified nil 1803 . 1804) (nil fontified nil 1802 . 1803) (nil fontified nil 1801 . 1802) (nil fontified nil 1800 . 1801) (nil fontified nil 1799 . 1800) (nil fontified nil 1798 . 1799) (nil fontified nil 1797 . 1798) (nil fontified nil 1796 . 1797) (nil fontified nil 1795 . 1796) (nil fontified nil 1794 . 1795) (nil fontified nil 1793 . 1794) (nil fontified nil 1792 . 1793) (nil fontified nil 1791 . 1792) (nil fontified nil 1790 . 1791) (nil fontified nil 1789 . 1790) (nil fontified nil 1788 . 1789) (nil fontified nil 1787 . 1788) (nil fontified nil 1786 . 1787) (nil fontified nil 1785 . 1786) (nil fontified nil 1784 . 1785) (nil fontified nil 1783 . 1784) (nil fontified nil 1782 . 1783) (nil fontified nil 1781 . 1782) (nil fontified nil 1780 . 1781) (nil fontified nil 1779 . 1780) (nil fontified nil 1778 . 1779) (nil fontified nil 1777 . 1778) (nil fontified nil 1776 . 1777) (nil fontified nil 1775 . 1776) (nil fontified nil 1774 . 1775) (nil fontified nil 1773 . 1774) (nil fontified nil 1772 . 1773) (nil fontified nil 1771 . 1772) (nil fontified nil 1770 . 1771) (nil fontified nil 1769 . 1770) (nil fontified nil 1767 . 1769) (nil fontified nil 1763 . 1767) (nil fontified nil 1762 . 1763) (1762 . 1902)) nil (25557 6613 175162 735000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1800) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (#(" " 0 1 (fontified t)) . -1801) (undo-tree-id12344 . -1) 1802 (t 25557 6613 258492 702000)) nil (25557 6616 246260 754000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1852) (#(" " 0 1 (fontified t)) . 1852)) nil (25557 6616 246245 689000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name)

  int8_t Regex_RegisterGroup(char* name,char* group)
" 0 1 (fontified t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t face font-lock-type-face) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t) 36 37 (rear-nonsticky t fontified t) 37 40 (fontified t) 40 41 (fontified t face font-lock-type-face) 41 42 (fontified t face font-lock-type-face) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t face font-lock-type-face) 44 45 (fontified t face font-lock-type-face) 45 46 (fontified t c-type c-decl-id-start face font-lock-type-face) 46 47 (fontified t) 47 48 (fontified t face font-lock-function-name-face) 48 49 (fontified t face font-lock-function-name-face) 49 50 (fontified t face font-lock-function-name-face) 50 51 (fontified t face font-lock-function-name-face) 51 52 (fontified t face font-lock-function-name-face) 52 53 (fontified t face font-lock-function-name-face) 53 54 (fontified t face font-lock-function-name-face) 54 55 (fontified t face font-lock-function-name-face) 55 56 (fontified t face font-lock-function-name-face) 56 57 (fontified t face font-lock-function-name-face) 57 58 (fontified t face font-lock-function-name-face) 58 59 (fontified t face font-lock-function-name-face) 59 60 (fontified t face font-lock-function-name-face) 60 61 (fontified t face font-lock-function-name-face) 61 62 (fontified t face font-lock-function-name-face) 62 63 (fontified t face font-lock-function-name-face) 63 64 (fontified t face font-lock-function-name-face) 64 65 (fontified t face font-lock-function-name-face) 65 66 (fontified t face font-lock-function-name-face) 66 67 (fontified t c-type c-decl-arg-start) 67 68 (fontified t face font-lock-type-face) 68 69 (fontified t face font-lock-type-face) 69 70 (fontified t face font-lock-type-face) 70 71 (fontified t face font-lock-type-face) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t face font-lock-variable-name-face) 74 75 (fontified t face font-lock-variable-name-face) 75 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t face font-lock-variable-name-face) 77 78 (fontified t c-type c-decl-arg-start) 78 79 (fontified t face font-lock-type-face) 79 80 (fontified t face font-lock-type-face) 80 81 (fontified t face font-lock-type-face) 81 82 (fontified t face font-lock-type-face) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t face font-lock-variable-name-face) 85 86 (fontified t face font-lock-variable-name-face) 86 87 (fontified t face font-lock-variable-name-face) 87 88 (fontified t face font-lock-variable-name-face) 88 89 (rear-nonsticky t fontified t face font-lock-variable-name-face) 89 90 (rear-nonsticky t fontified t) 90 91 (fontified t)) . -6104) (undo-tree-id12345 . -91) (undo-tree-id12346 . -91) (undo-tree-id12347 . -91) 6142 (t 25557 6616 318480 374000)) nil (25557 6621 682624 231000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 6105) (undo-tree-id12348 . -1) (#(" " 0 1 (fontified t)) . 6105) (t 25557 6621 782458 359000)) nil (25557 6623 361752 712000) 0 nil])
([nil nil ((1902 . 1903) (t 25557 6623 438451 683000)) nil (25557 6639 440002 903000) 0 nil])
([nil nil ((1850 . 1851)) nil (25557 6639 440001 215000) 0 nil])
([nil nil ((1798 . 1799)) nil (25557 6639 439996 416000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6173) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (#("t" 0 1 (fontified t)) . -6174) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (#("a" 0 1 (fontified t)) . -6175) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (#("b" 0 1 (fontified t)) . -6176) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (#("l" 0 1 (fontified t)) . -6177) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (#("e" 0 1 (fontified t)) . -6178) (undo-tree-id12380 . -1) 6179 (t 25557 6639 530386 763000)) nil (25557 6705 804201 287000) 0 nil])
([nil nil ((6233 . 6238) (t 25557 6705 874118 226000)) nil (25557 6720 479245 790000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6233) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6234) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6235) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6236) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6237) (undo-tree-id12403 . -1) 6238) nil (25557 6720 479240 636000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -6138) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (#("i" 0 1 (fontified t)) . -6139) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (#("n" 0 1 (fontified t)) . -6140) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (#("t" 0 1 (fontified t)) . -6141) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (#("6" 0 1 (fontified t)) . -6142) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (#("4" 0 1 (fontified t)) . -6143) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (#("_" 0 1 (fontified t)) . -6144) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -6145) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (#(" " 0 1 (fontified t)) . -6146) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -6147) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -6148) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (#("b" 0 1 (fontified t face font-lock-variable-name-face)) . -6149) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -6150) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -6151) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) (undo-tree-id12604 . -1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -6152) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -6153) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1) (undo-tree-id12617 . -1) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -6154) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -6155) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -6156) (undo-tree-id12629 . -1) 6157 (t 25557 6720 558058 606000)) nil (25557 6729 386711 299000) 0 nil])
([nil nil ((295 . 296) (t 25557 6729 470022 390000)) nil (25557 6749 545620 232000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t ws-butler-chg chg)) . -295) (undo-tree-id12656 . -1) 296) nil (25557 6749 545618 995000) 0 nil])
([nil nil ((295 . 296)) nil (25557 6749 545616 920000) 0 nil])
([nil nil ((296 . 297)) nil (25557 6749 545616 324000) 0 nil])
([nil nil ((297 . 307)) nil (25557 6749 545615 544000) 0 nil])
([nil nil ((307 . 311)) nil (25557 6749 545614 810000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -304) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -305) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (#("X" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -306) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -307) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) (#("T" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -308) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -309) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (#("B" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -310) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) 311) nil (25557 6749 545612 638000) 0 nil])
([nil nil ((304 . 312)) nil (25557 6749 545599 568000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -311) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) 312) nil (25557 6749 545598 406000) 0 nil])
([nil nil ((311 . 315)) nil (25557 6749 545595 697000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -312) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -313) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (#("F" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -314) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) 315) nil (25557 6749 545594 308000) 0 nil])
([nil nil ((312 . 317)) nil (25557 6749 545588 530000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -315) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -316) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) 317) nil (25557 6749 545586 252000) 0 nil])
([nil nil ((315 . 318)) nil (25557 6749 545546 972000) 0 nil])
([nil nil ((318 . 322)) nil (25557 6749 545542 538000) 0 nil])
([nil nil ((322 . 327) (t 25557 6749 617940 434000)) nil (25557 6771 675650 137000) 0 nil])
([nil nil ((327 . 328)) nil (25557 6771 675649 310000) 0 nil])
([nil nil ((329 . 330)) nil (25557 6771 675648 730000) 0 nil])
([nil nil ((329 . 330)) nil (25557 6771 675648 45000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t c-is-sws t ws-butler-chg chg face font-lock-warning-face)) . -329) (undo-tree-id12675 . -1) 330) nil (25557 6771 675647 137000) 0 nil])
([nil nil ((329 . 330)) nil (25557 6771 675645 704000) 0 nil])
([nil nil ((330 . 333)) nil (25557 6771 675645 94000) 0 nil])
([nil nil ((333 . 341)) nil (25557 6771 675644 326000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -337) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -338) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (#("F" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -339) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -340) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) 341) nil (25557 6771 675642 854000) 0 nil])
([nil nil ((337 . 339)) nil (25557 6771 675634 809000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -337) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (#("D" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -338) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) 339) nil (25557 6771 675633 749000) 0 nil])
([nil nil ((337 . 340)) nil (25557 6771 675629 469000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -337) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -338) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (#("F" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-variable-name-face)) . -339) (undo-tree-id12661 . -1) (undo-tree-id12662 . -1) 340) nil (25557 6771 675627 517000) 0 nil])
([nil nil ((337 . 342)) nil (25557 6771 675614 435000) 0 nil])
([nil nil ((342 . 353)) nil (25557 6771 675609 977000) 0 nil])
([nil nil ((353 . 359) (t 25557 6771 753850 263000)) nil (25557 6776 956384 761000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -358) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) 359) nil (25557 6776 956383 386000) 0 nil])
([nil nil ((358 . 361)) nil (25557 6776 956380 192000) 0 nil])
([nil nil ((361 . 362)) nil (25557 6776 956379 50000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t c-in-sws t)) . -327) (undo-tree-id12679 . -1) 328) nil (25557 6776 956377 319000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -360) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) 361) nil (25557 6776 956360 185000) 0 nil])
([nil nil ((#("#define MAX_GROUP_LENGTH    1024
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face) 2 3 (fontified t c-in-sws t face font-lock-preprocessor-face) 3 4 (fontified t c-in-sws t face font-lock-preprocessor-face) 4 5 (fontified t c-in-sws t face font-lock-preprocessor-face) 5 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t) 8 9 (fontified t c-in-sws t face font-lock-variable-name-face) 9 10 (fontified t c-in-sws t face font-lock-variable-name-face) 10 11 (fontified t c-in-sws t face font-lock-variable-name-face) 11 12 (fontified t c-in-sws t face font-lock-variable-name-face) 12 13 (fontified t c-in-sws t face font-lock-variable-name-face) 13 14 (fontified t c-in-sws t face font-lock-variable-name-face) 14 15 (fontified t c-in-sws t face font-lock-variable-name-face) 15 16 (fontified t c-in-sws t face font-lock-variable-name-face) 16 17 (fontified t c-in-sws t face font-lock-variable-name-face) 17 18 (fontified t c-in-sws t face font-lock-variable-name-face) 18 19 (fontified t c-in-sws t face font-lock-variable-name-face) 19 20 (fontified t c-in-sws t face font-lock-variable-name-face) 20 21 (fontified t c-in-sws t face font-lock-variable-name-face) 21 22 (fontified t c-in-sws t face font-lock-variable-name-face) 22 23 (fontified t c-in-sws t face font-lock-variable-name-face) 23 24 (fontified t c-in-sws t face font-lock-variable-name-face) 24 25 (fontified t c-in-sws t) 25 26 (fontified t c-in-sws t) 26 27 (fontified t c-in-sws t) 27 28 (fontified t c-in-sws t) 28 29 (fontified t c-in-sws t) 29 30 (fontified t c-in-sws t) 30 31 (fontified t c-in-sws t) 31 32 (fontified t c-in-sws t) 32 33 (fontified t c-in-sws t)) . 328) (undo-tree-id12682 . -32) (undo-tree-id12683 . -8) (undo-tree-id12684 . -24) (undo-tree-id12685 . -32) (undo-tree-id12686 . -32) (undo-tree-id12687 . -32) (undo-tree-id12688 . -32) (undo-tree-id12689 . -32) (undo-tree-id12690 . -32) (undo-tree-id12691 . -32) (undo-tree-id12692 . -33) (t 25557 6777 45828 688000)) nil (25557 6784 975548 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 360 . 361) (nil fontified nil 360 . 361) (nil fontified nil 359 . 360) (nil fontified nil 358 . 359) (nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 355 . 356) (nil fontified nil 354 . 355) (nil fontified nil 353 . 354) (nil fontified nil 352 . 353) (nil fontified nil 351 . 352) (nil fontified nil 350 . 351) (nil fontified nil 349 . 350) (nil fontified nil 348 . 349) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 345 . 346) (nil fontified nil 344 . 345) (nil fontified nil 343 . 344) (nil fontified nil 342 . 343) (nil fontified nil 341 . 342) (nil fontified nil 340 . 341) (nil fontified nil 339 . 340) (nil fontified nil 338 . 339) (nil fontified nil 337 . 338) (nil fontified nil 336 . 337) (nil fontified nil 335 . 336) (nil fontified nil 334 . 335) (nil fontified nil 333 . 334) (nil fontified nil 332 . 333) (nil fontified nil 331 . 332) (nil fontified nil 330 . 331) (nil fontified nil 329 . 330) (nil fontified nil 328 . 329) (328 . 361)) nil (25557 6784 975533 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 393 . 394) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 391 . 392) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 386 . 387) (nil fontified nil 385 . 386) (nil fontified nil 384 . 385) (nil fontified nil 383 . 384) (nil fontified nil 382 . 383) (nil fontified nil 381 . 382) (nil fontified nil 380 . 381) (nil fontified nil 379 . 380) (nil fontified nil 378 . 379) (nil fontified nil 377 . 378) (nil fontified nil 376 . 377) (nil fontified nil 375 . 376) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 368 . 369) (nil fontified nil 367 . 368) (nil fontified nil 366 . 367) (nil fontified nil 365 . 366) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (nil fontified nil 361 . 362) (361 . 394)) nil (25557 6784 975510 473000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t c-in-sws t face font-lock-variable-name-face)) . -379) (undo-tree-id12693 . -1) (#("E" 0 1 (fontified t c-in-sws t face font-lock-variable-name-face)) . -380) (undo-tree-id12694 . -1) (#("N" 0 1 (fontified t c-in-sws t face font-lock-variable-name-face)) . -381) (undo-tree-id12695 . -1) (#("G" 0 1 (fontified t c-in-sws t face font-lock-variable-name-face)) . -382) (undo-tree-id12696 . -1) (#("T" 0 1 (fontified t c-in-sws t face font-lock-variable-name-face)) . -383) (undo-tree-id12697 . -1) (#("H" 0 1 (c-in-sws t fontified t face font-lock-variable-name-face)) . -384) (undo-tree-id12698 . -1) 385 (t 25557 6785 57796 14000)) nil (25557 6790 225526 284000) 0 nil])
([nil nil ((379 . 383)) nil (25557 6790 225508 440000) 0 nil])
([nil nil ((387 . 392) (t 25557 6790 333774 479000)) nil (25557 6794 528641 311000) 0 nil])
([nil nil ((#("1024" 0 1 (fontified t c-in-sws t) 1 2 (fontified t c-in-sws t) 2 3 (fontified t c-in-sws t) 3 4 (fontified t c-in-sws t)) . 392) (undo-tree-id12699 . -4) (undo-tree-id12700 . -4) (undo-tree-id12701 . -4)) nil (25557 6794 528637 111000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Utils
" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t face font-lock-comment-face fontified t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t face font-lock-comment-face fontified t) 17 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face font-lock-comment-face fontified t) 19 20 (c-in-sws t face font-lock-comment-face fontified t) 20 21 (c-in-sws t face font-lock-comment-face fontified t) 21 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face font-lock-comment-face fontified t) 24 25 (c-in-sws t face font-lock-comment-face fontified t) 25 26 (c-in-sws t face font-lock-comment-face fontified t) 26 27 (c-in-sws t face font-lock-comment-face fontified t) 27 28 (c-in-sws t face font-lock-comment-face fontified t) 28 29 (c-in-sws t face font-lock-comment-face fontified t) 29 30 (c-in-sws t face font-lock-comment-face fontified t) 30 31 (c-in-sws t face font-lock-comment-face fontified t) 31 32 (c-in-sws t face font-lock-comment-face fontified t) 32 33 (c-in-sws t face font-lock-comment-face fontified t) 33 34 (c-in-sws t face font-lock-comment-face fontified t) 34 35 (c-in-sws t face font-lock-comment-face fontified t) 35 36 (c-in-sws t face font-lock-comment-face fontified t) 36 37 (c-in-sws t face font-lock-comment-face fontified t) 37 38 (c-in-sws t face font-lock-comment-face fontified t) 38 39 (c-in-sws t face font-lock-comment-face fontified t) 39 40 (c-in-sws t face font-lock-comment-face fontified t) 40 41 (c-in-sws t face font-lock-comment-face fontified t) 41 42 (c-in-sws t face font-lock-comment-face fontified t) 42 43 (c-in-sws t face font-lock-comment-face fontified t) 43 44 (c-in-sws t face font-lock-comment-face fontified t) 44 45 (c-in-sws t face font-lock-comment-face fontified t) 45 46 (c-in-sws t face font-lock-comment-face fontified t) 46 47 (c-in-sws t face font-lock-comment-face fontified t) 47 48 (c-in-sws t face font-lock-comment-face fontified t) 48 49 (c-in-sws t face font-lock-comment-face fontified t) 49 50 (c-in-sws t face font-lock-comment-face fontified t) 50 51 (c-in-sws t face font-lock-comment-face fontified t) 51 52 (c-in-sws t face font-lock-comment-face fontified t) 52 53 (c-in-sws t face font-lock-comment-face fontified t) 53 54 (c-in-sws t face font-lock-comment-face fontified t) 54 55 (c-in-sws t face font-lock-comment-face fontified t) 55 56 (c-in-sws t face font-lock-comment-face fontified t) 56 57 (c-in-sws t face font-lock-comment-face fontified t) 57 58 (c-in-sws t face font-lock-comment-face fontified t) 58 59 (c-in-sws t face font-lock-comment-face fontified t) 59 60 (c-in-sws t face font-lock-comment-face fontified t) 60 61 (c-in-sws t face font-lock-comment-face fontified t) 61 62 (c-in-sws t face font-lock-comment-face fontified t) 62 63 (c-in-sws t face font-lock-comment-face fontified t) 63 64 (c-in-sws t face font-lock-comment-face fontified t) 64 65 (c-in-sws t face font-lock-comment-face fontified t) 65 66 (c-in-sws t face font-lock-comment-face fontified t) 66 67 (c-in-sws t face font-lock-comment-face fontified t) 67 68 (c-in-sws t face font-lock-comment-face fontified t) 68 69 (c-in-sws t face font-lock-comment-face fontified t) 69 70 (c-in-sws t face font-lock-comment-face fontified t) 70 71 (c-in-sws t face font-lock-comment-face fontified t) 71 72 (c-in-sws t face font-lock-comment-face fontified t) 72 73 (c-in-sws t face font-lock-comment-face fontified t) 73 74 (c-in-sws t face font-lock-comment-face fontified t) 74 75 (rear-nonsticky t face font-lock-comment-face fontified t c-in-sws t)) . 5738) (undo-tree-id12702 . -58) (undo-tree-id12703 . -75) (undo-tree-id12704 . -74) (undo-tree-id12705 . -75) (t 25557 6794 605757 39000)) nil (25557 6808 992454 607000) 0 nil])
([nil nil ((nil fontified nil 5812 . 5813) (nil fontified nil 5811 . 5812) (nil fontified nil 5810 . 5811) (nil fontified nil 5809 . 5810) (nil fontified nil 5808 . 5809) (nil fontified nil 5807 . 5808) (nil fontified nil 5806 . 5807) (nil fontified nil 5805 . 5806) (nil fontified nil 5804 . 5805) (nil fontified nil 5803 . 5804) (nil fontified nil 5802 . 5803) (nil fontified nil 5801 . 5802) (nil fontified nil 5800 . 5801) (nil fontified nil 5799 . 5800) (nil fontified nil 5798 . 5799) (nil fontified nil 5797 . 5798) (nil fontified nil 5796 . 5797) (nil fontified nil 5795 . 5796) (nil fontified nil 5794 . 5795) (nil fontified nil 5793 . 5794) (nil fontified nil 5792 . 5793) (nil fontified nil 5791 . 5792) (nil fontified nil 5790 . 5791) (nil fontified nil 5789 . 5790) (nil fontified nil 5788 . 5789) (nil fontified nil 5787 . 5788) (nil fontified nil 5786 . 5787) (nil fontified nil 5785 . 5786) (nil fontified nil 5784 . 5785) (nil fontified nil 5783 . 5784) (nil fontified nil 5782 . 5783) (nil fontified nil 5781 . 5782) (nil fontified nil 5780 . 5781) (nil fontified nil 5779 . 5780) (nil fontified nil 5778 . 5779) (nil fontified nil 5777 . 5778) (nil fontified nil 5776 . 5777) (nil fontified nil 5775 . 5776) (nil fontified nil 5774 . 5775) (nil fontified nil 5773 . 5774) (nil fontified nil 5772 . 5773) (nil fontified nil 5771 . 5772) (nil fontified nil 5770 . 5771) (nil fontified nil 5769 . 5770) (nil fontified nil 5768 . 5769) (nil fontified nil 5767 . 5768) (nil fontified nil 5766 . 5767) (nil fontified nil 5765 . 5766) (nil fontified nil 5764 . 5765) (nil fontified nil 5763 . 5764) (nil fontified nil 5762 . 5763) (nil fontified nil 5761 . 5762) (nil fontified nil 5760 . 5761) (nil fontified nil 5759 . 5760) (nil fontified nil 5758 . 5759) (nil fontified nil 5757 . 5758) (nil fontified nil 5756 . 5757) (nil fontified nil 5755 . 5756) (nil fontified nil 5754 . 5755) (nil fontified nil 5753 . 5754) (nil fontified nil 5752 . 5753) (nil fontified nil 5751 . 5752) (nil fontified nil 5750 . 5751) (nil fontified nil 5749 . 5750) (nil fontified nil 5748 . 5749) (nil fontified nil 5747 . 5748) (nil fontified nil 5746 . 5747) (nil fontified nil 5745 . 5746) (nil fontified nil 5744 . 5745) (nil fontified nil 5743 . 5744) (nil fontified nil 5742 . 5743) (nil fontified nil 5741 . 5742) (nil fontified nil 5740 . 5741) (nil fontified nil 5739 . 5740) (nil fontified nil 5738 . 5739) (5738 . 5813)) nil (25557 6808 992437 392000) 0 nil])
([nil nil ((6204 . 6206) (t 25557 6809 73697 952000)) nil (25557 6811 780762 990000) 0 nil])
([nil nil ((nil fontified nil 6279 . 6280) (nil fontified nil 6278 . 6279) (nil fontified nil 6277 . 6278) (nil fontified nil 6276 . 6277) (nil fontified nil 6275 . 6276) (nil fontified nil 6274 . 6275) (nil fontified nil 6273 . 6274) (nil fontified nil 6272 . 6273) (nil fontified nil 6271 . 6272) (nil fontified nil 6270 . 6271) (nil fontified nil 6269 . 6270) (nil fontified nil 6268 . 6269) (nil fontified nil 6267 . 6268) (nil fontified nil 6266 . 6267) (nil fontified nil 6265 . 6266) (nil fontified nil 6264 . 6265) (nil fontified nil 6263 . 6264) (nil fontified nil 6262 . 6263) (nil fontified nil 6261 . 6262) (nil fontified nil 6260 . 6261) (nil fontified nil 6259 . 6260) (nil fontified nil 6258 . 6259) (nil fontified nil 6257 . 6258) (nil fontified nil 6256 . 6257) (nil fontified nil 6255 . 6256) (nil fontified nil 6254 . 6255) (nil fontified nil 6253 . 6254) (nil fontified nil 6252 . 6253) (nil fontified nil 6251 . 6252) (nil fontified nil 6250 . 6251) (nil fontified nil 6249 . 6250) (nil fontified nil 6248 . 6249) (nil fontified nil 6247 . 6248) (nil fontified nil 6246 . 6247) (nil fontified nil 6245 . 6246) (nil fontified nil 6244 . 6245) (nil fontified nil 6243 . 6244) (nil fontified nil 6242 . 6243) (nil fontified nil 6241 . 6242) (nil fontified nil 6240 . 6241) (nil fontified nil 6239 . 6240) (nil fontified nil 6238 . 6239) (nil fontified nil 6237 . 6238) (nil fontified nil 6236 . 6237) (nil fontified nil 6235 . 6236) (nil fontified nil 6234 . 6235) (nil fontified nil 6233 . 6234) (nil fontified nil 6232 . 6233) (nil fontified nil 6231 . 6232) (nil fontified nil 6230 . 6231) (nil fontified nil 6229 . 6230) (nil fontified nil 6228 . 6229) (nil fontified nil 6227 . 6228) (nil fontified nil 6226 . 6227) (nil fontified nil 6225 . 6226) (nil fontified nil 6224 . 6225) (nil fontified nil 6223 . 6224) (nil fontified nil 6222 . 6223) (nil fontified nil 6221 . 6222) (nil fontified nil 6220 . 6221) (nil fontified nil 6219 . 6220) (nil fontified nil 6218 . 6219) (nil fontified nil 6217 . 6218) (nil fontified nil 6216 . 6217) (nil fontified nil 6215 . 6216) (nil fontified nil 6214 . 6215) (nil fontified nil 6213 . 6214) (nil fontified nil 6212 . 6213) (nil fontified nil 6211 . 6212) (nil fontified nil 6210 . 6211) (nil fontified nil 6209 . 6210) (nil fontified nil 6208 . 6209) (nil fontified nil 6207 . 6208) (nil fontified nil 6206 . 6207) (nil fontified nil 6205 . 6206) (6205 . 6280)) nil (25557 6811 780755 843000) 0 nil])
([nil nil ((#("U" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -6274) (undo-tree-id12714 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -6275) (undo-tree-id12715 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -6276) (undo-tree-id12716 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -6277) (undo-tree-id12717 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -6278) (undo-tree-id12718 . -1) 6279 (t 25557 6811 937686 250000)) nil (25557 6826 462594 281000) 0 nil])
([nil nil ((6274 . 6278)) nil (25557 6826 462587 983000) 0 nil])
([nil nil ((6278 . 6279)) nil (25557 6826 462587 364000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -6275) (undo-tree-id12710 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -6276) (undo-tree-id12711 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -6277) (undo-tree-id12712 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -6278) (undo-tree-id12713 . -1) 6279) nil (25557 6826 462585 972000) 0 nil])
([nil nil ((6275 . 6276)) nil (25557 6826 462581 756000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -6274) (undo-tree-id12708 . -1) (#("G" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -6275) (undo-tree-id12709 . -1) 6276) nil (25557 6826 462580 396000) 0 nil])
([nil nil ((6274 . 6285)) nil (25557 6826 462576 721000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 6284) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) 6285) nil (25557 6826 462572 712000) 0 nil])
([nil nil ((6284 . 6285) 6285 (t 25557 6826 533626 582000)) nil (25557 6831 590104 261000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -6284) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) 6285 (t 25557 6826 533626 582000)) nil (25557 6831 590099 634000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -6477) (undo-tree-id12723 . -1) (#("O" 0 1 (fontified t)) . -6478) (undo-tree-id12724 . -1) (#("R" 0 1 (fontified t)) . -6479) (undo-tree-id12725 . -1) (#("D" 0 1 (fontified t)) . -6480) (undo-tree-id12726 . -1) 6481 (t 25557 6831 685605 508000)) nil (25557 6846 597757 684000) 0 nil])
([nil nil ((6477 . 6481)) nil (25557 6846 597742 140000) 0 nil])
([nil nil ((383 . 390) (t 25557 6846 665544 199000)) nil (25557 6878 263798 313000) 0 nil])
([nil nil ((356 . 363)) nil (25557 6878 263797 290000) 0 nil])
([nil nil ((326 . 327)) nil (25557 6878 263796 446000) 0 nil])
([nil nil ((324 . 331)) nil (25557 6878 263795 10000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . 333)) nil (25557 6878 263789 909000) 0 nil])
([nil nil ((6498 . 6502) (t 25557 6878 341414 399000)) nil (25557 6891 126051 322000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg)) . -6498) (undo-tree-id12727 . -1) (#("R" 0 1 (fontified t ws-butler-chg chg)) . -6499) (undo-tree-id12728 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -6500) (undo-tree-id12729 . -1) (#("U" 0 1 (fontified t ws-butler-chg chg)) . -6501) (undo-tree-id12730 . -1) 6502) nil (25557 6891 126048 899000) 0 nil])
([nil nil ((6498 . 6504)) nil (25557 6891 126033 89000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -6804) (undo-tree-id12731 . -1) (#("O" 0 1 (fontified t)) . -6805) (undo-tree-id12732 . -1) (#("R" 0 1 (fontified t)) . -6806) (undo-tree-id12733 . -1) (#("D" 0 1 (fontified t)) . -6807) (undo-tree-id12734 . -1) 6808 (t 25557 6891 209361 607000)) nil (25557 6899 676658 626000) 0 nil])
([nil nil ((6804 . 6814)) nil (25557 6899 676642 675000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -7020) (undo-tree-id12735 . -1) (#("O" 0 1 (fontified t)) . -7021) (undo-tree-id12736 . -1) (#("R" 0 1 (fontified t)) . -7022) (undo-tree-id12737 . -1) (#("D" 0 1 (fontified t)) . -7023) (undo-tree-id12738 . -1) 7024 (t 25557 6899 761326 501000)) nil (25557 6906 725101 986000) 0 nil])
([nil nil ((7020 . 7030)) nil (25557 6906 725086 80000) 0 nil])
([nil nil ((6746 . 6748) (t 25557 6906 817297 527000)) nil (25557 6927 182760 804000) 0 nil])
([nil nil ((6747 . 6748)) nil (25557 6927 182755 497000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2002) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (#("i" 0 1 (fontified t)) . -2003) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (#("n" 0 1 (fontified t)) . -2004) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (#("t" 0 1 (fontified t)) . -2005) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (#("6" 0 1 (fontified t)) . -2006) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (#("4" 0 1 (fontified t)) . -2007) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (#("_" 0 1 (fontified t)) . -2008) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -2009) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (#(" " 0 1 (fontified t)) . -2010) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -2011) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -2012) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (#("b" 0 1 (fontified t face font-lock-variable-name-face)) . -2013) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -2014) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2015) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -2016) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -2017) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -2018) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -2019) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -2020) (undo-tree-id13072 . -1) 2021 (t 25557 6927 261213 507000)) nil (25557 6963 437224 799000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -6555) (undo-tree-id13073 . -1) 6556 (t 25557 6963 509064 357000)) nil (25557 6982 325545 212000) 0 nil])
([nil nil ((6555 . 6556)) nil (25557 6982 325534 586000) 0 nil])
([nil nil ((6957 . 6959) (t 25557 6982 392986 552000)) nil (25557 7048 904309 191000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 6958) (undo-tree-id13093 . -1) 6959) nil (25557 7048 904308 213000) 0 nil])
([nil nil ((6892 . 6893)) nil (25557 7048 904305 830000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -6892) (undo-tree-id13092 . -1) 6893) nil (25557 7048 904305 87000) 0 nil])
([nil nil ((6892 . 6900)) nil (25557 7048 904303 728000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg)) . -6897) (undo-tree-id13089 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -6898) (undo-tree-id13090 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -6899) (undo-tree-id13091 . -1) 6900) nil (25557 7048 904302 477000) 0 nil])
([nil nil ((6897 . 6902)) nil (25557 7048 904229 915000) 0 nil])
([nil nil ((6901 . 6902)) nil (25557 7048 904229 287000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6901) (undo-tree-id13088 . -1) 6902) nil (25557 7048 904228 510000) 0 nil])
([nil nil ((6901 . 6903)) nil (25557 7048 904226 793000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -6898) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -6899) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -6900) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -6901) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -6902) (undo-tree-id13087 . -1) 6903) nil (25557 7048 904224 715000) 0 nil])
([nil nil ((6898 . 6899)) nil (25557 7048 904200 352000) 0 nil])
([nil nil ((6892 . 6914) (#("Regex_G" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg face font-lock-type-face) 4 5 (fontified t ws-butler-chg chg face font-lock-type-face) 5 6 (fontified t ws-butler-chg chg face font-lock-type-face) 6 7 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -6892) (undo-tree-id13074 . -7) 6899) nil (25557 7048 904182 510000) 0 nil])
([nil nil ((6914 . 6915) (t 25557 7048 984711 730000)) nil (25557 7057 484855 510000) 0 nil])
([nil nil ((6915 . 6920)) nil (25557 7057 484854 424000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6916) (undo-tree-id13095 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6917) (undo-tree-id13096 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6918) (undo-tree-id13097 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -6919) (undo-tree-id13098 . -1) 6920) nil (25557 7057 484852 920000) 0 nil])
([nil nil ((6916 . 6928)) nil (25557 7057 484847 549000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . -6928) (undo-tree-id13094 . -1) 6929) nil (25557 7057 484843 783000) 0 nil])
([nil nil ((6927 . 6928) (t 25557 7057 560676 284000)) nil (25557 7064 685125 975000) 0 nil])
([nil nil ((6929 . 6930)) nil (25557 7064 685124 659000) 0 nil])
([nil nil ((6952 . 6953)) nil (25557 7064 685123 284000) 0 nil])
([nil nil ((6954 . 6955)) nil (25557 7064 685118 225000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -7014) (undo-tree-id13137 . -1) (#("a" 0 1 (fontified t)) . -7015) (undo-tree-id13138 . -1) (#("b" 0 1 (fontified t)) . -7016) (undo-tree-id13139 . -1) (#("l" 0 1 (fontified t)) . -7017) (undo-tree-id13140 . -1) (#("e" 0 1 (fontified t)) . -7018) (undo-tree-id13141 . -1) (#("[" 0 1 (fontified t)) . -7019) (undo-tree-id13142 . -1) (#("s" 0 1 (fontified t)) . -7020) (undo-tree-id13143 . -1) (#("l" 0 1 (fontified t)) . -7021) (undo-tree-id13144 . -1) (#("o" 0 1 (fontified t)) . -7022) (undo-tree-id13145 . -1) (#("t" 0 1 (fontified t)) . -7023) (undo-tree-id13146 . -1) (#("]" 0 1 (fontified t)) . -7024) (undo-tree-id13147 . -1) (#("." 0 1 (fontified t)) . -7025) (undo-tree-id13148 . -1) (#("n" 0 1 (fontified t)) . -7026) (undo-tree-id13149 . -1) (#("e" 0 1 (fontified t)) . -7027) (undo-tree-id13150 . -1) (#("x" 0 1 (fontified t)) . -7028) (undo-tree-id13151 . -1) (#("t" 0 1 (fontified t)) . -7029) (undo-tree-id13152 . -1) (#("." 0 1 (fontified t)) . -7030) (undo-tree-id13153 . -1) (#("n" 0 1 (fontified t)) . -7031) (undo-tree-id13154 . -1) (#("a" 0 1 (fontified t)) . -7032) (undo-tree-id13155 . -1) (#("m" 0 1 (fontified t)) . -7033) (undo-tree-id13156 . -1) (#("e" 0 1 (fontified t)) . -7034) (undo-tree-id13157 . -1) 7035 (t 25557 7064 760646 517000)) nil (25557 7100 193586 541000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -7008) (undo-tree-id13131 . -1) (#("r" 0 1 (fontified t)) . -7009) (undo-tree-id13132 . -1) (#("o" 0 1 (fontified t)) . -7010) (undo-tree-id13133 . -1) (#("u" 0 1 (fontified t)) . -7011) (undo-tree-id13134 . -1) (#("p" 0 1 (fontified t)) . -7012) (undo-tree-id13135 . -1) (#("_" 0 1 (fontified t)) . -7013) (undo-tree-id13136 . -1) 7014) nil (25557 7100 193568 62000) 0 nil])
([nil nil ((7008 . 7016)) nil (25557 7100 193562 26000) 0 nil])
([nil nil ((7008 . 7019) (#("next_buc" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -7008) (undo-tree-id13130 . -8) 7016) nil (25557 7100 193561 217000) 0 nil])
([nil nil ((7019 . 7024)) nil (25557 7100 193559 779000) 0 nil])
([nil nil ((#("next_bucket.name" 0 11 (fontified t ws-butler-chg chg) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t ws-butler-chg chg) 13 14 (fontified t ws-butler-chg chg) 14 15 (fontified t ws-butler-chg chg) 15 16 (fontified t ws-butler-chg chg)) . 7008) (undo-tree-id13128 . -16) (undo-tree-id13129 . -16)) nil (25557 7100 193559 40000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7023 . 7024) (nil fontified nil 7023 . 7024) (nil fontified nil 7022 . 7023) (nil fontified nil 7021 . 7022) (nil fontified nil 7020 . 7021) (nil fontified nil 7019 . 7020) (nil fontified nil 7008 . 7019) (7008 . 7024)) nil (25557 7100 193557 16000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -7065) (undo-tree-id13107 . -1) (#("u" 0 1 (fontified t)) . -7066) (undo-tree-id13108 . -1) (#("p" 0 1 (fontified t)) . -7067) (undo-tree-id13109 . -1) (#("_" 0 1 (fontified t)) . -7068) (undo-tree-id13110 . -1) (#("t" 0 1 (fontified t)) . -7069) (undo-tree-id13111 . -1) (#("a" 0 1 (fontified t)) . -7070) (undo-tree-id13112 . -1) (#("b" 0 1 (fontified t)) . -7071) (undo-tree-id13113 . -1) (#("l" 0 1 (fontified t)) . -7072) (undo-tree-id13114 . -1) (#("e" 0 1 (fontified t)) . -7073) (undo-tree-id13115 . -1) (#("[" 0 1 (fontified t)) . -7074) (undo-tree-id13116 . -1) (#("s" 0 1 (fontified t)) . -7075) (undo-tree-id13117 . -1) (#("l" 0 1 (fontified t)) . -7076) (undo-tree-id13118 . -1) (#("o" 0 1 (fontified t)) . -7077) (undo-tree-id13119 . -1) (#("t" 0 1 (fontified t)) . -7078) (undo-tree-id13120 . -1) (#("]" 0 1 (fontified t)) . -7079) (undo-tree-id13121 . -1) (#("." 0 1 (fontified t)) . -7080) (undo-tree-id13122 . -1) (#("n" 0 1 (fontified t)) . -7081) (undo-tree-id13123 . -1) (#("e" 0 1 (fontified t)) . -7082) (undo-tree-id13124 . -1) (#("x" 0 1 (fontified t)) . -7083) (undo-tree-id13125 . -1) (#("t" 0 1 (fontified t)) . -7084) (undo-tree-id13126 . -1) (#("." 0 1 (fontified t)) . -7085) (undo-tree-id13127 . -1) 7086) nil (25557 7100 193552 785000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -7063) (undo-tree-id13105 . -1) (#("r" 0 1 (fontified t)) . -7064) (undo-tree-id13106 . -1) 7065) nil (25557 7100 193534 316000) 0 nil])
([nil nil ((7063 . 7065)) nil (25557 7100 193532 144000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -7063) (undo-tree-id13103 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -7064) (undo-tree-id13104 . -1) 7065) nil (25557 7100 193531 249000) 0 nil])
([nil nil ((7063 . 7065)) nil (25557 7100 193529 251000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -7063) (undo-tree-id13101 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -7064) (undo-tree-id13102 . -1) 7065) nil (25557 7100 193528 257000) 0 nil])
([nil nil ((7063 . 7064)) nil (25557 7100 193525 679000) 0 nil])
([nil nil ((7064 . 7073)) nil (25557 7100 193525 63000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -7072) (undo-tree-id13100 . -1) 7073) nil (25557 7100 193523 931000) 0 nil])
([nil nil ((7072 . 7076)) nil (25557 7100 193521 408000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -7075) (undo-tree-id13099 . -1) 7076) nil (25557 7100 193517 391000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -7081) (undo-tree-id13158 . -1) (#("a" 0 1 (fontified t)) . -7082) (undo-tree-id13159 . -1) (#("m" 0 1 (fontified t)) . -7083) (undo-tree-id13160 . -1) (#("e" 0 1 (fontified t)) . -7084) (undo-tree-id13161 . -1) 7085 (t 25557 7100 268491 677000)) nil (25557 7104 467865 426000) 0 nil])
([nil nil ((7081 . 7086)) nil (25557 7104 467848 965000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7019) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) 7020 (t 25557 7104 536463 827000)) nil (25557 7114 210431 125000) 0 nil])
([nil nil ((7019 . 7021)) nil (25557 7114 210426 543000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7075) (undo-tree-id13162 . -1) 7076) nil (25557 7114 210424 422000) 0 nil])
([nil nil ((7075 . 7077)) nil (25557 7114 210401 654000) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-type-face fontified t)) . -6405) (undo-tree-id1 . -1) 6406 (t 25557 7114 292400 437000)) nil (25557 7626 198997 459000) 0 nil])
([nil nil ((6405 . 6406)) nil (25557 7626 198995 182000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -6405) (undo-tree-id0 . -1) 6406) nil (25557 7626 198993 319000) 0 nil])
([nil nil ((6405 . 6407)) nil (25557 7626 198972 79000) 0 nil])
([nil nil ((2344 . 2346) (t 25557 7626 291054 263000)) nil (25557 7669 115111 623000) 0 nil])
([nil nil ((2345 . 2347) (#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . 2345) (undo-tree-id39 . -1) 2346) nil (25557 7669 115110 443000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . -2345) (undo-tree-id37 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . -2346) (undo-tree-id38 . -1) 2347) nil (25557 7669 115108 341000) 0 nil])
([nil nil ((2345 . 2352)) nil (25557 7669 115105 878000) 0 nil])
([nil nil ((2352 . 2354)) nil (25557 7669 115104 923000) 0 nil])
([nil nil ((2354 . 2355) (nil syntax-table nil 2355 . 2356) (nil syntax-table (1) 2353 . 2354) (2353 . 2354)) nil (25557 7669 115104 93000) 0 nil])
([nil nil ((2354 . 2358)) nil (25557 7669 115102 627000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2354) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("%" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2355) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("%" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2356) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#(" " 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2357) (undo-tree-id36 . -1) 2358) nil (25557 7669 115100 469000) 0 nil])
([nil nil ((#("printf(\"\")" 0 1 (c-is-sws t ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (face font-lock-string-face ws-butler-chg chg fontified t) 8 9 (face font-lock-string-face ws-butler-chg delete fontified t) 9 10 (ws-butler-chg chg fontified t)) . 2346) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -10)) nil (25557 7669 115088 570000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . 2345) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 2346) nil (25557 7669 115080 418000) 0 nil])
([nil nil ((2345 . 2346) 2346 (t 25557 7669 183388 23000)) nil (25557 7669 853797 23000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t c-is-sws t fontified t)) . -2344) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (ws-butler-chg chg c-in-sws t c-is-sws t fontified t)) . -2345) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 2346 (t 25557 7669 183388 23000)) nil (25557 7669 853791 866000) 0 nil])
([nil nil ((2344 . 2346) (t 25557 7669 927391 859000)) nil (25557 7686 303222 635000) 0 nil])
([nil nil ((2346 . 2350)) nil (25557 7686 303221 658000) 0 nil])
([nil nil ((#("R" 0 1 (c-is-sws t ws-butler-chg chg fontified t)) . -2346) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t)) . -2347) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -2348) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t)) . -2349) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 2350) nil (25557 7686 303219 180000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . 2345) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 2346) nil (25557 7686 303203 74000) 0 nil])
([nil nil ((2345 . 2346) 2346 (t 25557 7686 391464 357000)) nil (25557 7774 457564 796000) 0 nil])
([nil nil ((2346 . 2347) (t 25557 7686 391464 357000)) nil (25557 7774 457563 463000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . -2346) (undo-tree-id136 . -1) 2347) nil (25557 7774 457562 260000) 0 nil])
([nil nil ((2346 . 2348)) nil (25557 7774 457560 636000) 0 nil])
([nil nil ((2348 . 2350)) nil (25557 7774 457559 773000) 0 nil])
([nil nil ((2349 . 2350)) nil (25557 7774 457559 8000) 0 nil])
([nil nil ((#("g" 0 1 (ws-butler-chg chg fontified t)) . -2349) (undo-tree-id135 . -1) 2350) nil (25557 7774 457557 796000) 0 nil])
([nil nil ((#("i" 0 1 (c-is-sws t ws-butler-chg chg fontified t)) . -2346) (undo-tree-id131 . -1) (#("f" 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified t)) . -2347) (undo-tree-id132 . -1) (#("(" 0 1 (ws-butler-chg chg fontified t)) . -2348) (undo-tree-id133 . -1) (#(")" 0 1 (ws-butler-chg delete fontified t)) . -2349) (undo-tree-id134 . -1) 2350) nil (25557 7774 457555 607000) 0 nil])
([nil nil ((2346 . 2349)) nil (25557 7774 457549 704000) 0 nil])
([nil nil ((2349 . 2351)) nil (25557 7774 457548 713000) 0 nil])
([nil nil ((2350 . 2354)) nil (25557 7774 457547 830000) 0 nil])
([nil nil ((#("g" 0 1 (ws-butler-chg chg fontified t)) . -2350) (undo-tree-id127 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -2351) (undo-tree-id128 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -2352) (undo-tree-id129 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -2353) (undo-tree-id130 . -1) 2354) nil (25557 7774 457546 404000) 0 nil])
([nil nil ((2350 . 2353)) nil (25557 7774 457542 619000) 0 nil])
([nil nil ((#("G" 0 1 (ws-butler-chg chg fontified t)) . -2350) (undo-tree-id124 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -2351) (undo-tree-id125 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -2352) (undo-tree-id126 . -1) 2353) nil (25557 7774 457541 425000) 0 nil])
([nil nil ((2350 . 2355)) nil (25557 7774 457537 547000) 0 nil])
([nil nil ((2350 . 2357) (#("uint8" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . -2350) (undo-tree-id123 . -5) 2355) nil (25557 7774 457536 400000) 0 nil])
([nil nil ((#("8" 0 1 (ws-butler-chg chg fontified t)) . -2354) (undo-tree-id122 . -1) 2355) nil (25557 7774 457534 322000) 0 nil])
([nil nil ((2354 . 2356)) nil (25557 7774 457532 290000) 0 nil])
([nil nil ((2358 . 2361)) nil (25557 7774 457531 422000) 0 nil])
([nil nil ((#(">" 0 1 (ws-butler-chg chg fontified t)) . -2360) (undo-tree-id121 . -1) 2361) nil (25557 7774 457530 435000) 0 nil])
([nil nil ((2360 . 2362)) nil (25557 7774 457528 767000) 0 nil])
([nil nil ((#("g" 0 1 (ws-butler-chg chg fontified t)) . -2361) (undo-tree-id120 . -1) 2362) nil (25557 7774 457527 666000) 0 nil])
([nil nil ((2361 . 2364)) nil (25557 7774 457526 34000) 0 nil])
([nil nil ((#("V" 0 1 (ws-butler-chg chg fontified t)) . -2363) (undo-tree-id119 . -1) 2364) nil (25557 7774 457524 961000) 0 nil])
([nil nil ((2363 . 2364)) nil (25557 7774 457523 89000) 0 nil])
([nil nil ((#("V" 0 1 (ws-butler-chg chg fontified t)) . -2363) (undo-tree-id118 . -1) 2364) nil (25557 7774 457522 134000) 0 nil])
([nil nil ((2363 . 2364)) nil (25557 7774 457520 528000) 0 nil])
([nil nil ((2364 . 2366)) nil (25557 7774 457519 684000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t)) . -2361) (undo-tree-id113 . -1) (#("A" 0 1 (ws-butler-chg chg fontified t)) . -2362) (undo-tree-id114 . -1) (#("B" 0 1 (ws-butler-chg chg fontified t)) . -2363) (undo-tree-id115 . -1) (#("L" 0 1 (ws-butler-chg chg fontified t)) . -2364) (undo-tree-id116 . -1) (#("E" 0 1 (ws-butler-chg chg fontified t)) . -2365) (undo-tree-id117 . -1) 2366) nil (25557 7774 457518 38000) 0 nil])
([nil nil ((2361 . 2363)) nil (25557 7774 457513 146000) 0 nil])
([nil nil ((#("G" 0 1 (ws-butler-chg chg fontified t)) . -2361) (undo-tree-id111 . -1) (#("R" 0 1 (ws-butler-chg chg fontified t)) . -2362) (undo-tree-id112 . -1) 2363) nil (25557 7774 457511 812000) 0 nil])
([nil nil ((2361 . 2366)) nil (25557 7774 457503 542000) 0 nil])
([nil nil ((#("L" 0 1 (ws-butler-chg chg fontified t)) . -2365) (undo-tree-id110 . -1) 2366) nil (25557 7774 457502 650000) 0 nil])
([nil nil ((2365 . 2368)) nil (25557 7774 457501 5000) 0 nil])
([nil nil ((2361 . 2379) (#("DEFAULT" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t)) . -2361) (undo-tree-id109 . -7) 2368) nil (25557 7774 457500 12000) 0 nil])
([nil nil ((2379 . 2380)) nil (25557 7774 457498 69000) 0 nil])
([nil nil ((2380 . 2383)) nil (25557 7774 457496 862000) 0 nil])
([nil nil ((2384 . 2386)) nil (25557 7774 457495 861000) 0 nil])
([nil nil ((2384 . 2388)) nil (25557 7774 457494 906000) 0 nil])
([nil nil ((2385 . 2389) (#("   " 0 3 (ws-butler-chg chg fontified t)) . 2385) (undo-tree-id108 . -3) 2388) nil (25557 7774 457493 808000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -2385) (undo-tree-id104 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2386) (undo-tree-id105 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2387) (undo-tree-id106 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2388) (undo-tree-id107 . -1) 2389) nil (25557 7774 457491 276000) 0 nil])
([nil nil ((2385 . 2386)) nil (25557 7774 457487 217000) 0 nil])
([nil nil ((2387 . 2389)) nil (25557 7774 457486 316000) 0 nil])
([nil nil ((2387 . 2391)) nil (25557 7774 457485 415000) 0 nil])
([nil nil ((2388 . 2392) (#("   " 0 3 (ws-butler-chg chg fontified t)) . 2388) (undo-tree-id103 . -3) 2391) nil (25557 7774 457484 395000) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg fontified t)) . 2389) (undo-tree-id102 . -3) 2392) nil (25557 7774 457469 568000) 0 nil])
([nil nil ((2392 . 2394)) nil (25557 7774 457467 837000) 0 nil])
([nil nil ((2393 . 2395) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 2393) (undo-tree-id101 . -1) 2394) nil (25557 7774 457466 675000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2394) (undo-tree-id100 . -1) 2395) nil (25557 7774 457464 577000) 0 nil])
([nil nil ((2389 . 2391)) nil (25557 7774 457462 729000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -2388) (undo-tree-id97 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2389) (undo-tree-id98 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2390) (undo-tree-id99 . -1) 2391) nil (25557 7774 457461 351000) 0 nil])
([nil nil ((2388 . 2397)) nil (25557 7774 457443 471000) 0 nil])
([nil nil ((2388 . 2391) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 2388) (2397 . 2398)) nil (25557 7774 457442 395000) 0 nil])
([nil nil ((#("8" 0 1 (ws-butler-chg chg fontified t)) . -2397) (undo-tree-id96 . -1) 2398) nil (25557 7774 457440 955000) 0 nil])
([nil nil ((2397 . 2398)) nil (25557 7774 457439 187000) 0 nil])
([nil nil ((2387 . 2391)) nil (25557 7774 457438 312000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2390) (undo-tree-id95 . -1) 2391) nil (25557 7774 457437 277000) 0 nil])
([nil nil ((2390 . 2392)) nil (25557 7774 457422 968000) 0 nil])
([nil nil ((2394 . 2395) (2388 . 2391) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 2388) (2392 . 2393)) nil (25557 7774 457421 761000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2390) (undo-tree-id94 . -1) 2391) nil (25557 7774 457420 216000) 0 nil])
([nil nil ((2393 . 2398)) nil (25557 7774 457418 489000) 0 nil])
([nil nil ((#("ö" 0 1 (ws-butler-chg chg fontified t)) . -2397) (undo-tree-id93 . -1) 2398) nil (25557 7774 457417 55000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t)) . -2393) (undo-tree-id89 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -2394) (undo-tree-id90 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t)) . -2395) (undo-tree-id91 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -2396) (undo-tree-id92 . -1) 2397) nil (25557 7774 457402 518000) 0 nil])
([nil nil ((2393 . 2397)) nil (25557 7774 457398 143000) 0 nil])
([nil nil ((2393 . 2398) (#("grou" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t)) . -2393) (undo-tree-id88 . -4) 2397) nil (25557 7774 457397 42000) 0 nil])
([nil nil ((2393 . 2404) (#("group" 0 5 (ws-butler-chg chg fontified t)) . -2393) (undo-tree-id87 . -5) 2398) nil (25557 7774 457394 788000) 0 nil])
([nil nil ((2404 . 2406)) nil (25557 7774 457392 607000) 0 nil])
([nil nil ((2405 . 2406)) nil (25557 7774 457391 616000) 0 nil])
([nil nil ((2407 . 2414)) nil (25557 7774 457376 196000) 0 nil])
([nil nil ((2413 . 2414)) nil (25557 7774 457375 323000) 0 nil])
([nil nil ((#("0" 0 1 (ws-butler-chg chg fontified t)) . -2413) (undo-tree-id86 . -1) 2414) nil (25557 7774 457373 337000) 0 nil])
([nil nil ((2413 . 2414)) nil (25557 7774 457367 102000) 0 nil])
([nil nil ((2415 . 2419)) nil (25557 7774 457366 80000) 0 nil])
([nil nil ((2418 . 2419)) nil (25557 7774 457364 432000) 0 nil])
([nil nil ((2418 . 2419)) nil (25557 7774 457360 449000) 0 nil])
([nil nil ((2393 . 2394) (t 25557 7774 567607 976000)) nil (25557 7790 457335 735000) 0 nil])
([nil nil ((2425 . 2426) (2388 . 2391) (#("  " 0 2 (fontified nil)) . 2388) (2423 . 2424)) nil (25557 7790 457334 297000) 0 nil])
([nil nil ((#("}" 0 1 (ws-butler-chg chg fontified t)) . -2425) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 2426) nil (25557 7790 457332 409000) 0 nil])
([nil nil ((2437 . 2443)) nil (25557 7790 457329 388000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2441) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2442) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 2443) nil (25557 7790 457327 698000) 0 nil])
([nil nil ((2438 . 2443) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 2438) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (2441 . 2442)) nil (25557 7790 457321 295000) 0 nil])
([nil nil ((2429 . 2430)) nil (25557 7790 457315 953000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2441) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2442) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2443) (undo-tree-id142 . -1) 2444) nil (25557 7790 457311 378000) 0 nil])
([nil nil ((2441 . 2442) (t 25557 7790 523610 408000)) nil (25557 7791 163999 907000) 0 nil])
([nil nil ((2438 . 2439) (nil syntax-table nil 2439 . 2440) (nil syntax-table (1) 2437 . 2438) (2437 . 2438) (t 25557 7791 239610 424000)) nil (25557 7867 163826 174000) 0 nil])
([nil nil ((2438 . 2456)) nil (25557 7867 163824 187000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2455) (undo-tree-id167 . -1) 2456) nil (25557 7867 163823 4000) 0 nil])
([nil nil ((2455 . 2456)) nil (25557 7867 163820 219000) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2455) (undo-tree-id166 . -1) 2456) nil (25557 7867 163819 131000) 0 nil])
([nil nil ((2455 . 2456)) nil (25557 7867 163817 448000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2455) (undo-tree-id165 . -1) 2456) nil (25557 7867 163816 508000) 0 nil])
([nil nil ((2465 . 2467) (nil syntax-table nil 2467 . 2468) (nil syntax-table (1) 2437 . 2438) (2455 . 2465)) nil (25557 7867 163814 687000) 0 nil])
([nil nil ((2468 . 2470)) nil (25557 7867 163813 257000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t)) . -2468) (undo-tree-id163 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2469) (undo-tree-id164 . -1) 2470) nil (25557 7867 163812 107000) 0 nil])
([nil nil ((2468 . 2469)) nil (25557 7867 163809 716000) 0 nil])
([nil nil ((2469 . 2470)) nil (25557 7867 163808 779000) 0 nil])
([nil nil ((2470 . 2472)) nil (25557 7867 163807 626000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -2471) (undo-tree-id162 . -1) 2472) nil (25557 7867 163806 811000) 0 nil])
([nil nil ((2471 . 2474)) nil (25557 7867 163805 363000) 0 nil])
([nil nil ((2471 . 2482) (#("gro" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t)) . -2471) (undo-tree-id161 . -3) 2474) nil (25557 7867 163804 320000) 0 nil])
([nil nil ((2482 . 2484)) nil (25557 7867 163802 388000) 0 nil])
([nil nil ((2483 . 2484)) nil (25557 7867 163801 626000) 0 nil])
([nil nil ((2485 . 2486)) nil (25557 7867 163800 644000) 0 nil])
([nil nil ((2486 . 2487)) nil (25557 7867 163799 413000) 0 nil])
([nil nil ((#("," 0 1 (ws-butler-chg chg fontified t)) . -2485) (undo-tree-id159 . -1) (#("." 0 1 (ws-butler-chg chg fontified t)) . -2486) (undo-tree-id160 . -1) 2487) nil (25557 7867 163798 119000) 0 nil])
([nil nil ((2485 . 2490)) nil (25557 7867 163795 720000) 0 nil])
([nil nil ((2490 . 2491)) nil (25557 7867 163794 910000) 0 nil])
([nil nil ((2491 . 2492)) nil (25557 7867 163794 97000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t)) . -2491) (undo-tree-id158 . -1) 2492) nil (25557 7867 163793 73000) 0 nil])
([nil nil ((2491 . 2492)) nil (25557 7867 163791 267000) 0 nil])
([nil nil ((#("g" 0 1 (ws-butler-chg chg fontified t)) . -2491) (undo-tree-id157 . -1) 2492) nil (25557 7867 163789 580000) 0 nil])
([nil nil ((2491 . 2492)) nil (25557 7867 163781 497000) 0 nil])
([nil nil ((2493 . 2494)) nil (25557 7867 163777 382000) 0 nil])
([nil nil ((2359 . 2361) (t 25557 7867 231122 748000)) nil (25557 7893 646115 994000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg chg fontified t)) . -2360) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 2361) nil (25557 7893 646111 828000) 0 nil])
([nil nil ((2359 . 2360) (t 25557 7893 726817 502000)) nil (25557 7904 651422 455000) 0 nil])
([nil nil ((2361 . 2362)) nil (25557 7904 651420 682000) 0 nil])
([nil nil ((2362 . 2363)) nil (25557 7904 651416 226000) 0 nil])
([nil nil ((#("Regex_RegisterGroup(\"Wörter\",group);" 0 20 (fontified t) 20 28 (face font-lock-string-face fontified t) 28 36 (fontified t)) . 2258) (undo-tree-id170 . -36) (undo-tree-id171 . -36) (undo-tree-id172 . -36) (undo-tree-id173 . -36) (undo-tree-id174 . -36) (undo-tree-id175 . -36) (undo-tree-id176 . -36) (t 25557 7904 730704 438000)) nil (25557 7921 371271 675000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2293 . 2294) (nil fontified nil 2286 . 2294) (nil fontified nil 2278 . 2286) (nil fontified nil 2258 . 2278) (2258 . 2294)) nil (25557 7921 371255 549000) 0 nil])
([nil nil ((2294 . 2296) (t 25557 7921 454545 962000)) nil (25557 7933 639154 3000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2331 . 2332) (nil fontified nil 2324 . 2332) (nil fontified nil 2316 . 2324) (nil fontified nil 2296 . 2316) (2296 . 2332)) nil (25557 7933 639152 812000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2319) (undo-tree-id183 . -1) (#("t" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2320) (undo-tree-id184 . -1) (#("e" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2321) (undo-tree-id185 . -1) (#("r" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2322) (undo-tree-id186 . -1) 2323) nil (25557 7933 639150 790000) 0 nil])
([nil nil ((2319 . 2321)) nil (25557 7933 639146 801000) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2317) (undo-tree-id179 . -1) (#("ö" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2318) (undo-tree-id180 . -1) (#("b" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2319) (undo-tree-id181 . -1) (#("v" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2320) (undo-tree-id182 . -1) 2321) nil (25557 7933 639145 322000) 0 nil])
([nil nil ((2317 . 2325)) nil (25557 7933 639140 762000) 0 nil])
([nil nil ((#("Regex_RegisterGroup(\"Blubbers\",group);" 0 20 (fontified t ws-butler-chg chg) 20 21 (face font-lock-string-face fontified t ws-butler-chg chg) 21 22 (face font-lock-string-face fontified t ws-butler-chg chg) 22 23 (face font-lock-string-face fontified t ws-butler-chg chg) 23 24 (face font-lock-string-face fontified t ws-butler-chg chg) 24 25 (face font-lock-string-face fontified t ws-butler-chg chg) 25 26 (face font-lock-string-face fontified t ws-butler-chg chg) 26 27 (face font-lock-string-face fontified t ws-butler-chg chg) 27 28 (face font-lock-string-face fontified t ws-butler-chg chg) 28 29 (face font-lock-string-face fontified t ws-butler-chg chg) 29 30 (face font-lock-string-face fontified t ws-butler-chg delete) 30 37 (fontified t ws-butler-chg chg) 37 38 (rear-nonsticky t fontified t ws-butler-chg chg)) . 2296)) nil (25557 7933 639139 841000) 0 nil])
([nil nil ((nil fontified nil 2333 . 2334) (nil fontified nil 2326 . 2333) (nil fontified nil 2325 . 2326) (nil fontified nil 2324 . 2325) (nil fontified nil 2323 . 2324) (nil fontified nil 2322 . 2323) (nil fontified nil 2321 . 2322) (nil fontified nil 2320 . 2321) (nil fontified nil 2319 . 2320) (nil fontified nil 2318 . 2319) (nil fontified nil 2317 . 2318) (nil fontified nil 2316 . 2317) (nil fontified nil 2296 . 2316) (2296 . 2334)) nil (25557 7933 639138 461000) 0 nil])
([nil nil ((2334 . 2336)) nil (25557 7933 639134 634000) 0 nil])
([nil nil ((nil fontified nil 2373 . 2374) (nil fontified nil 2366 . 2373) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (nil fontified nil 2361 . 2362) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2336 . 2356) (2336 . 2374)) nil (25557 7933 639133 99000) 0 nil])
([nil nil ((2360 . 2361)) nil (25557 7933 639129 902000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2359) (undo-tree-id177 . -1) (#("a" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -2360) (undo-tree-id178 . -1) 2361) nil (25557 7933 639127 422000) 0 nil])
([nil nil ((2359 . 2360)) nil (25557 7933 639114 166000) 0 nil])
([nil nil ((#("Regex_RegisterGroup(\"Blabbers\",group);" 0 20 (fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 37 (fontified t) 37 38 (fontified t rear-nonsticky t)) . 2336) (undo-tree-id190 . -24) (undo-tree-id191 . -24) (undo-tree-id192 . -38) (t 25557 7933 718438 979000)) nil (25557 7936 562871 947000) 0 nil])
([nil nil ((nil fontified nil 2373 . 2374) (nil fontified nil 2366 . 2373) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (nil fontified nil 2361 . 2362) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2336 . 2356) (2336 . 2374)) nil (25557 7936 562867 813000) 0 nil])
([nil nil ((2374 . 2376)) nil (25557 7936 562864 488000) 0 nil])
([nil nil ((2375 . 2377) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 2375) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 2376) nil (25557 7936 562862 219000) 0 nil])
([nil nil ((nil fontified nil 2414 . 2415) (nil fontified nil 2407 . 2414) (nil fontified nil 2406 . 2407) (nil fontified nil 2405 . 2406) (nil fontified nil 2404 . 2405) (nil fontified nil 2403 . 2404) (nil fontified nil 2402 . 2403) (nil fontified nil 2401 . 2402) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2377 . 2397) (2377 . 2415)) nil (25557 7936 562786 642000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -2400) (undo-tree-id193 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -2401) (undo-tree-id194 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -2402) (undo-tree-id195 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2403) (undo-tree-id196 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2404) (undo-tree-id197 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -2405) (undo-tree-id198 . -1) 2406 (t 25557 7936 634414 596000)) nil (25557 7941 730820 324000) 0 nil])
([nil nil ((2400 . 2409)) nil (25557 7941 730803 289000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2376) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 2377 (t 25557 7941 810372 261000)) nil (25557 7943 539112 935000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2375) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 2376) nil (25557 7943 539108 685000) 0 nil])
([nil nil ((2375 . 2376)) nil (25557 7943 539093 947000) 0 nil])
([nil nil ((#("char* group=\"Hallo,Bye,Tschüss,Was,Geht\";" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 6 (fontified t) 6 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 40 (face font-lock-string-face fontified t) 40 41 (fontified t)) . 2214) (undo-tree-id207 . -41) (undo-tree-id208 . -41) (undo-tree-id209 . -41) (undo-tree-id210 . -41) (undo-tree-id211 . -41) (undo-tree-id212 . -41) (undo-tree-id213 . -41) (undo-tree-id214 . -41) (undo-tree-id215 . -41) (t 25557 7943 618357 757000)) nil (25557 7963 609525 653000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2254 . 2255) (nil fontified nil 2254 . 2255) (nil fontified nil 2226 . 2254) (nil fontified nil 2225 . 2226) (nil fontified nil 2220 . 2225) (nil fontified nil 2218 . 2220) (nil fontified nil 2217 . 2218) (nil fontified nil 2214 . 2217) (2214 . 2255)) nil (25557 7963 609511 419000) 0 nil])
([nil nil ((2255 . 2257)) nil (25557 7963 609508 931000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2297 . 2298) (nil fontified nil 2297 . 2298) (nil fontified nil 2269 . 2297) (nil fontified nil 2268 . 2269) (nil fontified nil 2263 . 2268) (nil fontified nil 2261 . 2263) (nil fontified nil 2260 . 2261) (nil fontified nil 2257 . 2260) (2257 . 2298)) nil (25557 7963 609507 530000) 0 nil])
([nil nil ((2298 . 2300)) nil (25557 7963 609504 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2340 . 2341) (nil fontified nil 2340 . 2341) (nil fontified nil 2312 . 2340) (nil fontified nil 2311 . 2312) (nil fontified nil 2306 . 2311) (nil fontified nil 2304 . 2306) (nil fontified nil 2303 . 2304) (nil fontified nil 2300 . 2303) (2300 . 2341)) nil (25557 7964 697482 552000) 0 nil])
([nil nil ((2341 . 2343)) nil (25557 7970 41143 482000) 0 nil] [nil nil ((nil rear-nonsticky nil 2381 . 2382) (nil fontified nil 2381 . 2382) (nil fontified nil 2353 . 2381) (nil fontified nil 2352 . 2353) (nil fontified nil 2347 . 2352) (nil fontified nil 2345 . 2347) (nil fontified nil 2344 . 2345) (nil fontified nil 2341 . 2344) (2341 . 2382)) ((#("char* group=\"Hallo,Bye,Tschüss,Was,Geht\";" 0 3 (face font-lock-type-face fontified nil ws-butler-chg chg) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil ws-butler-chg chg) 4 6 (fontified nil ws-butler-chg chg) 6 11 (face font-lock-variable-name-face fontified nil ws-butler-chg chg) 11 12 (fontified nil ws-butler-chg chg) 12 40 (face font-lock-string-face fontified nil ws-butler-chg chg) 40 41 (rear-nonsticky nil fontified nil ws-butler-chg chg)) . 2341) (undo-tree-id216 . -41) (undo-tree-id217 . -41) (undo-tree-id218 . -40) (undo-tree-id219 . -41) (nil rear-nonsticky t 2381 . 2382)) (25557 7963 609497 385000) 0 nil])
([nil nil ((2342 . 2344) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 2342) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 2343) nil (25557 7970 41142 244000) 0 nil])
nil
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -2342) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2343) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 2344) nil (25557 7970 41138 770000) 0 nil])
([nil nil ((2342 . 2343)) nil (25557 7970 41127 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2383 . 2384) (nil fontified nil 2383 . 2384) (nil fontified nil 2355 . 2383) (nil fontified nil 2354 . 2355) (nil fontified nil 2349 . 2354) (nil fontified nil 2347 . 2349) (nil fontified nil 2346 . 2347) (nil fontified nil 2343 . 2346) (2343 . 2384)) nil (25557 7970 41123 752000) 0 nil])
([nil nil ((2268 . 2269) (t 25557 7970 118160 264000)) nil (25557 8001 201154 356000) 0 nil])
([nil nil ((2311 . 2312)) nil (25557 8001 201153 152000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-variable-name-face fontified t ws-butler-chg chg)) . -2311) (undo-tree-id227 . -1) 2312) nil (25557 8001 201151 724000) 0 nil])
([nil nil ((2312 . 2313)) nil (25557 8001 201149 631000) 0 nil])
([nil nil ((2356 . 2357)) nil (25557 8001 201148 613000) 0 nil])
([nil nil ((2464 . 2465)) nil (25557 8001 201147 804000) 0 nil])
([nil nil ((2505 . 2506)) nil (25557 8001 201146 836000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -2505) (undo-tree-id226 . -1) 2506) nil (25557 8001 201145 42000) 0 nil])
([nil nil ((2505 . 2506)) nil (25557 8001 201135 346000) 0 nil])
([nil nil ((2549 . 2550)) nil (25557 8001 201131 111000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -2206) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("1" 0 1 (fontified t)) . -2207) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("2" 0 1 (fontified t)) . -2208) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) 2209 (t 25557 8001 285959 186000)) nil (25557 8019 342556 731000) 0 nil])
([nil nil ((2465 . 2467) (t 25557 8019 409854 958000)) nil (25557 8029 89448 605000) 0 nil])
([nil nil ((2508 . 2510)) nil (25557 8029 89447 268000) 0 nil])
([nil nil ((2465 . 2466)) nil (25557 8029 89433 281000) 0 nil])
([nil nil ((2509 . 2510)) nil (25557 8029 89428 948000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg delete fontified t)) . 2466) (#("/" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t)) . 2466) (t 25557 8029 165802 156000)) nil (25557 8035 708418 433000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2466) (undo-tree-id310 . -1) (undo-tree-id311 . -1) 2467 (t 25557 8035 785767 541000)) nil (25557 8039 81638 120000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2509) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) 2510 (t 25557 8039 161750 243000)) nil (25557 8045 470226 883000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-is-sws t c-in-sws t)) . -2507) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2508) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) 2509) nil (25557 8045 470216 423000) 0 nil])
([nil nil ((2466 . 2468) (t 25557 8045 545718 157000)) nil (25557 8047 30598 64000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2466) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("/" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -2467) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) 2468 (t 25557 8047 105710 438000)) nil (25557 8055 872281 908000) 0 nil])
([nil nil ((#("char* group1=\"Hallo,Bye,Tschüss,Was,Geht\";
 char* group2=\"Hallo,Bye,Tschüss,Was,Geht\";
 char* group3=\"Hallo,Bye,Tschüss,Was,Geht\";
" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 6 (fontified t) 6 11 (face font-lock-variable-name-face fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 13 (fontified t) 13 41 (face font-lock-string-face fontified t) 41 42 (fontified t rear-nonsticky t) 42 43 (fontified t) 43 44 (fontified t) 44 47 (face font-lock-type-face fontified t) 47 48 (face font-lock-type-face c-type c-decl-id-start fontified t) 48 50 (fontified t) 50 54 (face font-lock-variable-name-face fontified t) 54 55 (face font-lock-variable-name-face fontified t) 55 56 (face font-lock-variable-name-face fontified t) 56 57 (fontified t) 57 85 (face font-lock-string-face fontified t) 85 86 (fontified t rear-nonsticky t) 86 87 (fontified t) 87 88 (fontified t) 88 91 (face font-lock-type-face fontified t) 91 92 (face font-lock-type-face c-type c-decl-id-start fontified t) 92 94 (fontified t) 94 99 (face font-lock-variable-name-face fontified t) 99 100 (face font-lock-variable-name-face fontified t) 100 101 (fontified t) 101 129 (face font-lock-string-face fontified t) 129 130 (fontified t rear-nonsticky t) 130 131 (fontified t)) . 2254) (undo-tree-id379 . -86) (undo-tree-id380 . -131) (undo-tree-id381 . -44) (undo-tree-id382 . -86) (undo-tree-id383 . -86) (undo-tree-id384 . -88) (undo-tree-id385 . -131) (undo-tree-id386 . -131) (undo-tree-id387 . -131) 2385 (t 25557 8055 961667 475000)) nil (25557 8061 823031 366000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -2330) (undo-tree-id378 . -1) 2331) nil (25557 8061 823023 539000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -2370) (undo-tree-id377 . -1) 2371) nil (25557 8061 823021 103000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2253) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) 2370) nil (25557 8061 823014 959000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -2412) (undo-tree-id388 . -1) 2413 (t 25557 8061 901639 456000)) nil (25557 8065 96140 530000) 0 nil])
([nil nil ((2333 . 2335) (t 25557 8065 169624 298000)) nil (25557 8068 660070 902000) 0 nil])
([nil nil ((2375 . 2377)) nil (25557 8068 660065 629000) 0 nil])
([nil nil ((7179 . 7181) (t 25557 8068 789607 715000)) nil (25557 8116 790199 39000) 0 nil])
([nil nil ((7181 . 7182)) nil (25557 8116 790197 714000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -7181) (undo-tree-id392 . -1) 7182) nil (25557 8116 790196 507000) 0 nil])
([nil nil ((7181 . 7182)) nil (25557 8116 790194 607000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -7181) (undo-tree-id391 . -1) 7182) nil (25557 8116 790193 478000) 0 nil])
([nil nil ((7181 . 7187)) nil (25557 8116 790191 387000) 0 nil])
([nil nil ((7187 . 7189)) nil (25557 8116 790190 274000) 0 nil])
([nil nil ((7189 . 7190) (nil syntax-table nil 7190 . 7191) (nil syntax-table (1) 7188 . 7189) (7188 . 7189)) nil (25557 8116 790189 85000) 0 nil])
([nil nil ((7190 . 7192)) nil (25557 8116 790187 580000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -7190) (undo-tree-id389 . -1) (#("C" 0 1 (ws-butler-chg chg fontified t)) . -7191) (undo-tree-id390 . -1) 7192) nil (25557 8116 790171 772000) 0 nil])
([nil nil ((7189 . 7207)) nil (25557 8116 790164 319000) 0 nil])
([nil nil ((7208 . 7210) (nil syntax-table nil 7210 . 7211) (nil syntax-table (1) 7188 . 7189) (7207 . 7208)) nil (25557 8116 790149 694000) 0 nil])
([nil nil ((7212 . 7213)) nil (25557 8116 790147 516000) 0 nil])
([nil nil ((7207 . 7216)) nil (25557 8116 790143 2000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -7214) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -7215) (undo-tree-id395 . -1) 7216 (t 25557 8116 873405 369000)) nil (25557 8118 276055 469000) 0 nil])
([nil nil ((7214 . 7215)) nil (25557 8118 276046 18000) 0 nil])
([nil nil ((7215 . 7216)) nil (25557 8118 276041 140000) 0 nil])
([nil nil ((7222 . 7224) (t 25557 8118 353399 602000)) nil (25557 8121 522686 169000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7223) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 7224) nil (25557 8121 522681 929000) 0 nil])
([nil nil ((7223 . 7224) 7224 (t 25557 8121 601387 25000)) nil (25557 8128 381181 127000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7223) (undo-tree-id400 . -1) 7224 (t 25557 8121 601387 25000)) nil (25557 8128 381179 297000) 0 nil])
([nil nil ((7220 . 7221)) nil (25557 8128 381170 292000) 0 nil])
([nil nil ((7221 . 7226)) nil (25557 8128 381169 217000) 0 nil])
([nil nil ((7226 . 7227)) nil (25557 8128 381167 935000) 0 nil])
([nil nil ((7227 . 7232)) nil (25557 8128 381163 180000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2333) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("/" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -2334) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) 2335 (t 25557 8128 453360 861000)) nil (25557 8137 249269 742000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg delete fontified t)) . 2373) (#("/" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 2373) (t 25557 8137 329327 680000)) nil (25557 8138 85463 150000) 0 nil])
([nil nil ((7231 . 7236) (t 25557 8138 157324 621000)) nil (25557 8144 14290 579000) 0 nil])
([nil nil ((7236 . 7238)) nil (25557 8144 14289 430000) 0 nil])
([nil nil ((7237 . 7238)) nil (25557 8144 14287 986000) 0 nil])
([nil nil ((7239 . 7240)) nil (25557 8144 14283 8000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7230) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#(" " 0 1 (fontified t)) . -7231) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("e" 0 1 (fontified t)) . -7232) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("x" 0 1 (fontified t)) . -7233) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("i" 0 1 (fontified t)) . -7234) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("t" 0 1 (fontified t)) . -7235) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#("(" 0 1 (fontified t)) . -7236) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("1" 0 1 (fontified t)) . -7237) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#(")" 0 1 (fontified t)) . -7238) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#(";" 0 1 (fontified t)) . -7239) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 7240 (t 25557 8144 109302 835000)) nil (25557 8154 701368 779000) 0 nil])
([nil nil ((7230 . 7232) (t 25557 8154 777264 562000)) nil (25557 8155 402233 989000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7231) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) 7232) nil (25557 8155 402229 590000) 0 nil])
([nil nil ((7231 . 7232) 7232 (t 25557 8155 473262 97000)) nil (25557 8217 646502 911000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7231) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 7232 (t 25557 8155 473262 97000)) nil (25557 8217 646500 749000) 0 nil])
([nil nil ((7339 . 7344)) nil (25557 8217 646490 417000) 0 nil])
([nil nil ((7344 . 7346)) nil (25557 8217 646489 298000) 0 nil])
([nil nil ((7345 . 7346)) nil (25557 8217 646487 755000) 0 nil])
([nil nil ((7347 . 7348)) nil (25557 8217 646483 367000) 0 nil])
([nil nil ((#("exit(1);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 7340) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) (undo-tree-id589 . -8) (t 25557 8217 733055 440000)) nil (25557 8224 512516 62000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7339) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) 7340) nil (25557 8224 512476 950000) 0 nil])
([nil nil ((7339 . 7340) 7340 (t 25557 8224 597034 43000)) nil (25557 8229 523995 718000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7338) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -7339) (undo-tree-id601 . -1) 7340 (t 25557 8224 597034 43000)) nil (25557 8229 523994 84000) 0 nil])
([nil nil ((7338 . 7339)) nil (25557 8229 523987 418000) 0 nil])
([nil nil ((7338 . 7340) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 7338) (undo-tree-id594 . -1) 7339) nil (25557 8229 523985 687000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7339) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 7340) nil (25557 8229 523979 938000) 0 nil])
([nil nil ((7339 . 7340) 7340 (t 25557 8229 609018 565000)) nil (25557 8240 949890 660000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7339) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 7340 (t 25557 8229 609018 565000)) nil (25557 8240 949888 795000) 0 nil])
([nil nil ((#("  group_table[i].name=calloc(1,MAX_GROUP_NAME_LENGTH);
   group_table[i].name[0]='\\0';
   group_table[i].group=calloc(1,MAX_GROUP_LENGTH);" 0 81 (fontified t) 81 85 (face font-lock-string-face fontified t) 85 138 (fontified t)) . 6729) (undo-tree-id607 . -138) (undo-tree-id608 . -138) (undo-tree-id609 . -87) (undo-tree-id610 . -138) 6867) nil (25557 8240 949883 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6866 . 6867) (nil fontified nil 6814 . 6867) (nil fontified nil 6810 . 6814) (nil fontified nil 6729 . 6810) (6729 . 6867)) nil (25557 8240 949878 581000) 0 nil])
([nil nil ((7339 . 7341)) nil (25557 8240 949876 790000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 7340) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) 7341) nil (25557 8240 949875 48000) 0 nil])
([nil nil ((7423 . 7424) (#("   " 0 3 (fontified nil ws-butler-chg chg)) . 7423) (7393 . 7394) (#("   " 0 3 (fontified nil ws-butler-chg chg)) . 7393) (7339 . 7340) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 7339) (nil rear-nonsticky nil 7476 . 7477) (nil fontified nil 7424 . 7477) (nil fontified nil 7420 . 7424) (nil fontified nil 7339 . 7420) (7339 . 7477)) nil (25557 8240 949858 945000) 0 nil])
([nil nil ((7394 . 7395) (t 25557 8241 80983 566000)) nil (25557 8245 762250 633000) 0 nil])
([nil nil ((#("k" 0 1 (ws-butler-chg chg fontified t)) . -7394) (undo-tree-id635 . -1) 7395) nil (25557 8245 762249 395000) 0 nil])
([nil nil ((#("group_table[i].name[0]='\\0';" 0 1 (ws-butler-chg delete fontified t) 1 23 (fontified t) 23 27 (face font-lock-string-face fontified t) 27 28 (fontified t)) . 7394) (undo-tree-id632 . -11) (undo-tree-id633 . -23) (undo-tree-id634 . -28)) nil (25557 8245 762246 646000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7392) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#(" " 0 1 (fontified t)) . -7393) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 7394) nil (25557 8245 762239 841000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -7357) (undo-tree-id673 . -1) 7358 (t 25557 8245 836969 215000)) nil (25557 8264 913845 394000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t)) . -7357) (undo-tree-id672 . -1) 7358) nil (25557 8264 913843 436000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -7340) (undo-tree-id655 . -1) (#("r" 0 1 (fontified t)) . -7341) (undo-tree-id656 . -1) (#("o" 0 1 (fontified t)) . -7342) (undo-tree-id657 . -1) (#("u" 0 1 (fontified t)) . -7343) (undo-tree-id658 . -1) (#("p" 0 1 (fontified t)) . -7344) (undo-tree-id659 . -1) (#("_" 0 1 (fontified t)) . -7345) (undo-tree-id660 . -1) (#("t" 0 1 (fontified t)) . -7346) (undo-tree-id661 . -1) (#("a" 0 1 (fontified t)) . -7347) (undo-tree-id662 . -1) (#("b" 0 1 (fontified t)) . -7348) (undo-tree-id663 . -1) (#("l" 0 1 (fontified t)) . -7349) (undo-tree-id664 . -1) (#("e" 0 1 (fontified t)) . -7350) (undo-tree-id665 . -1) (#("[" 0 1 (fontified t)) . -7351) (undo-tree-id666 . -1) (#("i" 0 1 (fontified t)) . -7352) (undo-tree-id667 . -1) (#("]" 0 1 (fontified t)) . -7353) (undo-tree-id668 . -1) (#("." 0 1 (fontified t)) . -7354) (undo-tree-id669 . -1) (#("n" 0 1 (fontified t)) . -7355) (undo-tree-id670 . -1) (#("a" 0 1 (fontified t)) . -7356) (undo-tree-id671 . -1) 7357) nil (25557 8264 913839 386000) 0 nil])
([nil nil ((7340 . 7345)) nil (25557 8264 913812 677000) 0 nil])
([nil nil ((7340 . 7351) (#("next_" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . -7340) (undo-tree-id654 . -5) 7345) nil (25557 8264 913811 454000) 0 nil])
([nil nil ((7351 . 7356)) nil (25557 8264 913809 653000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -7391) (undo-tree-id640 . -1) (#("r" 0 1 (fontified t)) . -7392) (undo-tree-id641 . -1) (#("o" 0 1 (fontified t)) . -7393) (undo-tree-id642 . -1) (#("u" 0 1 (fontified t)) . -7394) (undo-tree-id643 . -1) (#("p" 0 1 (fontified t)) . -7395) (undo-tree-id644 . -1) (#("_" 0 1 (fontified t)) . -7396) (undo-tree-id645 . -1) (#("t" 0 1 (fontified t)) . -7397) (undo-tree-id646 . -1) (#("a" 0 1 (fontified t)) . -7398) (undo-tree-id647 . -1) (#("b" 0 1 (fontified t)) . -7399) (undo-tree-id648 . -1) (#("l" 0 1 (fontified t)) . -7400) (undo-tree-id649 . -1) (#("e" 0 1 (fontified t)) . -7401) (undo-tree-id650 . -1) (#("[" 0 1 (fontified t)) . -7402) (undo-tree-id651 . -1) (#("i" 0 1 (fontified t)) . -7403) (undo-tree-id652 . -1) (#("]" 0 1 (fontified t)) . -7404) (undo-tree-id653 . -1) 7405) nil (25557 8264 913806 777000) 0 nil])
([nil nil ((7391 . 7393)) nil (25557 8264 913793 592000) 0 nil])
([nil nil ((7393 . 7396)) nil (25557 8264 913792 861000) 0 nil])
([nil nil ((#("-" 0 1 (ws-butler-chg chg fontified t)) . -7395) (undo-tree-id639 . -1) 7396) nil (25557 8264 913791 574000) 0 nil])
([nil nil ((7395 . 7399)) nil (25557 8264 913789 263000) 0 nil])
([nil nil ((7391 . 7402) (#("next_buc" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t)) . -7391) (undo-tree-id636 . -8) (undo-tree-id637 . -5) (undo-tree-id638 . -8) 7399) nil (25557 8264 913784 850000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7351) (undo-tree-id675 . -1) 7352 (t 25557 8264 984912 331000)) nil (25557 8270 484146 7000) 0 nil])
([nil nil ((7351 . 7353)) nil (25557 8270 484143 700000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7403) (undo-tree-id674 . -1) 7404) nil (25557 8270 484141 619000) 0 nil])
([nil nil ((7403 . 7405)) nil (25557 8270 484129 473000) 0 nil])
([nil nil ((#("5" 0 1 (c-in-sws t fontified t)) . -331) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("1" 0 1 (c-in-sws t fontified t)) . -332) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("2" 0 1 (c-in-sws t fontified t)) . -333) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) 334 (t 25557 8270 560896 12000)) nil (25557 8388 76069 756000) 0 nil])
([nil nil ((331 . 335)) nil (25557 8388 76060 28000) 0 nil])
([nil nil ((#("2" 0 1 (c-in-sws t ws-butler-chg chg fontified t)) . -333) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("4" 0 1 (c-in-sws t ws-butler-chg chg fontified t)) . -334) (undo-tree-id678 . -1) 335) nil (25557 8388 76057 448000) 0 nil])
([nil nil ((333 . 335)) nil (25557 8388 76043 345000) 0 nil])
([nil nil ((2360 . 2368) (t 25557 8388 144304 406000)) nil (25557 8479 672987 636000) 0 nil])
([nil nil ((2409 . 2418)) nil (25557 8479 672982 111000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-string-face fontified t)) . -2315) (undo-tree-id693 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -2316) (undo-tree-id694 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2317) (undo-tree-id695 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -2318) (undo-tree-id696 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -2319) (undo-tree-id697 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2320) (undo-tree-id698 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2321) (undo-tree-id699 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -2322) (undo-tree-id700 . -1) 2323 (t 25557 8479 751610 470000)) nil (25557 8517 914502 634000) 0 nil])
([nil nil ((2315 . 2320)) nil (25557 8517 914495 841000) 0 nil])
([nil nil ((2352 . 2353)) nil (25557 8517 914495 154000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2352) (undo-tree-id692 . -1) 2353) nil (25557 8517 914494 56000) 0 nil])
([nil nil ((2352 . 2356)) nil (25557 8517 914491 711000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (undo-tree-id690 . -1) (#("r" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("e" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("w" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("a" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("d" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("a" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("w" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("d" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("w" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("a" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("b" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (undo-tree-id691 . -1) (#("b" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("a" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("l" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356) (#("B" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 2356)) nil (25557 8517 914486 618000) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-string-face fontified t)) . -2315) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 2316 (t 25557 8517 991358 433000)) nil (25557 8530 62708 949000) 0 nil])
([nil nil ((2315 . 2316)) nil (25557 8530 62704 887000) 0 nil])
([nil nil ((2352 . 2353)) nil (25557 8530 62703 698000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -2353) (undo-tree-id701 . -1) 2354) nil (25557 8530 62699 961000) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-string-face fontified t)) . -2277) (undo-tree-id709 . -1) 2278 (t 25557 8530 171282 11000)) nil (25557 8557 124635 159000) 0 nil])
([nil nil ((2277 . 2278)) nil (25557 8557 124633 467000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2277) (undo-tree-id708 . -1) 2278) nil (25557 8557 124632 622000) 0 nil])
([nil nil ((2277 . 2278)) nil (25557 8557 124631 33000) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-string-face fontified t)) . -2315) (undo-tree-id707 . -1) 2316) nil (25557 8557 124630 129000) 0 nil])
([nil nil ((2315 . 2316)) nil (25557 8557 124628 239000) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-string-face fontified t)) . -2352) (undo-tree-id706 . -1) 2353) nil (25557 8557 124626 486000) 0 nil])
([nil nil ((2352 . 2353)) nil (25557 8557 124614 528000) 0 nil])
([nil nil ((2254 . 2256) (t 25557 8557 203118 398000)) nil (25557 8618 529178 759000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t)) . -2255) (undo-tree-id719 . -1) 2256) nil (25557 8618 529177 829000) 0 nil])
([nil nil ((2255 . 2259)) nil (25557 8618 529176 379000) 0 nil])
([nil nil ((2259 . 2260)) nil (25557 8618 529175 764000) 0 nil])
([nil nil ((2260 . 2266)) nil (25557 8618 529175 86000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2265) (undo-tree-id718 . -1) 2266) nil (25557 8618 529174 254000) 0 nil])
([nil nil ((2265 . 2268)) nil (25557 8618 529172 842000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -2267) (undo-tree-id717 . -1) 2268) nil (25557 8618 529172 5000) 0 nil])
([nil nil ((2267 . 2270)) nil (25557 8618 529170 579000) 0 nil])
([nil nil ((2270 . 2271)) nil (25557 8618 529169 948000) 0 nil])
([nil nil ((#("char* test=Brau;" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t) 1 2 (face font-lock-type-face ws-butler-chg chg fontified t) 2 3 (face font-lock-type-face ws-butler-chg chg fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (face font-lock-variable-name-face ws-butler-chg chg fontified t) 7 8 (face font-lock-variable-name-face ws-butler-chg chg fontified t) 8 9 (face font-lock-variable-name-face ws-butler-chg chg fontified t) 9 10 (face font-lock-variable-name-face ws-butler-chg chg fontified t) 10 11 (ws-butler-chg chg fontified t) 11 12 (ws-butler-chg chg fontified t) 12 13 (ws-butler-chg chg fontified t) 13 14 (ws-butler-chg chg fontified t) 14 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t)) . 2255) (undo-tree-id715 . -16) (undo-tree-id716 . -16)) nil (25557 8618 529169 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2270 . 2271) (nil fontified nil 2270 . 2271) (nil fontified nil 2269 . 2270) (nil fontified nil 2268 . 2269) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2264 . 2265) (nil fontified nil 2263 . 2264) (nil fontified nil 2262 . 2263) (nil fontified nil 2261 . 2262) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (2255 . 2271)) nil (25557 8618 529166 110000) 0 nil])
([nil nil ((2266 . 2267)) nil (25557 8618 529163 80000) 0 nil])
([nil nil ((2271 . 2272) (nil syntax-table nil 2272 . 2273) (nil syntax-table (1) 2266 . 2267)) nil (25557 8618 529162 245000) 0 nil])
([nil nil ((#("char* test=\"Brau\";" 0 1 (face font-lock-type-face fontified t ws-butler-chg chg) 1 2 (face font-lock-type-face fontified t ws-butler-chg chg) 2 3 (face font-lock-type-face fontified t ws-butler-chg chg) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 7 8 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 9 10 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg) 11 12 (face font-lock-string-face fontified t ws-butler-chg chg) 12 13 (face font-lock-string-face fontified t ws-butler-chg chg) 13 14 (face font-lock-string-face fontified t ws-butler-chg chg) 14 15 (face font-lock-string-face fontified t ws-butler-chg chg) 15 16 (face font-lock-string-face fontified t ws-butler-chg chg) 16 17 (face font-lock-string-face fontified t ws-butler-chg chg) 17 18 (rear-nonsticky t fontified t ws-butler-chg chg)) . 2255) (undo-tree-id710 . -18) (undo-tree-id711 . -18) (undo-tree-id712 . -12) (undo-tree-id713 . -17) (undo-tree-id714 . -18)) nil (25557 8618 529160 509000) 0 nil])
([nil nil ((nil fontified nil 2272 . 2273) (nil fontified nil 2271 . 2272) (nil fontified nil 2270 . 2271) (nil fontified nil 2269 . 2270) (nil fontified nil 2268 . 2269) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2264 . 2265) (nil fontified nil 2263 . 2264) (nil fontified nil 2262 . 2263) (nil fontified nil 2261 . 2262) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (2255 . 2273)) nil (25557 8618 529149 206000) 0 nil])
([nil nil ((2273 . 2275)) nil (25557 8618 529145 198000) 0 nil])
([nil nil ((nil fontified nil 2292 . 2293) (nil fontified nil 2291 . 2292) (nil fontified nil 2290 . 2291) (nil fontified nil 2289 . 2290) (nil fontified nil 2288 . 2289) (nil fontified nil 2287 . 2288) (nil fontified nil 2286 . 2287) (nil fontified nil 2285 . 2286) (nil fontified nil 2284 . 2285) (nil fontified nil 2283 . 2284) (nil fontified nil 2282 . 2283) (nil fontified nil 2281 . 2282) (nil fontified nil 2280 . 2281) (nil fontified nil 2279 . 2280) (nil fontified nil 2278 . 2279) (nil fontified nil 2277 . 2278) (nil fontified nil 2276 . 2277) (nil fontified nil 2275 . 2276) (2275 . 2293)) nil (25557 8618 529140 18000) 0 nil])
([nil nil ((2293 . 2295) (t 25557 8618 610773 762000)) nil (25557 8619 993828 408000) 0 nil])
([nil nil ((nil fontified nil 2312 . 2313) (nil fontified nil 2311 . 2312) (nil fontified nil 2310 . 2311) (nil fontified nil 2309 . 2310) (nil fontified nil 2308 . 2309) (nil fontified nil 2307 . 2308) (nil fontified nil 2306 . 2307) (nil fontified nil 2305 . 2306) (nil fontified nil 2304 . 2305) (nil fontified nil 2303 . 2304) (nil fontified nil 2302 . 2303) (nil fontified nil 2301 . 2302) (nil fontified nil 2300 . 2301) (nil fontified nil 2299 . 2300) (nil fontified nil 2298 . 2299) (nil fontified nil 2297 . 2298) (nil fontified nil 2296 . 2297) (nil fontified nil 2295 . 2296) (2295 . 2313)) nil (25557 8619 993822 665000) 0 nil])
([nil nil ((2313 . 2315) (t 25557 8620 78765 932000)) nil (25557 8628 664989 126000) 0 nil])
([nil nil ((nil fontified nil 2332 . 2333) (nil fontified nil 2331 . 2332) (nil fontified nil 2330 . 2331) (nil fontified nil 2329 . 2330) (nil fontified nil 2328 . 2329) (nil fontified nil 2327 . 2328) (nil fontified nil 2326 . 2327) (nil fontified nil 2325 . 2326) (nil fontified nil 2324 . 2325) (nil fontified nil 2323 . 2324) (nil fontified nil 2322 . 2323) (nil fontified nil 2321 . 2322) (nil fontified nil 2320 . 2321) (nil fontified nil 2319 . 2320) (nil fontified nil 2318 . 2319) (nil fontified nil 2317 . 2318) (nil fontified nil 2316 . 2317) (nil fontified nil 2315 . 2316) (2315 . 2333)) nil (25557 8628 664987 676000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2288) (undo-tree-id720 . -1) 2289) nil (25557 8628 664983 853000) 0 nil])
([nil nil ((2288 . 2289)) nil (25557 8628 664975 660000) 0 nil])
([nil nil ((2309 . 2312)) nil (25557 8628 664974 480000) 0 nil])
([nil nil ((2333 . 2334)) nil (25557 8628 664970 55000) 0 nil])
([nil nil ((2285 . 2286) (t 25557 8628 742720 73000)) nil (25557 8641 204920 288000) 0 nil])
([nil nil ((2306 . 2307)) nil (25557 8641 204919 441000) 0 nil])
([nil nil ((2330 . 2331)) nil (25557 8641 204918 732000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-string-face fontified t)) . -2363) (undo-tree-id736 . -1) (nil syntax-table nil 2372 . 2373) (nil syntax-table (1) 2362 . 2363) (#("ö" 0 1 (face font-lock-string-face fontified t)) . -2364) (undo-tree-id737 . -1) (nil syntax-table nil 2373 . 2374) (nil syntax-table (1) 2362 . 2363) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2365) (undo-tree-id738 . -1) (nil syntax-table nil 2374 . 2375) (nil syntax-table (1) 2362 . 2363) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2366) (undo-tree-id739 . -1) (nil syntax-table nil 2375 . 2376) (nil syntax-table (1) 2362 . 2363) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2367) (undo-tree-id740 . -1) (nil syntax-table nil 2376 . 2377) (nil syntax-table (1) 2362 . 2363) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2368) (undo-tree-id741 . -1) (nil syntax-table nil 2377 . 2378) (nil syntax-table (1) 2362 . 2363) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2369) (undo-tree-id742 . -1) 2370) nil (25557 8641 204916 392000) 0 nil])
([nil nil ((2364 . 2365) (nil syntax-table nil 2372 . 2373) (nil syntax-table (1) 2362 . 2363) (2363 . 2364) (nil syntax-table nil 2371 . 2372) (nil syntax-table (1) 2362 . 2363)) nil (25557 8641 204908 663000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -2362) (undo-tree-id733 . -1) (nil syntax-table nil 2371 . 2372) (nil syntax-table (1) 2362 . 2363) (#("t" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2363) (undo-tree-id734 . -1) (nil syntax-table nil 2372 . 2373) (nil syntax-table (1) 2362 . 2363) (#("e" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2364) (undo-tree-id735 . -1) (nil syntax-table nil 2373 . 2374) (nil syntax-table (1) 2362 . 2363)) nil (25557 8641 204906 429000) 0 nil])
([nil nil ((2362 . 2367)) nil (25557 8641 204902 244000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -2366) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) 2367) nil (25557 8641 204898 308000) 0 nil])
([nil nil ((#("test" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2362) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (t 25557 8641 286654 709000)) nil (25557 8653 733465 127000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2365 . 2366) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (2362 . 2366)) nil (25557 8653 733463 18000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -2396) (undo-tree-id765 . -1) (nil syntax-table nil 2405 . 2406) (nil syntax-table (1) 2396 . 2397) (#("B" 0 1 (face font-lock-string-face fontified t)) . -2397) (undo-tree-id766 . -1) (nil syntax-table nil 2406 . 2407) (nil syntax-table (1) 2396 . 2397) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2398) (undo-tree-id767 . -1) (nil syntax-table nil 2407 . 2408) (nil syntax-table (1) 2396 . 2397) (#("l" 0 1 (face font-lock-string-face fontified t)) . -2399) (undo-tree-id768 . -1) (nil syntax-table nil 2408 . 2409) (nil syntax-table (1) 2396 . 2397) (#("l" 0 1 (face font-lock-string-face fontified t)) . -2400) (undo-tree-id769 . -1) (nil syntax-table nil 2409 . 2410) (nil syntax-table (1) 2396 . 2397) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2401) (undo-tree-id770 . -1) (nil syntax-table nil 2410 . 2411) (nil syntax-table (1) 2396 . 2397) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2402) (undo-tree-id771 . -1) 2403) nil (25557 8653 733460 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2399 . 2400) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (2396 . 2400)) nil (25557 8653 733451 528000) 0 nil])
([nil nil ((2400 . 2401)) nil (25557 8653 733450 88000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -2431) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (nil syntax-table nil 2440 . 2441) (nil syntax-table (1) 2431 . 2432) (#("B" 0 1 (face font-lock-string-face fontified t)) . -2432) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (nil syntax-table nil 2441 . 2442) (nil syntax-table (1) 2431 . 2432) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2433) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (nil syntax-table nil 2442 . 2443) (nil syntax-table (1) 2431 . 2432) (#("s" 0 1 (face font-lock-string-face fontified t)) . -2434) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (nil syntax-table nil 2443 . 2444) (nil syntax-table (1) 2431 . 2432) (#("s" 0 1 (face font-lock-string-face fontified t)) . -2435) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (nil syntax-table nil 2444 . 2445) (nil syntax-table (1) 2431 . 2432) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2436) (undo-tree-id764 . -1) 2437) nil (25557 8653 733447 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2434 . 2435) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (2431 . 2435)) nil (25557 8653 733430 288000) 0 nil])
([nil nil ((2435 . 2436)) nil (25557 8653 733428 796000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2478 . 2479) (nil syntax-table (1) 2469 . 2470) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2479 . 2480) (nil syntax-table (1) 2470 . 2471) (#("r" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2480 . 2481) (nil syntax-table (1) 2471 . 2472) (#("q" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2481 . 2482) (nil syntax-table (1) 2472 . 2473) (#("d" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2482 . 2483) (nil syntax-table (1) 2473 . 2474) (#("w" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2483 . 2484) (nil syntax-table (1) 2474 . 2475) (#("d" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2484 . 2485) (nil syntax-table (1) 2475 . 2476) (#("w" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2485 . 2486) (nil syntax-table (1) 2476 . 2477) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2486 . 2487) (nil syntax-table (1) 2477 . 2478) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2487 . 2488) (nil syntax-table (1) 2478 . 2479) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2488 . 2489) (nil syntax-table (1) 2479 . 2480) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2489 . 2490) (nil syntax-table (1) 2480 . 2481) (#("e" 0 1 (ws-butler-chg delete fontified t)) . 2466) (undo-tree-id743 . -1) (nil syntax-table nil 2490 . 2491) (nil syntax-table (1) 2481 . 2482) (#("b" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2491 . 2492) (nil syntax-table (1) 2482 . 2483) (#("b" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2492 . 2493) (nil syntax-table (1) 2483 . 2484) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2493 . 2494) (nil syntax-table (1) 2484 . 2485) (#("l" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2494 . 2495) (nil syntax-table (1) 2485 . 2486) (#("B" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2495 . 2496) (nil syntax-table (1) 2486 . 2487) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 2466)) nil (25557 8653 733424 741000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2475 . 2476) (nil syntax-table (1) 2466 . 2467) (#("s" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2476 . 2477) (nil syntax-table (1) 2467 . 2468) (#("o" 0 1 (ws-butler-chg delete fontified t)) . 2466) (nil syntax-table nil 2477 . 2478) (nil syntax-table (1) 2468 . 2469)) nil (25557 8653 733407 308000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2469 . 2470) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (2466 . 2470)) nil (25557 8653 733401 759000) 0 nil])
([nil nil ((#("t" 0 1 (rear-nonsticky t fontified t)) . -2469) (undo-tree-id775 . -1) 2470 (t 25557 8653 810590 622000)) nil (25557 8656 277075 189000) 0 nil])
([nil nil ((2469 . 2470)) nil (25557 8656 277072 871000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t ws-butler-chg chg)) . -2469) (undo-tree-id774 . -1) 2470) nil (25557 8656 277070 907000) 0 nil])
([nil nil ((2469 . 2471)) nil (25557 8656 277058 597000) 0 nil])
([nil nil ((2340 . 2342) (t 25557 8656 362577 699000)) nil (25557 8657 595021 771000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2341) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) 2342) nil (25557 8657 595017 302000) 0 nil])
([nil nil ((2341 . 2342) 2342 (t 25557 8657 670571 95000)) nil (25557 8663 397614 355000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2341) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) 2342 (t 25557 8657 670571 95000)) nil (25557 8663 397612 240000) 0 nil])
([nil nil ((2254 . 2256) (#(" " 0 1 (fontified t)) . 2254) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) 2255) nil (25557 8663 397605 98000) 0 nil])
([nil nil ((2290 . 2291) (t 25557 8663 474541 936000)) nil (25557 8681 200849 92000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-string-face fontified t)) . -2289) (undo-tree-id793 . -1) 2290) nil (25557 8681 200847 954000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-string-face fontified t)) . -2310) (undo-tree-id792 . -1) 2311) nil (25557 8681 200829 212000) 0 nil])
([nil nil ((2310 . 2311)) nil (25557 8681 200827 308000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-string-face fontified t)) . -2334) (undo-tree-id791 . -1) 2335) nil (25557 8681 200826 150000) 0 nil])
([nil nil ((2334 . 2336)) nil (25557 8681 200823 702000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2335) (undo-tree-id790 . -1) 2336) nil (25557 8681 200819 985000) 0 nil])
([nil nil ((#("return hash;" 0 1 (c-is-sws t face font-lock-keyword-face fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 12 (fontified t)) . 7784) (undo-tree-id856 . -12) (undo-tree-id857 . -12) (undo-tree-id858 . -12) (undo-tree-id859 . -12) (undo-tree-id860 . -12) (undo-tree-id861 . -12) (undo-tree-id862 . -12) (t 25557 8681 278453 907000)) nil (25557 8748 2781 416000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . -7779) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (#("
" 0 1 (c-is-sws t fontified t)) . -7780) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -7781) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -7782) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -7783) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 7784) nil (25557 8748 2770 437000) 0 nil])
([nil nil ((7783 . 7786) (t 25557 8748 78140 582000)) nil (25557 8749 541694 960000) 0 nil])
([nil nil ((7784 . 7787) (#("  " 0 2 (ws-butler-chg chg fontified t)) . 7784) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) 7786) nil (25557 8749 541692 792000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7798 . 7799) (nil fontified nil 7793 . 7799) (nil fontified nil 7788 . 7793) (nil fontified nil 7787 . 7788) (7787 . 7799)) nil (25557 8749 541679 208000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2693) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) 2694 (t 25557 8749 630133 588000)) nil (25557 9054 487874 31000) 0 nil])
([nil nil ((2690 . 2694) (t 25557 9054 576918 823000)) nil (25557 9082 466852 789000) 0 nil])
([nil nil ((2691 . 2695) (#("   " 0 3 (ws-butler-chg chg fontified t)) . 2691) (undo-tree-id884 . -3) 2694) nil (25557 9082 466851 692000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2694) (undo-tree-id883 . -1) 2695) nil (25557 9082 466850 5000) 0 nil])
([nil nil ((2694 . 2697)) nil (25557 9082 466848 611000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -2694) (undo-tree-id880 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -2695) (undo-tree-id881 . -1) (#("r" 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified t)) . -2696) (undo-tree-id882 . -1) 2697) nil (25557 9082 466847 500000) 0 nil])
([nil nil ((2694 . 2699)) nil (25557 9082 466844 529000) 0 nil])
([nil nil ((2699 . 2700) (#("while" 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified nil) 1 2 (face font-lock-keyword-face ws-butler-chg chg fontified nil) 2 3 (face font-lock-keyword-face ws-butler-chg chg fontified nil) 3 5 (face font-lock-keyword-face ws-butler-chg chg fontified nil)) . 2699) (undo-tree-id879 . -5) (2694 . 2699) 2699) nil (25557 9082 466843 566000) 0 nil])
([nil nil ((2700 . 2701)) nil (25557 9082 466841 523000) 0 nil])
([nil nil ((#("while()" 0 5 (face font-lock-keyword-face ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t)) . 2694) (undo-tree-id877 . -6) (undo-tree-id878 . -7)) nil (25557 9082 466840 150000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 2692) (undo-tree-id871 . -2) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) 2694) nil (25557 9082 466834 647000) 0 nil])
([nil nil ((2692 . 2694) 2694 (t 25557 9082 556817 726000)) nil (25557 9085 953185 664000) 0 nil])
([nil nil ((2685 . 2690) (t 25557 9082 556817 726000)) nil (25557 9085 953184 475000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2696 . 2697) (nil fontified nil 2696 . 2697) (nil fontified nil 2695 . 2696) (nil fontified nil 2690 . 2695) (2690 . 2697)) nil (25557 9085 953182 774000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 2704) 2697) nil (25557 9085 953177 834000) 0 nil])
([nil nil ((#("group_table[i]" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 2586) (undo-tree-id885 . -14) (undo-tree-id886 . -8) (undo-tree-id887 . -14) (undo-tree-id888 . -14) (undo-tree-id889 . -14) 2600 (t 25557 9086 28805 260000)) nil (25557 9093 998056 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2599 . 2600) (nil fontified nil 2599 . 2600) (nil fontified nil 2598 . 2599) (nil fontified nil 2597 . 2598) (nil fontified nil 2586 . 2597) (2586 . 2600)) nil (25557 9093 998044 885000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2709 . 2710) (nil fontified nil 2709 . 2710) (nil fontified nil 2708 . 2709) (nil fontified nil 2707 . 2708) (nil fontified nil 2696 . 2707) (2696 . 2710)) nil (25557 9093 998039 898000) 0 nil])
([nil nil ((2710 . 2715) (t 25557 9094 80776 405000)) nil (25557 9100 242034 633000) 0 nil])
([nil nil ((2715 . 2721)) nil (25557 9100 242029 931000) 0 nil])
([nil nil ((2722 . 2723) (t 25557 9100 320754 97000)) nil (25557 9108 253275 906000) 0 nil])
([nil nil ((2723 . 2724)) nil (25557 9108 253275 114000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg chg fontified t)) . -2723) (undo-tree-id902 . -1) 2724) nil (25557 9108 253274 208000) 0 nil])
([nil nil ((2723 . 2724)) nil (25557 9108 253272 502000) 0 nil])
([nil nil ((2722 . 2729)) nil (25557 9108 253271 767000) 0 nil])
([nil nil ((2730 . 2737)) nil (25557 9108 253270 985000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2727) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2728) (undo-tree-id901 . -1) 2729) nil (25557 9108 253269 403000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2733) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2734) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) 2735) nil (25557 9108 253261 285000) 0 nil])
([nil nil ((2728 . 2735) (t 25557 9108 320725 571000)) nil (25557 9109 888303 918000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2734) (undo-tree-id907 . -1) (undo-tree-id908 . -1) 2735) nil (25557 9109 888302 313000) 0 nil])
([nil nil ((#("     " 0 5 (ws-butler-chg chg fontified t)) . 2729) (undo-tree-id903 . -5) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) 2734) nil (25557 9109 888296 477000) 0 nil])
([nil nil ((2729 . 2734) 2734 (t 25557 9109 960719 731000)) nil (25557 9124 68116 243000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2728) (undo-tree-id912 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2729) (undo-tree-id913 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2730) (undo-tree-id914 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2731) (undo-tree-id915 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2732) (undo-tree-id916 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2733) (undo-tree-id917 . -1) 2734 (t 25557 9109 960719 731000)) nil (25557 9124 68114 296000) 0 nil])
([nil nil ((2728 . 2735)) nil (25557 9124 68107 550000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 2729) (undo-tree-id911 . -6) 2735) nil (25557 9124 68106 501000) 0 nil])
([nil nil ((2696 . 2697)) nil (25557 9124 68104 902000) 0 nil])
([nil nil ((#("group_table[i].next==NULL" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t rear-nonsticky t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (face font-lock-constant-face fontified t) 22 23 (face font-lock-constant-face fontified t) 23 24 (face font-lock-constant-face fontified t) 24 25 (face font-lock-constant-face fontified t)) . 2697) (undo-tree-id909 . -25) (undo-tree-id910 . -25) 2722) nil (25557 9124 68103 774000) 0 nil])
([nil nil ((2705 . 2712)) nil (25557 9124 68094 595000) 0 nil])
([nil nil ((2712 . 2714)) nil (25557 9124 68093 367000) 0 nil])
([nil nil ((2705 . 2711) (#("     " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg) 4 5 (fontified nil ws-butler-chg chg)) . 2705) (nil rear-nonsticky nil 2737 . 2738) (nil fontified nil 2737 . 2738) (nil fontified nil 2736 . 2737) (nil fontified nil 2735 . 2736) (nil fontified nil 2734 . 2735) (nil fontified nil 2733 . 2734) (nil fontified nil 2732 . 2733) (nil fontified nil 2731 . 2732) (nil fontified nil 2730 . 2731) (nil fontified nil 2729 . 2730) (nil fontified nil 2728 . 2729) (nil fontified nil 2727 . 2728) (nil fontified nil 2726 . 2727) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (nil fontified nil 2713 . 2724) (2713 . 2738)) nil (25557 9124 68087 509000) 0 nil])
([nil nil ((2740 . 2741) (t 25557 9124 148669 363000)) nil (25557 9130 400097 816000) 0 nil])
([nil nil ((2741 . 2743)) nil (25557 9130 400096 879000) 0 nil])
([nil nil ((2742 . 2749)) nil (25557 9130 400096 106000) 0 nil])
([nil nil ((2749 . 2750)) nil (25557 9130 400095 286000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -2748) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t)) . -2749) (undo-tree-id921 . -1) (undo-tree-id922 . -1) 2750) nil (25557 9130 400093 502000) 0 nil])
([nil nil ((2748 . 2749)) nil (25557 9130 400081 705000) 0 nil])
([nil nil ((2749 . 2750)) nil (25557 9130 400077 378000) 0 nil])
([nil nil ((2751 . 2758) (t 25557 9130 472646 986000)) nil (25557 9132 129274 484000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 2752) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) 2758) nil (25557 9132 129269 526000) 0 nil])
([nil nil ((2752 . 2758) 2758 (t 25557 9132 208640 852000)) nil (25557 9133 61955 659000) 0 nil])
([nil nil ((#("      " 0 6 (ws-butler-chg chg fontified t)) . 2752) (undo-tree-id928 . -6) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) 2758 (t 25557 9132 208640 852000)) nil (25557 9133 61953 695000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2710) (undo-tree-id926 . -1) (undo-tree-id927 . -1) 2711) nil (25557 9133 61946 3000) 0 nil])
([nil nil ((2751 . 2752) (t 25557 9133 140637 560000)) nil (25557 9135 294217 875000) 0 nil])
([nil nil ((2752 . 2756)) nil (25557 9135 294216 503000) 0 nil])
([nil nil ((#("     " 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . 2751) (undo-tree-id934 . -5) (undo-tree-id935 . -5) 2756) nil (25557 9135 294196 429000) 0 nil])
([nil nil ((2751 . 2756) 2756 (t 25557 9135 376629 664000)) nil (25557 9177 126938 889000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2752) (undo-tree-id961 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2753) (undo-tree-id962 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2754) (undo-tree-id963 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2755) (undo-tree-id964 . -1) 2756 (t 25557 9135 376629 664000)) nil (25557 9177 126937 393000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2751) (undo-tree-id960 . -1) 2752) nil (25557 9177 126933 434000) 0 nil])
([nil nil ((2686 . 2687)) nil (25557 9177 126931 962000) 0 nil])
([nil nil ((2686 . 2695)) nil (25557 9177 126931 265000) 0 nil])
([nil nil ((2695 . 2700)) nil (25557 9177 126930 575000) 0 nil])
([nil nil ((#("B" 0 1 (ws-butler-chg chg fontified t)) . -2696) (undo-tree-id956 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -2697) (undo-tree-id957 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -2698) (undo-tree-id958 . -1) (#("k" 0 1 (ws-butler-chg chg fontified t)) . -2699) (undo-tree-id959 . -1) 2700) nil (25557 9177 126929 395000) 0 nil])
([nil nil ((2696 . 2699)) nil (25557 9177 126924 810000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -2697) (undo-tree-id954 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -2698) (undo-tree-id955 . -1) 2699) nil (25557 9177 126923 851000) 0 nil])
([nil nil ((2697 . 2698)) nil (25557 9177 126921 454000) 0 nil])
([nil nil ((#("G" 0 1 (ws-butler-chg chg fontified t)) . -2696) (undo-tree-id952 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -2697) (undo-tree-id953 . -1) 2698) nil (25557 9177 126920 408000) 0 nil])
([nil nil ((2696 . 2702)) nil (25557 9177 126917 866000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t)) . -2700) (undo-tree-id950 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -2701) (undo-tree-id951 . -1) 2702) nil (25557 9177 126916 878000) 0 nil])
([nil nil ((#("G" 0 1 (ws-butler-chg chg fontified t)) . -2696) (undo-tree-id946 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -2697) (undo-tree-id947 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -2698) (undo-tree-id948 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t)) . -2699) (undo-tree-id949 . -1) 2700) nil (25557 9177 126913 913000) 0 nil])
([nil nil ((2696 . 2698)) nil (25557 9177 126897 52000) 0 nil])
([nil nil ((#("T" 0 1 (ws-butler-chg chg fontified t)) . -2696) (undo-tree-id944 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -2697) (undo-tree-id945 . -1) 2698) nil (25557 9177 126895 932000) 0 nil])
([nil nil ((2696 . 2697)) nil (25557 9177 126893 454000) 0 nil])
([nil nil ((2690 . 2712) (#("Regex_G" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t)) . -2690) (undo-tree-id943 . -7) 2697) nil (25557 9177 126892 530000) 0 nil])
([nil nil ((2712 . 2719)) nil (25557 9177 126890 509000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -2712) (undo-tree-id936 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2713) (undo-tree-id937 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2714) (undo-tree-id938 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2715) (undo-tree-id939 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2716) (undo-tree-id940 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2717) (undo-tree-id941 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2718) (undo-tree-id942 . -1) 2719) nil (25557 9177 126874 874000) 0 nil])
([nil nil ((2712 . 2718)) nil (25557 9177 126846 718000) 0 nil])
([nil nil ((2718 . 2719)) nil (25557 9177 126845 555000) 0 nil])
([nil nil ((2719 . 2720)) nil (25557 9177 126841 4000) 0 nil])
([nil nil ((#("if(group_table[i].next==NULL) { break ;}" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t rear-nonsticky t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (face font-lock-constant-face fontified t) 25 26 (face font-lock-constant-face fontified t) 26 27 (face font-lock-constant-face fontified t) 27 28 (face font-lock-constant-face fontified t rear-nonsticky t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (face font-lock-keyword-face fontified t) 33 34 (face font-lock-keyword-face fontified t) 34 35 (face font-lock-keyword-face fontified t) 35 36 (face font-lock-keyword-face fontified t) 36 37 (face font-lock-keyword-face fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t)) . 2745) (undo-tree-id971 . -3) (undo-tree-id972 . -3) (undo-tree-id973 . -40) (t 25557 9177 220482 870000)) nil (25557 9187 768493 981000) 0 nil])
([nil nil ((2720 . 2725)) nil (25557 9187 768490 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2764 . 2765) (nil fontified nil 2764 . 2765) (nil fontified nil 2763 . 2764) (nil fontified nil 2762 . 2763) (nil fontified nil 2761 . 2762) (nil fontified nil 2760 . 2761) (nil fontified nil 2759 . 2760) (nil fontified nil 2758 . 2759) (nil fontified nil 2757 . 2758) (nil fontified nil 2756 . 2757) (nil fontified nil 2755 . 2756) (nil fontified nil 2754 . 2755) (nil fontified nil 2753 . 2754) (nil fontified nil 2752 . 2753) (nil fontified nil 2751 . 2752) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2747 . 2748) (nil fontified nil 2746 . 2747) (nil fontified nil 2745 . 2746) (nil fontified nil 2744 . 2745) (nil fontified nil 2743 . 2744) (nil fontified nil 2742 . 2743) (nil fontified nil 2741 . 2742) (nil fontified nil 2740 . 2741) (nil fontified nil 2739 . 2740) (nil fontified nil 2728 . 2739) (nil fontified nil 2727 . 2728) (nil fontified nil 2726 . 2727) (nil fontified nil 2725 . 2726) (2725 . 2765)) nil (25557 9187 768488 409000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . 2785) (undo-tree-id965 . -5) (undo-tree-id966 . -5) (undo-tree-id967 . -5) (undo-tree-id968 . -5) (undo-tree-id969 . -5) (undo-tree-id970 . -5) 2765) nil (25557 9187 768480 225000) 0 nil])
([nil nil ((2767 . 2771) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 2767) (undo-tree-id974 . -1) (2766 . 2767) (#("   " 0 3 (fontified t)) . 2766) (undo-tree-id975 . -3) 2769 (t 25557 9187 844445 858000)) nil (25557 9193 62655 220000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2786) (undo-tree-id977 . -1) (#("
" 0 1 (fontified t)) . -2787) (undo-tree-id978 . -1) (#(" " 0 1 (fontified t)) . -2788) (undo-tree-id979 . -1) (#(" " 0 1 (fontified t)) . -2789) (undo-tree-id980 . -1) (#(" " 0 1 (fontified t)) . -2790) (undo-tree-id981 . -1) (#(" " 0 1 (fontified t)) . -2791) (undo-tree-id982 . -1) 2792 (t 25557 9193 164427 369000)) nil (25557 9197 81404 519000) 0 nil])
([nil nil ((2786 . 2791)) nil (25557 9197 81396 175000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2790) (undo-tree-id976 . -1) 2791) nil (25557 9197 81392 36000) 0 nil])
([nil nil ((2728 . 2729) (t 25557 9197 164413 480000)) nil (25557 9224 501857 700000) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-negation-char-face ws-butler-chg chg fontified t)) . -2728) (undo-tree-id1001 . -1) 2729) nil (25557 9224 501856 799000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2747) (undo-tree-id1000 . -1) 2748) nil (25557 9224 501855 194000) 0 nil])
([nil nil ((2747 . 2748)) nil (25557 9224 501852 517000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2758) (undo-tree-id994 . -1) (#("e" 0 1 (fontified t)) . -2759) (undo-tree-id995 . -1) (#("a" 0 1 (fontified t)) . -2760) (undo-tree-id996 . -1) (#("k" 0 1 (face font-lock-keyword-face fontified t)) . -2761) (undo-tree-id997 . -1) (#(" " 0 1 (fontified t)) . -2762) (undo-tree-id998 . -1) (#(";" 0 1 (fontified t)) . -2763) (undo-tree-id999 . -1) 2764) nil (25557 9224 501851 96000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2756) (undo-tree-id992 . -1) (#("b" 0 1 (fontified t)) . -2757) (undo-tree-id993 . -1) 2758) nil (25557 9224 501845 779000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2754) (undo-tree-id991 . -1) 2755) nil (25557 9224 501843 504000) 0 nil])
([nil nil ((2755 . 2760)) nil (25557 9224 501842 66000) 0 nil])
([nil nil ((2760 . 2761)) nil (25557 9224 501841 471000) 0 nil])
([nil nil ((2754 . 2761)) nil (25557 9224 501840 720000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2759) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2760) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) 2761) nil (25557 9224 501838 950000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2764) (undo-tree-id983 . -1) 2765) nil (25557 9224 501829 944000) 0 nil])
([nil nil ((#(" while(1)
    {
    }
" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t rear-nonsticky t) 9 10 (fontified t) 10 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 2771) (undo-tree-id1076 . -22) (undo-tree-id1077 . -7) (undo-tree-id1078 . -8) (undo-tree-id1079 . -16) (undo-tree-id1080 . -22) 2793 (t 25557 9224 580318 624000)) nil (25557 9237 117597 389000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . -2771) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (#(" " 0 1 (fontified t)) . -2772) (undo-tree-id1075 . -1) 2773) nil (25557 9237 117592 966000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2770) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 2771) nil (25557 9237 117565 186000) 0 nil])
([nil nil ((2721 . 2726) (#("    " 0 4 (fontified t)) . 2721) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) 2725) nil (25557 9237 117559 233000) 0 nil])
([nil nil ((2761 . 2768)) nil (25557 9237 117556 192000) 0 nil])
([nil nil ((2762 . 2769) (#("      " 0 6 (ws-butler-chg chg fontified t)) . 2762) (undo-tree-id1060 . -6) (undo-tree-id1061 . -6) (undo-tree-id1062 . -6) 2768) nil (25557 9237 117555 284000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -2761) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (#("
" 0 1 (ws-butler-chg chg fontified t)) . -2762) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2763) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2764) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2765) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2766) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2767) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2768) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) 2769) nil (25557 9237 117549 836000) 0 nil])
([nil nil ((2761 . 2768)) nil (25557 9237 117514 34000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2767) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 2768) nil (25557 9237 117512 594000) 0 nil])
([nil nil ((2787 . 2795) (#("    " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg)) . 2787) (2777 . 2785) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 2777) (nil rear-nonsticky nil 2788 . 2789) (nil fontified nil 2788 . 2789) (nil fontified nil 2787 . 2788) (nil fontified nil 2786 . 2787) (nil fontified nil 2785 . 2786) (nil fontified nil 2784 . 2785) (nil fontified nil 2783 . 2784) (nil fontified nil 2782 . 2783) (nil fontified nil 2781 . 2782) (nil fontified nil 2777 . 2781) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2773 . 2774) (nil fontified nil 2769 . 2773) (nil fontified nil 2768 . 2769) (nil fontified nil 2767 . 2768) (2767 . 2789)) nil (25557 9237 117498 32000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2762) (t 25557 9237 204275 147000)) nil (25557 9240 986527 887000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2776) (#(" " 0 1 (fontified t)) . 2776)) nil (25557 9240 986526 779000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2776)) nil (25557 9240 986525 725000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2783) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 2783) (#(" " 0 1 (fontified t)) . 2783)) nil (25557 9240 986524 228000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2789) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) 2790) nil (25557 9240 986519 818000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -2773) (undo-tree-id1087 . -1) 2774 (t 25557 9241 72261 847000)) nil (25557 9276 922088 16000) 0 nil])
([nil nil ((2773 . 2786)) nil (25557 9276 922085 913000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -2785) (undo-tree-id1086 . -1) 2786) nil (25557 9276 922084 589000) 0 nil])
([nil nil ((2785 . 2793)) nil (25557 9276 922075 507000) 0 nil])
([nil nil ((2793 . 2797)) nil (25557 9276 922070 727000) 0 nil])
([nil nil ((2719 . 2720) (t 25557 9277 24138 766000)) nil (25557 9291 13702 141000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . -2719) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) 2720) nil (25557 9291 13700 989000) 0 nil])
([nil nil ((2719 . 2720)) nil (25557 9291 13697 486000) 0 nil])
([nil nil ((#("if(group_table[i].next!=NULL)
    {" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t rear-nonsticky t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (face font-lock-constant-face fontified t) 25 26 (face font-lock-constant-face fontified t) 26 27 (face font-lock-constant-face fontified t) 27 28 (face font-lock-constant-face fontified t rear-nonsticky t) 28 29 (fontified t) 29 30 (fontified t) 30 34 (fontified t) 34 35 (fontified t)) . 2727) (undo-tree-id1101 . -35) (undo-tree-id1102 . -35) (undo-tree-id1103 . -30) (undo-tree-id1104 . -35) 2762) nil (25557 9291 13696 143000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t rear-nonsticky t)) . 2783)) nil (25557 9291 13679 242000) 0 nil])
([nil nil ((#("    " 0 3 (fontified t) 3 4 (fontified t)) . 2775) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (#("    " 0 4 (fontified t)) . 2723) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (undo-tree-id1100 . -4) 2783) nil (25557 9291 13674 811000) 0 nil])
([nil nil ((2775 . 2779) 2783 (t 25557 9291 100090 791000)) nil (25557 9304 514299 117000) 0 nil])
([nil nil ((2720 . 2721) (t 25557 9291 100090 791000)) nil (25557 9304 514298 32000) 0 nil])
([nil nil ((#("G" 0 1 (ws-butler-chg chg fontified t)) . -2720) (undo-tree-id1109 . -1) 2721) nil (25557 9304 514297 91000) 0 nil])
([nil nil ((2720 . 2723)) nil (25557 9304 514295 587000) 0 nil])
([nil nil ((2723 . 2724)) nil (25557 9304 514294 968000) 0 nil])
([nil nil ((2720 . 2731) (#("grou" 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t)) . -2720) (undo-tree-id1108 . -4) 2724) nil (25557 9304 514294 107000) 0 nil])
([nil nil ((2731 . 2733)) nil (25557 9304 514292 311000) 0 nil])
([nil nil ((2732 . 2733)) nil (25557 9304 514291 598000) 0 nil])
([nil nil ((#("o" 0 1 (ws-butler-chg chg fontified t)) . -2732) (undo-tree-id1107 . -1) 2733) nil (25557 9304 514290 479000) 0 nil])
([nil nil ((2732 . 2733)) nil (25557 9304 514282 381000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2789) 2734) nil (25557 9304 514277 977000) 0 nil])
([nil nil ((#("Regex_GroupTableBucket bucket=group_table[i];" 0 21 (face font-lock-type-face fontified t) 21 22 (face font-lock-type-face c-type c-decl-id-start fontified t) 22 23 (fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (fontified t) 30 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t)) . 2690) (undo-tree-id1115 . -44) (undo-tree-id1116 . -45) (t 25557 9304 588044 930000)) nil (25557 9310 686720 517000) 0 nil])
([nil nil ((2578 . 2582)) nil (25557 9310 686718 159000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2626 . 2627) (nil fontified nil 2626 . 2627) (nil fontified nil 2625 . 2626) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2612 . 2623) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (nil fontified nil 2582 . 2603) (2582 . 2627)) nil (25557 9310 686716 461000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2735) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) 2627) nil (25557 9310 686709 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2581) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) 2582 (t 25557 9310 764023 971000)) nil (25557 9311 591632 502000) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-negation-char-face fontified t)) . -2633) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (#("g" 0 1 (fontified t)) . -2634) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (#("r" 0 1 (fontified t)) . -2635) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (#("o" 0 1 (fontified t)) . -2636) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (#("u" 0 1 (fontified t)) . -2637) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (#("p" 0 1 (fontified t)) . -2638) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (#("_" 0 1 (fontified t)) . -2639) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (#("t" 0 1 (fontified t)) . -2640) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (#("a" 0 1 (fontified t)) . -2641) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (#("b" 0 1 (fontified t)) . -2642) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (#("l" 0 1 (fontified t)) . -2643) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (#("e" 0 1 (fontified t)) . -2644) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (#("[" 0 1 (fontified t)) . -2645) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (#("i" 0 1 (fontified t)) . -2646) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (#("]" 0 1 (fontified t rear-nonsticky t)) . -2647) (undo-tree-id1163 . -1) 2648 (t 25557 9311 664020 918000)) nil (25557 9318 701931 815000) 0 nil])
([nil nil ((2633 . 2639)) nil (25557 9318 701862 460000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2724) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (#("
" 0 1 (fontified t)) . -2725) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (#("
" 0 1 (fontified t)) . -2726) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 2727 (t 25557 9318 783996 782000)) nil (25557 9322 326382 164000) 0 nil])
([nil nil ((2724 . 2729) (t 25557 9322 407984 506000)) nil (25557 9329 942463 732000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2725) (undo-tree-id1200 . -4) 2729) nil (25557 9329 942462 604000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -2701) (undo-tree-id1186 . -1) (#("r" 0 1 (fontified t)) . -2702) (undo-tree-id1187 . -1) (#("o" 0 1 (fontified t)) . -2703) (undo-tree-id1188 . -1) (#("u" 0 1 (fontified t)) . -2704) (undo-tree-id1189 . -1) (#("p" 0 1 (fontified t)) . -2705) (undo-tree-id1190 . -1) (#("_" 0 1 (fontified t)) . -2706) (undo-tree-id1191 . -1) (#("t" 0 1 (fontified t)) . -2707) (undo-tree-id1192 . -1) (#("a" 0 1 (fontified t)) . -2708) (undo-tree-id1193 . -1) (#("b" 0 1 (fontified t)) . -2709) (undo-tree-id1194 . -1) (#("l" 0 1 (fontified t)) . -2710) (undo-tree-id1195 . -1) (#("e" 0 1 (fontified t)) . -2711) (undo-tree-id1196 . -1) (#("[" 0 1 (fontified t)) . -2712) (undo-tree-id1197 . -1) (#("i" 0 1 (fontified t)) . -2713) (undo-tree-id1198 . -1) (#("]" 0 1 (fontified t)) . -2714) (undo-tree-id1199 . -1) 2715) nil (25557 9329 942458 772000) 0 nil])
([nil nil ((2701 . 2704)) nil (25557 9329 942430 998000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -2702) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -2703) (undo-tree-id1185 . -1) 2704) nil (25557 9329 942429 42000) 0 nil])
([nil nil ((2702 . 2707)) nil (25557 9329 942416 18000) 0 nil])
([nil nil ((2627 . 2630) (#("   " 0 3 (fontified t)) . 2627) (undo-tree-id1201 . -3) 2630 (t 25557 9330 23958 725000)) nil (25557 9333 820086 114000) 0 nil])
([nil nil ((2630 . 2631)) nil (25557 9333 820073 939000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2719) (undo-tree-id1251 . -1) (#(" " 0 1 (fontified t)) . -2720) (undo-tree-id1252 . -1) (#(" " 0 1 (fontified t)) . -2721) (undo-tree-id1253 . -1) 2722 (t 25557 9333 911945 580000)) nil (25557 9343 777127 56000) 0 nil])
([nil nil ((2719 . 2721)) nil (25557 9343 777123 260000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2757) (#(" " 0 1 (fontified t)) . 2757)) nil (25557 9343 777122 377000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2762) (#(" " 0 1 (fontified t)) . 2762)) nil (25557 9343 777121 126000) 0 nil])
([nil nil ((2757 . 2758)) nil (25557 9343 777120 41000) 0 nil])
([nil nil ((2763 . 2764)) nil (25557 9343 777119 233000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2766) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (#("
" 0 1 (fontified t)) . -2767) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (#("
" 0 1 (fontified t)) . -2768) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (#(" " 0 1 (fontified t)) . -2769) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (#(" " 0 1 (fontified t)) . -2770) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (#(" " 0 1 (fontified t)) . -2771) (undo-tree-id1250 . -1) 2772) nil (25557 9343 777116 65000) 0 nil])
([nil nil ((2766 . 2770)) nil (25557 9343 777040 299000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2771) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (#("
" 0 1 (fontified t)) . -2772) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) 2773) nil (25557 9343 777036 36000) 0 nil])
([nil nil ((2766 . 2771) (t 25557 9343 859911 976000)) nil (25557 9346 495946 300000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2767) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) 2771) nil (25557 9346 495942 369000) 0 nil])
([nil nil ((2767 . 2771) 2771 (t 25557 9346 579902 797000)) nil (25557 9350 705275 720000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 2767) (undo-tree-id1260 . -4) 2771 (t 25557 9346 579902 797000)) nil (25557 9350 705273 853000) 0 nil])
([nil nil ((2772 . 2776)) nil (25557 9350 705271 438000) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg fontified t)) . 2773) (undo-tree-id1257 . -3) (undo-tree-id1258 . -3) (undo-tree-id1259 . -3) 2776) nil (25557 9350 705267 679000) 0 nil])
([nil nil ((2773 . 2776) 2776 (t 25557 9350 787888 600000)) nil (25557 9351 767400 129000) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg fontified t)) . 2773) (undo-tree-id1261 . -3) (undo-tree-id1262 . -3) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) 2776 (t 25557 9350 787888 600000)) nil (25557 9351 767395 803000) 0 nil])
([nil nil ((2747 . 2748) (t 25557 9351 847885 23000)) nil (25557 9379 232006 58000) 0 nil])
([nil nil ((2729 . 2730)) nil (25557 9379 232001 236000) 0 nil])
([nil nil ((2729 . 2730) (t 25557 9379 311789 620000)) nil (25557 9383 582127 177000) 0 nil])
([nil nil ((2750 . 2751)) nil (25557 9383 582122 769000) 0 nil])
([nil nil ((#("printf(\" Registerd Group %s at %d \\n \" , bucket.name,i);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t)) . 2661) (undo-tree-id1276 . -56) (undo-tree-id1277 . -56) (undo-tree-id1278 . -56) (t 25557 9383 667773 736000)) nil (25557 9391 541399 720000) 0 nil])
([nil nil ((2657 . 2662) (#("    " 0 3 (fontified nil) 3 4 (fontified nil)) . 2657) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (nil rear-nonsticky nil 2716 . 2717) (nil fontified nil 2716 . 2717) (nil fontified nil 2715 . 2716) (nil fontified nil 2714 . 2715) (nil fontified nil 2713 . 2714) (nil fontified nil 2712 . 2713) (nil fontified nil 2711 . 2712) (nil fontified nil 2710 . 2711) (nil fontified nil 2709 . 2710) (nil fontified nil 2708 . 2709) (nil fontified nil 2707 . 2708) (nil fontified nil 2706 . 2707) (nil fontified nil 2705 . 2706) (nil fontified nil 2704 . 2705) (nil fontified nil 2703 . 2704) (nil fontified nil 2702 . 2703) (nil fontified nil 2701 . 2702) (nil fontified nil 2700 . 2701) (nil fontified nil 2699 . 2700) (nil fontified nil 2698 . 2699) (nil fontified nil 2697 . 2698) (nil fontified nil 2696 . 2697) (nil fontified nil 2695 . 2696) (nil fontified nil 2694 . 2695) (nil fontified nil 2693 . 2694) (nil fontified nil 2692 . 2693) (nil fontified nil 2691 . 2692) (nil fontified nil 2690 . 2691) (nil fontified nil 2689 . 2690) (nil fontified nil 2688 . 2689) (nil fontified nil 2687 . 2688) (nil fontified nil 2686 . 2687) (nil fontified nil 2685 . 2686) (nil fontified nil 2684 . 2685) (nil fontified nil 2683 . 2684) (nil fontified nil 2682 . 2683) (nil fontified nil 2681 . 2682) (nil fontified nil 2680 . 2681) (nil fontified nil 2679 . 2680) (nil fontified nil 2678 . 2679) (nil fontified nil 2677 . 2678) (nil fontified nil 2676 . 2677) (nil fontified nil 2675 . 2676) (nil fontified nil 2674 . 2675) (nil fontified nil 2673 . 2674) (nil fontified nil 2672 . 2673) (nil fontified nil 2671 . 2672) (nil fontified nil 2670 . 2671) (nil fontified nil 2669 . 2670) (nil fontified nil 2668 . 2669) (nil fontified nil 2667 . 2668) (nil fontified nil 2666 . 2667) (nil fontified nil 2665 . 2666) (nil fontified nil 2664 . 2665) (nil fontified nil 2663 . 2664) (nil fontified nil 2662 . 2663) (nil fontified nil 2661 . 2662) (2661 . 2717)) nil (25557 9391 541391 965000) 0 nil])
([nil nil ((2765 . 2772) (t 25557 9391 623744 758000)) nil (25557 9394 6645 86000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2771) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 2772) nil (25557 9394 6643 596000) 0 nil])
([nil nil ((2766 . 2772) (#("     " 0 5 (fontified nil ws-butler-chg chg)) . 2766) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (nil rear-nonsticky nil 2826 . 2827) (nil fontified nil 2826 . 2827) (nil fontified nil 2825 . 2826) (nil fontified nil 2824 . 2825) (nil fontified nil 2823 . 2824) (nil fontified nil 2822 . 2823) (nil fontified nil 2821 . 2822) (nil fontified nil 2820 . 2821) (nil fontified nil 2819 . 2820) (nil fontified nil 2818 . 2819) (nil fontified nil 2817 . 2818) (nil fontified nil 2816 . 2817) (nil fontified nil 2815 . 2816) (nil fontified nil 2814 . 2815) (nil fontified nil 2813 . 2814) (nil fontified nil 2812 . 2813) (nil fontified nil 2811 . 2812) (nil fontified nil 2810 . 2811) (nil fontified nil 2809 . 2810) (nil fontified nil 2808 . 2809) (nil fontified nil 2807 . 2808) (nil fontified nil 2806 . 2807) (nil fontified nil 2805 . 2806) (nil fontified nil 2804 . 2805) (nil fontified nil 2803 . 2804) (nil fontified nil 2802 . 2803) (nil fontified nil 2801 . 2802) (nil fontified nil 2800 . 2801) (nil fontified nil 2799 . 2800) (nil fontified nil 2798 . 2799) (nil fontified nil 2797 . 2798) (nil fontified nil 2796 . 2797) (nil fontified nil 2795 . 2796) (nil fontified nil 2794 . 2795) (nil fontified nil 2793 . 2794) (nil fontified nil 2792 . 2793) (nil fontified nil 2791 . 2792) (nil fontified nil 2790 . 2791) (nil fontified nil 2789 . 2790) (nil fontified nil 2788 . 2789) (nil fontified nil 2787 . 2788) (nil fontified nil 2786 . 2787) (nil fontified nil 2785 . 2786) (nil fontified nil 2784 . 2785) (nil fontified nil 2783 . 2784) (nil fontified nil 2782 . 2783) (nil fontified nil 2781 . 2782) (nil fontified nil 2780 . 2781) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2773 . 2774) (nil fontified nil 2772 . 2773) (nil fontified nil 2771 . 2772) (2771 . 2827)) nil (25557 9394 6635 51000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2771) (undo-tree-id1288 . -1) 2772 (t 25557 9394 91735 774000)) nil (25557 9396 35935 262000) 0 nil])
([nil nil ((2739 . 2741) (t 25557 9396 123728 382000)) nil (25557 9422 639949 22000) 0 nil])
([nil nil ((2740 . 2745)) nil (25557 9422 639947 435000) 0 nil])
([nil nil ((2740 . 2762) (#("Regex" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t) 1 2 (face font-lock-type-face ws-butler-chg chg fontified t) 2 3 (face font-lock-type-face ws-butler-chg chg fontified t) 3 4 (face font-lock-type-face ws-butler-chg chg fontified t) 4 5 (face font-lock-type-face ws-butler-chg chg fontified t)) . -2740) (undo-tree-id1289 . -5) 2745) nil (25557 9422 639943 518000) 0 nil])
([nil nil ((#("(bucket=(Regex_GroupTableBucket)bucket.next)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 31 (face font-lock-type-face fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t)) . 2731) (undo-tree-id1290 . -44) (undo-tree-id1291 . -8) (undo-tree-id1292 . -44) 2775 (t 25557 9422 731631 847000)) nil (25557 9447 350668 136000) 0 nil])
([nil nil ((2731 . 2742)) nil (25557 9447 350655 865000) 0 nil])
([nil nil ((2818 . 2824) (t 25557 9447 427542 645000)) nil (25557 9451 347036 147000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2867 . 2868) (nil fontified nil 2867 . 2868) (nil fontified nil 2866 . 2867) (nil fontified nil 2865 . 2866) (nil fontified nil 2864 . 2865) (nil fontified nil 2863 . 2864) (nil fontified nil 2862 . 2863) (nil fontified nil 2861 . 2862) (nil fontified nil 2860 . 2861) (nil fontified nil 2859 . 2860) (nil fontified nil 2858 . 2859) (nil fontified nil 2857 . 2858) (nil fontified nil 2856 . 2857) (nil fontified nil 2855 . 2856) (nil fontified nil 2833 . 2855) (nil fontified nil 2832 . 2833) (nil fontified nil 2831 . 2832) (nil fontified nil 2830 . 2831) (nil fontified nil 2829 . 2830) (nil fontified nil 2828 . 2829) (nil fontified nil 2827 . 2828) (nil fontified nil 2826 . 2827) (nil fontified nil 2825 . 2826) (nil fontified nil 2824 . 2825) (2824 . 2868)) nil (25557 9451 347030 633000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2824) (undo-tree-id1293 . -1) 2825 (t 25557 9451 423528 246000)) nil (25557 9454 235937 473000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . -2866) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) 2867 (t 25557 9454 319517 816000)) nil (25557 9456 706397 345000) 0 nil])
([nil nil ((2866 . 2867)) nil (25557 9456 706384 679000) 0 nil])
([nil nil ((2603 . 2604) (t 25557 9456 791508 918000)) nil (25557 9488 226475 692000) 0 nil])
([nil nil ((2612 . 2613) (t 25557 9488 311395 767000)) nil (25557 9491 680095 553000) 0 nil])
([nil nil ((2613 . 2614) (t 25557 9491 767383 395000)) nil (25557 9504 81675 632000) 0 nil])
([nil nil ((2628 . 2629)) nil (25557 9504 81670 168000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2644) (undo-tree-id1299 . -1) 2645 (t 25557 9504 159339 81000)) nil (25557 9511 491216 388000) 0 nil])
([nil nil ((2644 . 2646)) nil (25557 9511 491214 530000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t)) . -2645) (undo-tree-id1298 . -1) 2646) nil (25557 9511 491213 391000) 0 nil])
([nil nil ((2645 . 2646)) nil (25557 9511 491211 364000) 0 nil])
([nil nil ((#("->" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 2644) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2)) nil (25557 9511 491210 91000) 0 nil])
([nil nil ((2632 . 2634) (#("   " 0 2 (fontified nil) 2 3 (fontified nil)) . 2632) (nil rear-nonsticky nil 2645 . 2646) (nil fontified nil 2645 . 2646) (nil fontified nil 2644 . 2645) (2644 . 2646)) nil (25557 9511 491201 966000) 0 nil])
([nil nil ((2634 . 2635)) nil (25557 9511 491196 758000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2714) (undo-tree-id1301 . -1) 2715 (t 25557 9511 571312 615000)) nil (25557 9515 997120 598000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2715 . 2716) (nil fontified nil 2715 . 2716) (nil fontified nil 2714 . 2715) (2714 . 2716)) nil (25557 9515 997118 247000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2815) (undo-tree-id1300 . -1) 2816) nil (25557 9515 997116 364000) 0 nil])
([nil nil ((2763 . 2769) (#("     " 0 5 (fontified nil)) . 2763) (nil rear-nonsticky nil 2816 . 2817) (nil fontified nil 2816 . 2817) (nil fontified nil 2815 . 2816) (2815 . 2817)) nil (25557 9515 997106 158000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2768) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) 2769 (t 25557 9516 79296 532000)) nil (25557 9517 674863 557000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2743) (undo-tree-id1305 . -1) 2744 (t 25557 9517 755290 557000)) nil (25557 9520 573158 85000) 0 nil])
([nil nil ((2726 . 2731) (#("    " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 2726) (undo-tree-id1304 . -3) (nil rear-nonsticky nil 2744 . 2745) (nil fontified nil 2744 . 2745) (nil fontified nil 2743 . 2744) (2743 . 2745)) nil (25557 9520 573152 652000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2730) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) 2731 (t 25557 9520 655280 219000)) nil (25557 9521 665837 748000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2869) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) 2870 (t 25557 9521 751276 314000)) nil (25557 9525 491615 85000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2870 . 2871) (nil fontified nil 2870 . 2871) (nil fontified nil 2869 . 2870) (2869 . 2871)) nil (25557 9525 491598 972000) 0 nil])
([nil nil ((2862 . 2863) (t 25557 9525 579262 678000)) nil (25557 9566 426761 711000) 0 nil])
([nil nil ((2862 . 2863) (t 25557 9566 511117 327000)) nil (25557 9567 609235 529000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2862) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) 2863 (t 25557 9567 699113 123000)) nil (25557 9569 141784 711000) 0 nil])
([nil nil ((7420 . 7425) (t 25557 9569 223107 726000)) nil (25557 9646 237142 200000) 0 nil])
([nil nil ((#("group_table[i]" 0 14 (fontified t)) . 7085) (undo-tree-id1320 . -14) (undo-tree-id1321 . -14) (undo-tree-id1322 . -14) (undo-tree-id1323 . -14) (undo-tree-id1324 . -14)) nil (25557 9646 237140 887000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7098 . 7099) (nil fontified nil 7085 . 7099) (7085 . 7099)) nil (25557 9646 237136 220000) 0 nil])
([nil nil ((7133 . 7137)) nil (25557 9646 237134 998000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7150 . 7151) (nil fontified nil 7137 . 7151) (7137 . 7151)) nil (25557 9646 237133 642000) 0 nil])
([nil nil ((#("     " 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . 7438) (undo-tree-id1319 . -5) 7151) nil (25557 9646 237129 632000) 0 nil])
([nil nil ((7151 . 7161) (t 25557 9646 330836 118000)) nil (25557 9650 418490 543000) 0 nil])
([nil nil ((7161 . 7162)) nil (25557 9650 418485 228000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -2612) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("(" 0 1 (fontified t)) . -2613) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) 2614 (t 25557 9650 498821 505000)) nil (25557 9703 665586 127000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2626) (undo-tree-id1346 . -1) 2627 (t 25557 9703 758635 424000)) nil (25557 9705 595927 5000) 0 nil])
([nil nil ((2612 . 2613) (t 25557 9705 678628 735000)) nil (25557 9710 535270 513000) 0 nil])
([nil nil ((2613 . 2614) (t 25557 9710 622611 523000)) nil (25557 9738 383101 157000) 0 nil])
([nil nil ((2628 . 2629)) nil (25557 9738 383096 878000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2653) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) 2654 (t 25557 9738 482514 660000)) nil (25557 9786 835808 784000) 0 nil])
([nil nil ((2653 . 2654)) nil (25557 9786 835796 143000) 0 nil])
([nil nil ((#("Regex_RegisterGroup(test,group);" 0 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t rear-nonsticky t) 24 25 (fontified t) 25 31 (fontified t) 31 32 (fontified t rear-nonsticky t)) . 2344) (undo-tree-id1350 . -32) (undo-tree-id1351 . -20) (undo-tree-id1352 . -32) (undo-tree-id1353 . -32) (undo-tree-id1354 . -32) (undo-tree-id1355 . -32) (undo-tree-id1356 . -32) (undo-tree-id1357 . -32) (undo-tree-id1358 . -32) (t 25557 9786 914346 893000)) nil (25557 9803 312755 26000) 0 nil])
([nil nil ((nil fontified nil 2375 . 2376) (nil fontified nil 2369 . 2375) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2344 . 2363) (2344 . 2376)) nil (25557 9803 312740 303000) 0 nil])
([nil nil ((2376 . 2378)) nil (25557 9803 312737 822000) 0 nil])
([nil nil ((nil fontified nil 2409 . 2410) (nil fontified nil 2403 . 2409) (nil fontified nil 2402 . 2403) (nil fontified nil 2401 . 2402) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2378 . 2397) (2378 . 2410)) nil (25557 9803 312732 985000) 0 nil])
([nil nil ((2761 . 2762) (t 25557 9803 394289 975000)) nil (25557 9824 549088 305000) 0 nil])
([nil nil ((2795 . 2796)) nil (25557 9824 549087 318000) 0 nil])
([nil nil ((2803 . 2804)) nil (25557 9824 549086 408000) 0 nil])
([nil nil ((2867 . 2868)) nil (25557 9824 549085 57000) 0 nil])
([nil nil ((2919 . 2920)) nil (25557 9824 549080 578000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2922) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) 2923 (t 25557 9824 642216 716000)) nil (25557 9825 735322 440000) 0 nil])
([nil nil ((2694 . 2700) (t 25557 9825 818212 664000)) nil (25557 9830 577868 8000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2698) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2699) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) 2700) nil (25557 9830 577863 601000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2704) (undo-tree-id1368 . -1) 2705 (t 25557 9830 662195 984000)) nil (25557 9834 28725 470000) 0 nil])
([nil nil ((2700 . 2706) (#("    " 0 4 (fontified t)) . 2700) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -4) 2704 (t 25557 9834 106184 126000)) nil (25557 9836 872603 414000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2705) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) 2706) nil (25557 9836 872595 472000) 0 nil])
([nil nil ((2565 . 2566) (t 25557 9836 954174 320000)) nil (25557 9856 758109 518000) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg chg c-is-sws t fontified t)) . -2565) (undo-tree-id1387 . -1) 2566) nil (25557 9856 758108 554000) 0 nil])
([nil nil ((2565 . 2571)) nil (25557 9856 758107 183000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t)) . -2568) (undo-tree-id1384 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -2569) (undo-tree-id1385 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -2570) (undo-tree-id1386 . -1) 2571) nil (25557 9856 758106 102000) 0 nil])
([nil nil ((2568 . 2573)) nil (25557 9856 758103 162000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2570) (undo-tree-id1381 . -1) (#("r" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2571) (undo-tree-id1382 . -1) (#("i" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2572) (undo-tree-id1383 . -1) 2573) nil (25557 9856 758102 108000) 0 nil])
([nil nil ((2570 . 2577)) nil (25557 9856 758099 83000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2576) (undo-tree-id1380 . -1) 2577) nil (25557 9856 758098 315000) 0 nil])
([nil nil ((2576 . 2584)) nil (25557 9856 758096 652000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2582) (undo-tree-id1378 . -1) (#("o" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2583) (undo-tree-id1379 . -1) 2584) nil (25557 9856 758095 565000) 0 nil])
([nil nil ((2582 . 2584)) nil (25557 9856 758091 439000) 0 nil])
([nil nil ((2584 . 2587)) nil (25557 9856 758090 579000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face ws-butler-chg chg fontified t)) . -2586) (undo-tree-id1377 . -1) 2587) nil (25557 9856 758088 765000) 0 nil])
([nil nil ((2586 . 2591)) nil (25557 9856 758077 111000) 0 nil])
([nil nil ((2591 . 2593) (t 25557 9856 838105 951000)) nil (25557 9862 16923 154000) 0 nil])
([nil nil ((2593 . 2594)) nil (25557 9862 16922 154000) 0 nil])
([nil nil ((#("void Regex_PrintGroupTable();
" 0 1 (face font-lock-type-face c-is-sws t fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face font-lock-function-name-face fontified t) 9 10 (face font-lock-function-name-face fontified t) 10 11 (face font-lock-function-name-face fontified t) 11 12 (face font-lock-function-name-face fontified t) 12 13 (face font-lock-function-name-face fontified t) 13 14 (face font-lock-function-name-face fontified t) 14 15 (face font-lock-function-name-face fontified t) 15 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face fontified t) 17 18 (face font-lock-function-name-face fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (face font-lock-function-name-face fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (face font-lock-function-name-face fontified t) 25 26 (face font-lock-function-name-face fontified t) 26 27 (ws-butler-chg chg fontified t) 27 28 (ws-butler-chg chg fontified t) 28 29 (ws-butler-chg chg fontified t) 29 30 (fontified t)) . 2565) (undo-tree-id1388 . -26) (undo-tree-id1389 . -26) (undo-tree-id1390 . -26) (undo-tree-id1391 . -29) (undo-tree-id1392 . -27) (undo-tree-id1393 . -28) (undo-tree-id1394 . -29) (undo-tree-id1395 . -30)) nil (25557 9862 16920 191000) 0 nil])
([nil nil ((2565 . 2566) (nil rear-nonsticky nil 2594 . 2595) (nil fontified nil 2594 . 2595) (nil fontified nil 2593 . 2594) (nil fontified nil 2592 . 2593) (nil fontified nil 2591 . 2592) (nil fontified nil 2590 . 2591) (nil fontified nil 2589 . 2590) (nil fontified nil 2588 . 2589) (nil fontified nil 2587 . 2588) (nil fontified nil 2586 . 2587) (nil fontified nil 2585 . 2586) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2582 . 2583) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2579 . 2580) (nil fontified nil 2578 . 2579) (nil fontified nil 2577 . 2578) (nil fontified nil 2576 . 2577) (nil fontified nil 2575 . 2576) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2572 . 2573) (nil fontified nil 2571 . 2572) (nil fontified nil 2570 . 2571) (nil fontified nil 2569 . 2570) (nil fontified nil 2568 . 2569) (nil fontified nil 2567 . 2568) (nil fontified nil 2566 . 2567) (nil fontified nil 2565 . 2566) (2565 . 2595)) nil (25557 9862 16902 182000) 0 nil])
([nil nil ((2006 . 2008) (t 25557 9862 114087 824000)) nil (25557 9872 332971 233000) 0 nil])
([nil nil ((#("<" 0 1 (ws-butler-chg chg fontified t)) . -2006) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t)) . -2007) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) 2008) nil (25557 9872 332969 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2035 . 2036) (nil fontified nil 2035 . 2036) (nil fontified nil 2034 . 2035) (nil fontified nil 2033 . 2034) (nil fontified nil 2032 . 2033) (nil fontified nil 2031 . 2032) (nil fontified nil 2030 . 2031) (nil fontified nil 2029 . 2030) (nil fontified nil 2028 . 2029) (nil fontified nil 2027 . 2028) (nil fontified nil 2026 . 2027) (nil fontified nil 2025 . 2026) (nil fontified nil 2024 . 2025) (nil fontified nil 2023 . 2024) (nil fontified nil 2022 . 2023) (nil fontified nil 2021 . 2022) (nil fontified nil 2020 . 2021) (nil fontified nil 2019 . 2020) (nil fontified nil 2018 . 2019) (nil fontified nil 2017 . 2018) (nil fontified nil 2016 . 2017) (nil fontified nil 2015 . 2016) (nil fontified nil 2014 . 2015) (nil fontified nil 2013 . 2014) (nil fontified nil 2012 . 2013) (nil fontified nil 2011 . 2012) (nil fontified nil 2010 . 2011) (nil fontified nil 2009 . 2010) (nil fontified nil 2008 . 2009) (nil fontified nil 2007 . 2008) (nil fontified nil 2006 . 2007) (2006 . 2036)) nil (25557 9872 332955 834000) 0 nil])
([nil nil ((2006 . 2007) (t 25557 9872 426052 419000)) nil (25557 9873 288874 975000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2625) (undo-tree-id1406 . -1) 2626 (t 25557 9873 374049 163000)) nil (25557 9896 530760 926000) 0 nil])
([nil nil ((2625 . 2626)) nil (25557 9896 530759 322000) 0 nil])
([nil nil ((2625 . 2627)) nil (25557 9896 530758 718000) 0 nil])
([nil nil ((2630 . 2631)) nil (25557 9896 530758 94000) 0 nil])
([nil nil ((2675 . 2676)) nil (25557 9896 530757 509000) 0 nil])
([nil nil ((2680 . 2681)) nil (25557 9896 530756 835000) 0 nil])
([nil nil ((2730 . 2731)) nil (25557 9896 530756 216000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -2730) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) 2731) nil (25557 9896 530755 383000) 0 nil])
([nil nil ((2735 . 2736)) nil (25557 9896 530753 225000) 0 nil])
([nil nil ((2765 . 2766)) nil (25557 9896 530752 605000) 0 nil])
([nil nil ((2773 . 2774)) nil (25557 9896 530752 9000) 0 nil])
([nil nil ((2838 . 2839)) nil (25557 9896 530751 407000) 0 nil])
([nil nil ((2872 . 2873)) nil (25557 9896 530750 786000) 0 nil])
([nil nil ((2881 . 2882)) nil (25557 9896 530750 182000) 0 nil])
([nil nil ((2946 . 2947)) nil (25557 9896 530749 554000) 0 nil])
([nil nil ((2998 . 2999)) nil (25557 9896 530748 922000) 0 nil])
([nil nil ((3004 . 3005)) nil (25557 9896 530748 141000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3007) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#(" " 0 1 (fontified t)) . -3008) (undo-tree-id1403 . -1) 3009) nil (25557 9896 530746 10000) 0 nil])
([nil nil ((3007 . 3009)) nil (25557 9896 530729 757000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . -2596) (undo-tree-id1408 . -1) 2597 (t 25557 9896 613969 477000)) nil (25557 9900 929856 112000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2625) (undo-tree-id1407 . -1) 2626) nil (25557 9900 929850 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -2626) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) 2627 (t 25557 9901 9954 419000)) nil (25557 9909 160390 301000) 0 nil])
([nil nil ((2626 . 2627)) nil (25557 9909 160387 936000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2628) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) 2629) nil (25557 9909 160386 904000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2672) (undo-tree-id1411 . -1)) nil (25557 9909 160384 208000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2675) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1)) nil (25557 9909 160382 432000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2726)) nil (25557 9909 160362 124000) 0 nil])
([nil nil ((2727 . 2729) (#("    " 0 1 (ws-butler-chg delete fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 2727) (2726 . 2727)) nil (25557 9909 160357 89000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2757) (undo-tree-id1423 . -1) (#(" " 0 1 (fontified t)) . 2757) (undo-tree-id1424 . -1) (t 25557 9909 237926 249000)) nil (25557 9927 205009 46000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2762) (#(" " 0 1 (fontified t)) . 2762)) nil (25557 9927 205006 61000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2824) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 2824) (#(" " 0 1 (fontified t)) . 2824)) nil (25557 9927 205004 850000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2855) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 2855) (#(" " 0 1 (fontified t)) . 2855)) nil (25557 9927 205003 557000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2860) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 2860) (#(" " 0 1 (fontified t)) . 2860)) nil (25557 9927 205002 369000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2922) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 2922) (#(" " 0 1 (fontified t)) . 2922)) nil (25557 9927 205001 15000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 2972) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 2972) (#(" " 0 1 (fontified t)) . 2972)) nil (25557 9927 204999 681000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2977) (undo-tree-id1422 . -1)) nil (25557 9927 204998 416000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2981) (undo-tree-id1421 . -1)) nil (25557 9927 204983 990000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2976) (undo-tree-id1420 . -1)) nil (25557 9927 204980 639000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2982) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . -2983) (undo-tree-id1419 . -1) 2984) nil (25557 9927 204977 692000) 0 nil])
([nil nil ((2982 . 2983)) nil (25557 9927 204950 422000) 0 nil])
([nil nil ((#("void Regex_PrintGroupTable()
{
 for(uint16_t i=0;i<DEFAULT_TABLE_SIZE;i++)
 {
  Regex_GroupTableBucket* bucket=&(group_table[i]);

  if(bucket->name[0]!='\\0')
  {

   printf(\" Registerd Group %s at %d \\n \" , bucket->name,i);

   while( bucket->next !=NULL)
   {
    printf(\" Registerd Group %s at %d \\n \" , bucket->name,i);
    bucket=(Regex_GroupTableBucket*)bucket->next;
   }
  }
 }
 return 0;
}
" 0 1 (face font-lock-type-face fontified t c-is-sws t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face font-lock-function-name-face fontified t) 9 10 (face font-lock-function-name-face fontified t) 10 11 (face font-lock-function-name-face fontified t) 11 12 (face font-lock-function-name-face fontified t) 12 13 (face font-lock-function-name-face fontified t) 13 14 (face font-lock-function-name-face fontified t) 14 15 (face font-lock-function-name-face fontified t) 15 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face fontified t) 17 18 (face font-lock-function-name-face fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (face font-lock-function-name-face fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (face font-lock-function-name-face fontified t) 25 26 (face font-lock-function-name-face fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t c-is-sws t c-in-sws t) 32 33 (face font-lock-keyword-face fontified t c-is-sws t) 33 34 (face font-lock-keyword-face fontified t) 34 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 40 (face font-lock-type-face fontified t) 40 41 (face font-lock-type-face fontified t) 41 42 (face font-lock-type-face fontified t) 42 43 (face font-lock-type-face fontified t) 43 44 (face font-lock-type-face c-type c-decl-id-start fontified t) 44 45 (fontified t) 45 46 (face font-lock-variable-name-face fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (face font-lock-type-face fontified t) 81 101 (face font-lock-type-face fontified t) 101 102 (face font-lock-type-face c-type c-decl-id-start fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (face font-lock-variable-name-face fontified t) 106 107 (face font-lock-variable-name-face fontified t) 107 108 (face font-lock-variable-name-face fontified t) 108 109 (face font-lock-variable-name-face fontified t) 109 110 (face font-lock-variable-name-face fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t rear-nonsticky t) 129 130 (fontified t) 130 133 (fontified t) 133 134 (face font-lock-keyword-face fontified t) 134 135 (face font-lock-keyword-face fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t rear-nonsticky t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (face font-lock-string-face fontified t) 154 155 (face font-lock-string-face fontified t) 155 156 (face font-lock-string-face fontified t) 156 157 (face font-lock-string-face fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (face font-lock-string-face fontified t) 175 176 (face font-lock-string-face fontified t) 176 177 (face font-lock-string-face fontified t) 177 178 (face font-lock-string-face fontified t) 178 179 (face font-lock-string-face fontified t) 179 180 (face font-lock-string-face fontified t) 180 181 (face font-lock-string-face fontified t) 181 182 (face font-lock-string-face fontified t) 182 183 (face font-lock-string-face fontified t) 183 184 (face font-lock-string-face fontified t) 184 185 (face font-lock-string-face fontified t) 185 186 (face font-lock-string-face fontified t) 186 187 (face font-lock-string-face fontified t) 187 188 (face font-lock-string-face fontified t) 188 189 (face font-lock-string-face fontified t) 189 190 (face font-lock-string-face fontified t) 190 191 (face font-lock-string-face fontified t) 191 192 (face font-lock-string-face fontified t) 192 193 (face font-lock-string-face fontified t) 193 194 (face font-lock-string-face fontified t) 194 195 (face font-lock-string-face fontified t) 195 196 (face font-lock-string-face fontified t) 196 197 (face font-lock-string-face fontified t) 197 198 (face font-lock-string-face fontified t) 198 199 (face font-lock-string-face fontified t) 199 200 (face font-lock-string-face fontified t) 200 201 (face font-lock-string-face fontified t) 201 202 (face font-lock-string-face fontified t) 202 203 (face font-lock-string-face fontified t) 203 204 (face font-lock-string-face fontified t) 204 205 (face font-lock-string-face fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t rear-nonsticky t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t rear-nonsticky t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (face font-lock-keyword-face fontified t) 230 234 (face font-lock-keyword-face fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t rear-nonsticky t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (face font-lock-constant-face fontified t) 252 253 (face font-lock-constant-face fontified t) 253 254 (face font-lock-constant-face fontified t) 254 255 (face font-lock-constant-face fontified t) 255 256 (fontified t rear-nonsticky t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 274 (face font-lock-string-face fontified t) 274 275 (face font-lock-string-face fontified t) 275 276 (face font-lock-string-face fontified t) 276 277 (face font-lock-string-face fontified t) 277 278 (face font-lock-string-face fontified t) 278 279 (face font-lock-string-face fontified t) 279 280 (face font-lock-string-face fontified t) 280 281 (face font-lock-string-face fontified t) 281 282 (face font-lock-string-face fontified t) 282 283 (face font-lock-string-face fontified t) 283 284 (face font-lock-string-face fontified t) 284 285 (face font-lock-string-face fontified t) 285 286 (face font-lock-string-face fontified t) 286 287 (face font-lock-string-face fontified t) 287 288 (face font-lock-string-face fontified t) 288 289 (face font-lock-string-face fontified t) 289 290 (face font-lock-string-face fontified t) 290 291 (face font-lock-string-face fontified t) 291 292 (face font-lock-string-face fontified t) 292 293 (face font-lock-string-face fontified t) 293 294 (face font-lock-string-face fontified t) 294 295 (face font-lock-string-face fontified t) 295 296 (face font-lock-string-face fontified t) 296 297 (face font-lock-string-face fontified t) 297 298 (face font-lock-string-face fontified t) 298 299 (face font-lock-string-face fontified t) 299 300 (face font-lock-string-face fontified t) 300 301 (face font-lock-string-face fontified t) 301 302 (face font-lock-string-face fontified t) 302 303 (face font-lock-string-face fontified t) 303 304 (face font-lock-string-face fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t rear-nonsticky t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t rear-nonsticky t) 323 324 (fontified t) 324 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t) 328 329 (fontified t) 329 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 335 (fontified t) 335 336 (fontified t) 336 358 (face font-lock-type-face fontified t) 358 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 362 (fontified t) 362 363 (fontified t) 363 364 (fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t rear-nonsticky t) 368 369 (fontified t) 369 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 377 (fontified t) 377 378 (fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 385 (fontified t) 385 386 (fontified t) 386 387 (fontified t) 387 388 (face font-lock-keyword-face fontified t c-is-sws t) 388 393 (face font-lock-keyword-face fontified t) 393 396 (fontified t) 396 397 (fontified t) 397 399 (fontified t)) . 2596) (undo-tree-id1430 . -399) (undo-tree-id1431 . -398) (undo-tree-id1432 . -399) (t 25557 9927 281864 528000)) nil (25557 9951 6190 482000) 0 nil])
([nil nil ((2596 . 2598)) nil (25557 9951 6187 499000) 0 nil])
([nil nil ((3090 . 3091) (3077 . 3080) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 3077) (3070 . 3075) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 3070) (3059 . 3068) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg)) . 3059) (3044 . 3057) (#("   " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 3044) (2983 . 2998) (#("    " 0 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg)) . 2983) (2910 . 2925) (#("    " 0 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg) 3 4 (fontified nil ws-butler-chg chg)) . 2910) (2895 . 2908) (#("   " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 2895) (2856 . 2867) (#("   " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 2856) (2786 . 2797) (#("   " 0 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 2786) (2774 . 2783) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 2774) (2741 . 2748) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 2741) (2683 . 2690) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg)) . 2683) (2676 . 2681) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 2676) (2630 . 2633) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 2630) (2627 . 2628) (nil rear-nonsticky nil 2996 . 2997) (nil fontified nil 2995 . 2997) (nil fontified nil 2994 . 2995) (nil fontified nil 2991 . 2994) (nil fontified nil 2986 . 2991) (nil fontified nil 2985 . 2986) (nil fontified nil 2984 . 2985) (nil fontified nil 2983 . 2984) (nil fontified nil 2982 . 2983) (nil fontified nil 2981 . 2982) (nil fontified nil 2980 . 2981) (nil fontified nil 2979 . 2980) (nil fontified nil 2978 . 2979) (nil fontified nil 2977 . 2978) (nil fontified nil 2976 . 2977) (nil fontified nil 2975 . 2976) (nil fontified nil 2974 . 2975) (nil fontified nil 2973 . 2974) (nil fontified nil 2972 . 2973) (nil fontified nil 2971 . 2972) (nil fontified nil 2970 . 2971) (nil fontified nil 2969 . 2970) (nil fontified nil 2968 . 2969) (nil fontified nil 2967 . 2968) (nil fontified nil 2966 . 2967) (nil fontified nil 2965 . 2966) (nil fontified nil 2964 . 2965) (nil fontified nil 2963 . 2964) (nil fontified nil 2962 . 2963) (nil fontified nil 2961 . 2962) (nil fontified nil 2960 . 2961) (nil fontified nil 2959 . 2960) (nil fontified nil 2958 . 2959) (nil fontified nil 2957 . 2958) (nil fontified nil 2956 . 2957) (nil fontified nil 2934 . 2956) (nil fontified nil 2933 . 2934) (nil fontified nil 2932 . 2933) (nil fontified nil 2931 . 2932) (nil fontified nil 2930 . 2931) (nil fontified nil 2929 . 2930) (nil fontified nil 2928 . 2929) (nil fontified nil 2927 . 2928) (nil fontified nil 2926 . 2927) (nil fontified nil 2925 . 2926) (nil fontified nil 2924 . 2925) (nil fontified nil 2922 . 2924) (nil fontified nil 2921 . 2922) (nil fontified nil 2920 . 2921) (nil fontified nil 2919 . 2920) (nil fontified nil 2918 . 2919) (nil fontified nil 2917 . 2918) (nil fontified nil 2916 . 2917) (nil fontified nil 2915 . 2916) (nil fontified nil 2914 . 2915) (nil fontified nil 2913 . 2914) (nil fontified nil 2912 . 2913) (nil fontified nil 2911 . 2912) (nil fontified nil 2910 . 2911) (nil fontified nil 2909 . 2910) (nil fontified nil 2908 . 2909) (nil fontified nil 2907 . 2908) (nil fontified nil 2906 . 2907) (nil fontified nil 2905 . 2906) (nil fontified nil 2904 . 2905) (nil fontified nil 2903 . 2904) (nil fontified nil 2902 . 2903) (nil fontified nil 2901 . 2902) (nil fontified nil 2900 . 2901) (nil fontified nil 2899 . 2900) (nil fontified nil 2898 . 2899) (nil fontified nil 2897 . 2898) (nil fontified nil 2896 . 2897) (nil fontified nil 2895 . 2896) (nil fontified nil 2894 . 2895) (nil fontified nil 2893 . 2894) (nil fontified nil 2892 . 2893) (nil fontified nil 2891 . 2892) (nil fontified nil 2890 . 2891) (nil fontified nil 2889 . 2890) (nil fontified nil 2888 . 2889) (nil fontified nil 2887 . 2888) (nil fontified nil 2886 . 2887) (nil fontified nil 2885 . 2886) (nil fontified nil 2884 . 2885) (nil fontified nil 2883 . 2884) (nil fontified nil 2882 . 2883) (nil fontified nil 2881 . 2882) (nil fontified nil 2880 . 2881) (nil fontified nil 2879 . 2880) (nil fontified nil 2878 . 2879) (nil fontified nil 2877 . 2878) (nil fontified nil 2876 . 2877) (nil fontified nil 2875 . 2876) (nil fontified nil 2874 . 2875) (nil fontified nil 2873 . 2874) (nil fontified nil 2872 . 2873) (nil fontified nil 2871 . 2872) (nil fontified nil 2870 . 2871) (nil fontified nil 2869 . 2870) (nil fontified nil 2868 . 2869) (nil fontified nil 2867 . 2868) (nil fontified nil 2866 . 2867) (nil fontified nil 2865 . 2866) (nil fontified nil 2864 . 2865) (nil fontified nil 2863 . 2864) (nil fontified nil 2862 . 2863) (nil fontified nil 2860 . 2862) (nil fontified nil 2859 . 2860) (nil fontified nil 2858 . 2859) (nil fontified nil 2857 . 2858) (nil fontified nil 2856 . 2857) (nil fontified nil 2855 . 2856) (nil fontified nil 2854 . 2855) (nil fontified nil 2853 . 2854) (nil fontified nil 2852 . 2853) (nil fontified nil 2851 . 2852) (nil fontified nil 2850 . 2851) (nil fontified nil 2849 . 2850) (nil fontified nil 2848 . 2849) (nil fontified nil 2847 . 2848) (nil fontified nil 2846 . 2847) (nil fontified nil 2845 . 2846) (nil fontified nil 2844 . 2845) (nil fontified nil 2843 . 2844) (nil fontified nil 2842 . 2843) (nil fontified nil 2841 . 2842) (nil fontified nil 2840 . 2841) (nil fontified nil 2839 . 2840) (nil fontified nil 2838 . 2839) (nil fontified nil 2837 . 2838) (nil fontified nil 2836 . 2837) (nil fontified nil 2835 . 2836) (nil fontified nil 2834 . 2835) (nil fontified nil 2833 . 2834) (nil fontified nil 2832 . 2833) (nil fontified nil 2828 . 2832) (nil fontified nil 2827 . 2828) (nil fontified nil 2826 . 2827) (nil fontified nil 2825 . 2826) (nil fontified nil 2824 . 2825) (nil fontified nil 2823 . 2824) (nil fontified nil 2822 . 2823) (nil fontified nil 2821 . 2822) (nil fontified nil 2820 . 2821) (nil fontified nil 2819 . 2820) (nil fontified nil 2818 . 2819) (nil fontified nil 2817 . 2818) (nil fontified nil 2816 . 2817) (nil fontified nil 2815 . 2816) (nil fontified nil 2814 . 2815) (nil fontified nil 2813 . 2814) (nil fontified nil 2812 . 2813) (nil fontified nil 2811 . 2812) (nil fontified nil 2810 . 2811) (nil fontified nil 2809 . 2810) (nil fontified nil 2808 . 2809) (nil fontified nil 2807 . 2808) (nil fontified nil 2806 . 2807) (nil fontified nil 2805 . 2806) (nil fontified nil 2804 . 2805) (nil fontified nil 2803 . 2804) (nil fontified nil 2802 . 2803) (nil fontified nil 2801 . 2802) (nil fontified nil 2800 . 2801) (nil fontified nil 2799 . 2800) (nil fontified nil 2798 . 2799) (nil fontified nil 2797 . 2798) (nil fontified nil 2796 . 2797) (nil fontified nil 2795 . 2796) (nil fontified nil 2794 . 2795) (nil fontified nil 2793 . 2794) (nil fontified nil 2792 . 2793) (nil fontified nil 2791 . 2792) (nil fontified nil 2790 . 2791) (nil fontified nil 2789 . 2790) (nil fontified nil 2788 . 2789) (nil fontified nil 2787 . 2788) (nil fontified nil 2786 . 2787) (nil fontified nil 2785 . 2786) (nil fontified nil 2784 . 2785) (nil fontified nil 2783 . 2784) (nil fontified nil 2782 . 2783) (nil fontified nil 2781 . 2782) (nil fontified nil 2780 . 2781) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2773 . 2774) (nil fontified nil 2772 . 2773) (nil fontified nil 2771 . 2772) (nil fontified nil 2770 . 2771) (nil fontified nil 2769 . 2770) (nil fontified nil 2768 . 2769) (nil fontified nil 2767 . 2768) (nil fontified nil 2766 . 2767) (nil fontified nil 2765 . 2766) (nil fontified nil 2764 . 2765) (nil fontified nil 2762 . 2764) (nil fontified nil 2761 . 2762) (nil fontified nil 2760 . 2761) (nil fontified nil 2759 . 2760) (nil fontified nil 2757 . 2759) (nil fontified nil 2756 . 2757) (nil fontified nil 2755 . 2756) (nil fontified nil 2754 . 2755) (nil fontified nil 2753 . 2754) (nil fontified nil 2752 . 2753) (nil fontified nil 2751 . 2752) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2747 . 2748) (nil fontified nil 2746 . 2747) (nil fontified nil 2745 . 2746) (nil fontified nil 2744 . 2745) (nil fontified nil 2743 . 2744) (nil fontified nil 2742 . 2743) (nil fontified nil 2741 . 2742) (nil fontified nil 2740 . 2741) (nil fontified nil 2739 . 2740) (nil fontified nil 2738 . 2739) (nil fontified nil 2737 . 2738) (nil fontified nil 2736 . 2737) (nil fontified nil 2735 . 2736) (nil fontified nil 2734 . 2735) (nil fontified nil 2733 . 2734) (nil fontified nil 2732 . 2733) (nil fontified nil 2731 . 2732) (nil fontified nil 2728 . 2731) (nil fontified nil 2727 . 2728) (nil fontified nil 2726 . 2727) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (nil fontified nil 2723 . 2724) (nil fontified nil 2722 . 2723) (nil fontified nil 2712 . 2722) (nil fontified nil 2711 . 2712) (nil fontified nil 2710 . 2711) (nil fontified nil 2709 . 2710) (nil fontified nil 2708 . 2709) (nil fontified nil 2707 . 2708) (nil fontified nil 2706 . 2707) (nil fontified nil 2705 . 2706) (nil fontified nil 2704 . 2705) (nil fontified nil 2703 . 2704) (nil fontified nil 2702 . 2703) (nil fontified nil 2701 . 2702) (nil fontified nil 2700 . 2701) (nil fontified nil 2699 . 2700) (nil fontified nil 2679 . 2699) (nil fontified nil 2678 . 2679) (nil fontified nil 2677 . 2678) (nil fontified nil 2676 . 2677) (nil fontified nil 2675 . 2676) (nil fontified nil 2674 . 2675) (nil fontified nil 2673 . 2674) (nil fontified nil 2672 . 2673) (nil fontified nil 2671 . 2672) (nil fontified nil 2670 . 2671) (nil fontified nil 2669 . 2670) (nil fontified nil 2668 . 2669) (nil fontified nil 2667 . 2668) (nil fontified nil 2649 . 2667) (nil fontified nil 2648 . 2649) (nil fontified nil 2647 . 2648) (nil fontified nil 2646 . 2647) (nil fontified nil 2645 . 2646) (nil fontified nil 2644 . 2645) (nil fontified nil 2643 . 2644) (nil fontified nil 2642 . 2643) (nil fontified nil 2641 . 2642) (nil fontified nil 2640 . 2641) (nil fontified nil 2639 . 2640) (nil fontified nil 2638 . 2639) (nil fontified nil 2634 . 2638) (nil fontified nil 2633 . 2634) (nil fontified nil 2632 . 2633) (nil fontified nil 2631 . 2632) (nil fontified nil 2630 . 2631) (nil fontified nil 2629 . 2630) (nil fontified nil 2628 . 2629) (nil fontified nil 2627 . 2628) (nil fontified nil 2626 . 2627) (nil fontified nil 2625 . 2626) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2622 . 2623) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2619 . 2620) (nil fontified nil 2618 . 2619) (nil fontified nil 2617 . 2618) (nil fontified nil 2616 . 2617) (nil fontified nil 2615 . 2616) (nil fontified nil 2614 . 2615) (nil fontified nil 2613 . 2614) (nil fontified nil 2612 . 2613) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (nil fontified nil 2602 . 2603) (nil fontified nil 2601 . 2602) (nil fontified nil 2600 . 2601) (nil fontified nil 2599 . 2600) (nil fontified nil 2598 . 2599) (2598 . 2997)) nil (25557 9951 6173 846000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 3093)) nil (25557 9951 6097 446000) 0 nil])
([nil nil ((#(" void Regex_PrintGroupTable()
 {
   for(uint16_t i=0;i<DEFAULT_TABLE_SIZE;i++)
     {
       Regex_GroupTableBucket* bucket=&(group_table[i]);

       if(bucket->name[0]!='\\0')
         {

           printf(\" Registerd Group %s at %d \\n \" , bucket->name,i);

           while( bucket->next !=NULL)
             {
               printf(\" Registerd Group %s at %d \\n \" , bucket->name,i);
               bucket=(Regex_GroupTableBucket*)bucket->next;
             }
         }
     }
   return 0;
 }
" 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t) 1 2 (face font-lock-type-face fontified t ws-butler-chg chg c-is-sws t) 2 3 (face font-lock-type-face fontified t ws-butler-chg chg) 3 4 (face font-lock-type-face fontified t ws-butler-chg chg) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (face font-lock-function-name-face fontified t ws-butler-chg chg) 7 8 (face font-lock-function-name-face fontified t ws-butler-chg chg) 8 9 (face font-lock-function-name-face fontified t ws-butler-chg chg) 9 10 (face font-lock-function-name-face fontified t ws-butler-chg chg) 10 11 (face font-lock-function-name-face fontified t ws-butler-chg chg) 11 12 (face font-lock-function-name-face fontified t ws-butler-chg chg) 12 13 (face font-lock-function-name-face fontified t ws-butler-chg chg) 13 14 (face font-lock-function-name-face fontified t ws-butler-chg chg) 14 15 (face font-lock-function-name-face fontified t ws-butler-chg chg) 15 16 (face font-lock-function-name-face fontified t ws-butler-chg chg) 16 17 (face font-lock-function-name-face fontified t ws-butler-chg chg) 17 18 (face font-lock-function-name-face fontified t ws-butler-chg chg) 18 19 (face font-lock-function-name-face fontified t ws-butler-chg chg) 19 20 (face font-lock-function-name-face fontified t ws-butler-chg chg) 20 21 (face font-lock-function-name-face fontified t ws-butler-chg chg) 21 22 (face font-lock-function-name-face fontified t ws-butler-chg chg) 22 23 (face font-lock-function-name-face fontified t ws-butler-chg chg) 23 24 (face font-lock-function-name-face fontified t ws-butler-chg chg) 24 25 (face font-lock-function-name-face fontified t ws-butler-chg chg) 25 26 (face font-lock-function-name-face fontified t ws-butler-chg chg) 26 27 (face font-lock-function-name-face fontified t ws-butler-chg chg) 27 28 (fontified t ws-butler-chg chg) 28 29 (fontified t ws-butler-chg chg) 29 31 (fontified t ws-butler-chg chg) 31 32 (fontified t ws-butler-chg chg) 32 36 (fontified t ws-butler-chg chg) 36 37 (face font-lock-keyword-face fontified t ws-butler-chg delete) 37 38 (face font-lock-keyword-face fontified t ws-butler-chg chg) 38 39 (face font-lock-keyword-face fontified t ws-butler-chg chg) 39 40 (fontified t ws-butler-chg chg) 40 44 (face font-lock-type-face fontified t ws-butler-chg chg) 44 45 (face font-lock-type-face fontified t ws-butler-chg chg) 45 46 (face font-lock-type-face fontified t ws-butler-chg chg) 46 47 (face font-lock-type-face fontified t ws-butler-chg chg) 47 48 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 48 49 (fontified t ws-butler-chg chg) 49 50 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 50 51 (fontified t ws-butler-chg chg) 51 52 (fontified t ws-butler-chg chg) 52 53 (fontified t ws-butler-chg chg) 53 54 (fontified t ws-butler-chg chg) 54 55 (fontified t ws-butler-chg chg) 55 73 (fontified t ws-butler-chg chg) 73 74 (fontified t ws-butler-chg chg) 74 75 (fontified t ws-butler-chg chg) 75 76 (fontified t ws-butler-chg chg) 76 77 (fontified t ws-butler-chg chg) 77 78 (fontified t ws-butler-chg chg) 78 84 (fontified t ws-butler-chg chg) 84 85 (fontified t ws-butler-chg delete) 85 93 (fontified t ws-butler-chg chg) 93 94 (face font-lock-type-face fontified t ws-butler-chg delete) 94 114 (face font-lock-type-face fontified t ws-butler-chg chg) 114 115 (face font-lock-type-face c-type c-decl-id-start fontified t ws-butler-chg chg) 115 116 (fontified t ws-butler-chg chg) 116 117 (fontified t ws-butler-chg chg) 117 118 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 118 119 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 119 120 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 120 121 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 121 122 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 122 123 (face font-lock-variable-name-face fontified t ws-butler-chg chg) 123 124 (fontified t ws-butler-chg chg) 124 125 (fontified t ws-butler-chg chg) 125 126 (fontified t ws-butler-chg chg) 126 127 (fontified t ws-butler-chg chg) 127 137 (fontified t ws-butler-chg chg) 137 138 (fontified t ws-butler-chg chg) 138 139 (fontified t ws-butler-chg chg) 139 140 (fontified t ws-butler-chg chg) 140 141 (fontified t ws-butler-chg chg) 141 142 (fontified t ws-butler-chg chg rear-nonsticky t) 142 143 (fontified t ws-butler-chg chg) 143 151 (fontified t ws-butler-chg chg) 151 152 (face font-lock-keyword-face fontified t ws-butler-chg delete) 152 153 (face font-lock-keyword-face fontified t ws-butler-chg chg) 153 154 (fontified t ws-butler-chg chg) 154 155 (fontified t ws-butler-chg chg) 155 156 (fontified t ws-butler-chg chg) 156 157 (fontified t ws-butler-chg chg) 157 158 (fontified t ws-butler-chg chg) 158 159 (fontified t ws-butler-chg chg) 159 160 (fontified t ws-butler-chg chg) 160 161 (fontified t ws-butler-chg chg) 161 162 (fontified t ws-butler-chg chg rear-nonsticky t) 162 163 (fontified t ws-butler-chg chg) 163 164 (fontified t ws-butler-chg chg) 164 165 (fontified t ws-butler-chg chg) 165 166 (fontified t ws-butler-chg chg) 166 167 (fontified t ws-butler-chg chg) 167 168 (fontified t ws-butler-chg chg) 168 169 (fontified t ws-butler-chg chg) 169 170 (fontified t ws-butler-chg chg) 170 171 (fontified t ws-butler-chg chg) 171 172 (face font-lock-string-face fontified t ws-butler-chg chg) 172 173 (face font-lock-string-face fontified t ws-butler-chg chg) 173 174 (face font-lock-string-face fontified t ws-butler-chg chg) 174 175 (face font-lock-string-face fontified t ws-butler-chg chg) 175 176 (fontified t ws-butler-chg chg) 176 186 (fontified t ws-butler-chg chg) 186 187 (fontified t ws-butler-chg delete) 187 188 (fontified t ws-butler-chg chg) 188 200 (fontified t ws-butler-chg chg) 200 201 (fontified t ws-butler-chg delete) 201 202 (fontified t ws-butler-chg chg) 202 203 (fontified t ws-butler-chg chg) 203 204 (fontified t ws-butler-chg chg) 204 205 (fontified t ws-butler-chg chg) 205 206 (fontified t ws-butler-chg chg) 206 207 (fontified t ws-butler-chg chg) 207 208 (face font-lock-string-face fontified t ws-butler-chg chg) 208 209 (face font-lock-string-face fontified t ws-butler-chg chg) 209 210 (face font-lock-string-face fontified t ws-butler-chg chg) 210 211 (face font-lock-string-face fontified t ws-butler-chg chg) 211 212 (face font-lock-string-face fontified t ws-butler-chg chg) 212 213 (face font-lock-string-face fontified t ws-butler-chg chg) 213 214 (face font-lock-string-face fontified t ws-butler-chg chg) 214 215 (face font-lock-string-face fontified t ws-butler-chg chg) 215 216 (face font-lock-string-face fontified t ws-butler-chg chg) 216 217 (face font-lock-string-face fontified t ws-butler-chg chg) 217 218 (face font-lock-string-face fontified t ws-butler-chg chg) 218 219 (face font-lock-string-face fontified t ws-butler-chg chg) 219 220 (face font-lock-string-face fontified t ws-butler-chg chg) 220 221 (face font-lock-string-face fontified t ws-butler-chg chg) 221 222 (face font-lock-string-face fontified t ws-butler-chg chg) 222 223 (face font-lock-string-face fontified t ws-butler-chg chg) 223 224 (face font-lock-string-face fontified t ws-butler-chg chg) 224 225 (face font-lock-string-face fontified t ws-butler-chg chg) 225 226 (face font-lock-string-face fontified t ws-butler-chg chg) 226 227 (face font-lock-string-face fontified t ws-butler-chg chg) 227 228 (face font-lock-string-face fontified t ws-butler-chg chg) 228 229 (face font-lock-string-face fontified t ws-butler-chg chg) 229 230 (face font-lock-string-face fontified t ws-butler-chg chg) 230 231 (face font-lock-string-face fontified t ws-butler-chg chg) 231 232 (face font-lock-string-face fontified t ws-butler-chg chg) 232 233 (face font-lock-string-face fontified t ws-butler-chg chg) 233 234 (face font-lock-string-face fontified t ws-butler-chg chg) 234 235 (face font-lock-string-face fontified t ws-butler-chg chg) 235 236 (face font-lock-string-face fontified t ws-butler-chg chg) 236 237 (face font-lock-string-face fontified t ws-butler-chg chg) 237 238 (face font-lock-string-face fontified t ws-butler-chg chg) 238 239 (fontified t ws-butler-chg chg) 239 240 (fontified t ws-butler-chg chg) 240 241 (fontified t ws-butler-chg chg) 241 242 (fontified t ws-butler-chg chg) 242 243 (fontified t ws-butler-chg chg) 243 244 (fontified t ws-butler-chg chg) 244 245 (fontified t ws-butler-chg chg) 245 246 (fontified t ws-butler-chg chg) 246 247 (fontified t ws-butler-chg chg) 247 248 (fontified t ws-butler-chg chg) 248 249 (fontified t ws-butler-chg chg rear-nonsticky t) 249 250 (fontified t ws-butler-chg chg) 250 251 (fontified t ws-butler-chg chg) 251 252 (fontified t ws-butler-chg chg) 252 253 (fontified t ws-butler-chg chg) 253 254 (fontified t ws-butler-chg chg) 254 255 (fontified t ws-butler-chg chg) 255 256 (fontified t ws-butler-chg chg) 256 257 (fontified t ws-butler-chg chg rear-nonsticky t) 257 258 (fontified t ws-butler-chg chg) 258 270 (fontified t ws-butler-chg chg) 270 271 (face font-lock-keyword-face fontified t ws-butler-chg delete) 271 275 (face font-lock-keyword-face fontified t ws-butler-chg chg) 275 276 (fontified t ws-butler-chg chg) 276 277 (fontified t ws-butler-chg chg) 277 278 (fontified t ws-butler-chg chg) 278 279 (fontified t ws-butler-chg chg) 279 280 (fontified t ws-butler-chg chg) 280 281 (fontified t ws-butler-chg chg) 281 282 (fontified t ws-butler-chg chg) 282 283 (fontified t ws-butler-chg chg) 283 284 (fontified t ws-butler-chg chg) 284 285 (fontified t ws-butler-chg chg rear-nonsticky t) 285 286 (fontified t ws-butler-chg chg) 286 287 (fontified t ws-butler-chg chg) 287 288 (fontified t ws-butler-chg chg) 288 289 (fontified t ws-butler-chg chg) 289 290 (fontified t ws-butler-chg chg) 290 291 (fontified t ws-butler-chg chg) 291 292 (fontified t ws-butler-chg chg) 292 293 (face font-lock-constant-face fontified t ws-butler-chg chg) 293 294 (face font-lock-constant-face fontified t ws-butler-chg chg) 294 295 (face font-lock-constant-face fontified t ws-butler-chg chg) 295 296 (face font-lock-constant-face fontified t ws-butler-chg chg) 296 297 (fontified t ws-butler-chg chg rear-nonsticky t) 297 311 (fontified t ws-butler-chg chg) 311 312 (fontified t ws-butler-chg delete) 312 328 (fontified t ws-butler-chg chg) 328 329 (fontified t ws-butler-chg delete) 329 330 (fontified t ws-butler-chg chg) 330 331 (fontified t ws-butler-chg chg) 331 332 (fontified t ws-butler-chg chg) 332 333 (fontified t ws-butler-chg chg) 333 334 (fontified t ws-butler-chg chg) 334 335 (fontified t ws-butler-chg chg) 335 336 (face font-lock-string-face fontified t ws-butler-chg chg) 336 337 (face font-lock-string-face fontified t ws-butler-chg chg) 337 338 (face font-lock-string-face fontified t ws-butler-chg chg) 338 339 (face font-lock-string-face fontified t ws-butler-chg chg) 339 340 (face font-lock-string-face fontified t ws-butler-chg chg) 340 341 (face font-lock-string-face fontified t ws-butler-chg chg) 341 342 (face font-lock-string-face fontified t ws-butler-chg chg) 342 343 (face font-lock-string-face fontified t ws-butler-chg chg) 343 344 (face font-lock-string-face fontified t ws-butler-chg chg) 344 345 (face font-lock-string-face fontified t ws-butler-chg chg) 345 346 (face font-lock-string-face fontified t ws-butler-chg chg) 346 347 (face font-lock-string-face fontified t ws-butler-chg chg) 347 348 (face font-lock-string-face fontified t ws-butler-chg chg) 348 349 (face font-lock-string-face fontified t ws-butler-chg chg) 349 350 (face font-lock-string-face fontified t ws-butler-chg chg) 350 351 (face font-lock-string-face fontified t ws-butler-chg chg) 351 352 (face font-lock-string-face fontified t ws-butler-chg chg) 352 353 (face font-lock-string-face fontified t ws-butler-chg chg) 353 354 (face font-lock-string-face fontified t ws-butler-chg chg) 354 355 (face font-lock-string-face fontified t ws-butler-chg chg) 355 356 (face font-lock-string-face fontified t ws-butler-chg chg) 356 357 (face font-lock-string-face fontified t ws-butler-chg chg) 357 358 (face font-lock-string-face fontified t ws-butler-chg chg) 358 359 (face font-lock-string-face fontified t ws-butler-chg chg) 359 360 (face font-lock-string-face fontified t ws-butler-chg chg) 360 361 (face font-lock-string-face fontified t ws-butler-chg chg) 361 362 (face font-lock-string-face fontified t ws-butler-chg chg) 362 363 (face font-lock-string-face fontified t ws-butler-chg chg) 363 364 (face font-lock-string-face fontified t ws-butler-chg chg) 364 365 (face font-lock-string-face fontified t ws-butler-chg chg) 365 366 (face font-lock-string-face fontified t ws-butler-chg chg) 366 367 (fontified t ws-butler-chg chg) 367 368 (fontified t ws-butler-chg chg) 368 369 (fontified t ws-butler-chg chg) 369 370 (fontified t ws-butler-chg chg) 370 371 (fontified t ws-butler-chg chg) 371 372 (fontified t ws-butler-chg chg) 372 373 (fontified t ws-butler-chg chg) 373 374 (fontified t ws-butler-chg chg) 374 375 (fontified t ws-butler-chg chg) 375 376 (fontified t ws-butler-chg chg) 376 377 (fontified t ws-butler-chg chg rear-nonsticky t) 377 378 (fontified t ws-butler-chg chg) 378 379 (fontified t ws-butler-chg chg) 379 380 (fontified t ws-butler-chg chg) 380 381 (fontified t ws-butler-chg chg) 381 382 (fontified t ws-butler-chg chg) 382 383 (fontified t ws-butler-chg chg) 383 384 (fontified t ws-butler-chg chg) 384 385 (fontified t ws-butler-chg chg rear-nonsticky t) 385 401 (fontified t ws-butler-chg chg) 401 402 (fontified t ws-butler-chg delete) 402 403 (fontified t ws-butler-chg chg) 403 404 (fontified t ws-butler-chg chg) 404 405 (fontified t ws-butler-chg chg) 405 406 (fontified t ws-butler-chg chg) 406 407 (fontified t ws-butler-chg chg) 407 408 (fontified t ws-butler-chg chg) 408 409 (fontified t ws-butler-chg chg) 409 431 (face font-lock-type-face fontified t ws-butler-chg chg) 431 432 (fontified t ws-butler-chg chg) 432 433 (fontified t ws-butler-chg chg) 433 434 (fontified t ws-butler-chg chg) 434 435 (fontified t ws-butler-chg chg) 435 436 (fontified t ws-butler-chg chg) 436 437 (fontified t ws-butler-chg chg) 437 438 (fontified t ws-butler-chg chg) 438 439 (fontified t ws-butler-chg chg) 439 440 (fontified t ws-butler-chg chg) 440 441 (fontified t ws-butler-chg chg rear-nonsticky t) 441 442 (fontified t ws-butler-chg chg) 442 443 (fontified t ws-butler-chg chg) 443 444 (fontified t ws-butler-chg chg) 444 445 (fontified t ws-butler-chg chg) 445 446 (fontified t ws-butler-chg chg) 446 460 (fontified t ws-butler-chg chg) 460 461 (fontified t ws-butler-chg delete) 461 471 (fontified t ws-butler-chg chg) 471 472 (fontified t ws-butler-chg delete) 472 478 (fontified t ws-butler-chg chg) 478 479 (fontified t ws-butler-chg delete) 479 483 (fontified t ws-butler-chg chg) 483 484 (face font-lock-keyword-face fontified t ws-butler-chg delete) 484 489 (face font-lock-keyword-face fontified t ws-butler-chg chg) 489 492 (fontified t ws-butler-chg chg) 492 494 (fontified t ws-butler-chg chg) 494 495 (fontified t ws-butler-chg chg) 495 496 (rear-nonsticky t fontified t ws-butler-chg chg)) . 2597) (undo-tree-id1425 . -496) (undo-tree-id1426 . -496) (undo-tree-id1427 . -1) (undo-tree-id1428 . -496) (undo-tree-id1429 . -496)) nil (25557 9951 6095 856000) 0 nil])
([nil nil ((2597 . 2598)) nil (25557 9951 6071 852000) 0 nil])
([nil nil ((2598 . 2601)) nil (25557 9951 6067 439000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . 8199) (8187 . 8189) (#("   " 0 3 (fontified nil ws-butler-chg chg)) . 8187) (8181 . 8185) (#("     " 0 5 (fontified nil ws-butler-chg chg)) . 8181) (8171 . 8179) (#("         " 0 9 (fontified nil ws-butler-chg chg)) . 8171) (8157 . 8169) (#("             " 0 13 (fontified nil ws-butler-chg chg)) . 8157) (8097 . 8111) (#("               " 0 15 (fontified nil ws-butler-chg chg)) . 8097) (8025 . 8039) (#("               " 0 15 (fontified nil ws-butler-chg chg)) . 8025) (8011 . 8023) (#("             " 0 13 (fontified nil ws-butler-chg chg)) . 8011) (7973 . 7983) (#("           " 0 11 (fontified nil ws-butler-chg chg)) . 7973) (7904 . 7914) (#("           " 0 11 (fontified nil ws-butler-chg chg)) . 7904) (7893 . 7901) (#("         " 0 9 (fontified nil ws-butler-chg chg)) . 7893) (7861 . 7867) (#("       " 0 7 (fontified nil ws-butler-chg chg)) . 7861) (7804 . 7810) (#("       " 0 7 (fontified nil ws-butler-chg chg)) . 7804) (7798 . 7802) (#("     " 0 5 (fontified nil ws-butler-chg chg)) . 7798) (7753 . 7755) (#("   " 0 3 (fontified nil ws-butler-chg chg)) . 7753) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 7751) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . 7722) (nil fontified nil 8217 . 8218) (nil fontified nil 8216 . 8217) (nil fontified nil 8214 . 8216) (nil fontified nil 8211 . 8214) (nil fontified nil 8206 . 8211) (nil fontified nil 8205 . 8206) (nil fontified nil 8201 . 8205) (nil fontified nil 8200 . 8201) (nil fontified nil 8194 . 8200) (nil fontified nil 8193 . 8194) (nil fontified nil 8183 . 8193) (nil fontified nil 8182 . 8183) (nil fontified nil 8168 . 8182) (nil fontified nil 8167 . 8168) (nil fontified nil 8166 . 8167) (nil fontified nil 8165 . 8166) (nil fontified nil 8164 . 8165) (nil fontified nil 8163 . 8164) (nil fontified nil 8162 . 8163) (nil fontified nil 8161 . 8162) (nil fontified nil 8160 . 8161) (nil fontified nil 8159 . 8160) (nil fontified nil 8158 . 8159) (nil fontified nil 8157 . 8158) (nil fontified nil 8156 . 8157) (nil fontified nil 8155 . 8156) (nil fontified nil 8154 . 8155) (nil fontified nil 8153 . 8154) (nil fontified nil 8131 . 8153) (nil fontified nil 8130 . 8131) (nil fontified nil 8129 . 8130) (nil fontified nil 8128 . 8129) (nil fontified nil 8127 . 8128) (nil fontified nil 8126 . 8127) (nil fontified nil 8125 . 8126) (nil fontified nil 8124 . 8125) (nil fontified nil 8123 . 8124) (nil fontified nil 8107 . 8123) (nil fontified nil 8106 . 8107) (nil fontified nil 8105 . 8106) (nil fontified nil 8104 . 8105) (nil fontified nil 8103 . 8104) (nil fontified nil 8102 . 8103) (nil fontified nil 8101 . 8102) (nil fontified nil 8100 . 8101) (nil fontified nil 8099 . 8100) (nil fontified nil 8098 . 8099) (nil fontified nil 8097 . 8098) (nil fontified nil 8096 . 8097) (nil fontified nil 8095 . 8096) (nil fontified nil 8094 . 8095) (nil fontified nil 8093 . 8094) (nil fontified nil 8092 . 8093) (nil fontified nil 8091 . 8092) (nil fontified nil 8090 . 8091) (nil fontified nil 8089 . 8090) (nil fontified nil 8088 . 8089) (nil fontified nil 8087 . 8088) (nil fontified nil 8086 . 8087) (nil fontified nil 8085 . 8086) (nil fontified nil 8084 . 8085) (nil fontified nil 8083 . 8084) (nil fontified nil 8082 . 8083) (nil fontified nil 8081 . 8082) (nil fontified nil 8080 . 8081) (nil fontified nil 8079 . 8080) (nil fontified nil 8078 . 8079) (nil fontified nil 8077 . 8078) (nil fontified nil 8076 . 8077) (nil fontified nil 8075 . 8076) (nil fontified nil 8074 . 8075) (nil fontified nil 8073 . 8074) (nil fontified nil 8072 . 8073) (nil fontified nil 8071 . 8072) (nil fontified nil 8070 . 8071) (nil fontified nil 8069 . 8070) (nil fontified nil 8068 . 8069) (nil fontified nil 8067 . 8068) (nil fontified nil 8066 . 8067) (nil fontified nil 8065 . 8066) (nil fontified nil 8064 . 8065) (nil fontified nil 8063 . 8064) (nil fontified nil 8062 . 8063) (nil fontified nil 8061 . 8062) (nil fontified nil 8060 . 8061) (nil fontified nil 8059 . 8060) (nil fontified nil 8058 . 8059) (nil fontified nil 8057 . 8058) (nil fontified nil 8056 . 8057) (nil fontified nil 8055 . 8056) (nil fontified nil 8054 . 8055) (nil fontified nil 8053 . 8054) (nil fontified nil 8052 . 8053) (nil fontified nil 8051 . 8052) (nil fontified nil 8050 . 8051) (nil fontified nil 8034 . 8050) (nil fontified nil 8033 . 8034) (nil fontified nil 8019 . 8033) (nil fontified nil 8018 . 8019) (nil fontified nil 8017 . 8018) (nil fontified nil 8016 . 8017) (nil fontified nil 8015 . 8016) (nil fontified nil 8014 . 8015) (nil fontified nil 8013 . 8014) (nil fontified nil 8012 . 8013) (nil fontified nil 8011 . 8012) (nil fontified nil 8010 . 8011) (nil fontified nil 8009 . 8010) (nil fontified nil 8008 . 8009) (nil fontified nil 8007 . 8008) (nil fontified nil 8006 . 8007) (nil fontified nil 8005 . 8006) (nil fontified nil 8004 . 8005) (nil fontified nil 8003 . 8004) (nil fontified nil 8002 . 8003) (nil fontified nil 8001 . 8002) (nil fontified nil 8000 . 8001) (nil fontified nil 7999 . 8000) (nil fontified nil 7998 . 7999) (nil fontified nil 7997 . 7998) (nil fontified nil 7993 . 7997) (nil fontified nil 7992 . 7993) (nil fontified nil 7980 . 7992) (nil fontified nil 7979 . 7980) (nil fontified nil 7978 . 7979) (nil fontified nil 7977 . 7978) (nil fontified nil 7976 . 7977) (nil fontified nil 7975 . 7976) (nil fontified nil 7974 . 7975) (nil fontified nil 7973 . 7974) (nil fontified nil 7972 . 7973) (nil fontified nil 7971 . 7972) (nil fontified nil 7970 . 7971) (nil fontified nil 7969 . 7970) (nil fontified nil 7968 . 7969) (nil fontified nil 7967 . 7968) (nil fontified nil 7966 . 7967) (nil fontified nil 7965 . 7966) (nil fontified nil 7964 . 7965) (nil fontified nil 7963 . 7964) (nil fontified nil 7962 . 7963) (nil fontified nil 7961 . 7962) (nil fontified nil 7960 . 7961) (nil fontified nil 7959 . 7960) (nil fontified nil 7958 . 7959) (nil fontified nil 7957 . 7958) (nil fontified nil 7956 . 7957) (nil fontified nil 7955 . 7956) (nil fontified nil 7954 . 7955) (nil fontified nil 7953 . 7954) (nil fontified nil 7952 . 7953) (nil fontified nil 7951 . 7952) (nil fontified nil 7950 . 7951) (nil fontified nil 7949 . 7950) (nil fontified nil 7948 . 7949) (nil fontified nil 7947 . 7948) (nil fontified nil 7946 . 7947) (nil fontified nil 7945 . 7946) (nil fontified nil 7944 . 7945) (nil fontified nil 7943 . 7944) (nil fontified nil 7942 . 7943) (nil fontified nil 7941 . 7942) (nil fontified nil 7940 . 7941) (nil fontified nil 7939 . 7940) (nil fontified nil 7938 . 7939) (nil fontified nil 7937 . 7938) (nil fontified nil 7936 . 7937) (nil fontified nil 7935 . 7936) (nil fontified nil 7934 . 7935) (nil fontified nil 7933 . 7934) (nil fontified nil 7932 . 7933) (nil fontified nil 7931 . 7932) (nil fontified nil 7930 . 7931) (nil fontified nil 7929 . 7930) (nil fontified nil 7928 . 7929) (nil fontified nil 7927 . 7928) (nil fontified nil 7926 . 7927) (nil fontified nil 7925 . 7926) (nil fontified nil 7924 . 7925) (nil fontified nil 7923 . 7924) (nil fontified nil 7922 . 7923) (nil fontified nil 7910 . 7922) (nil fontified nil 7909 . 7910) (nil fontified nil 7908 . 7909) (nil fontified nil 7898 . 7908) (nil fontified nil 7897 . 7898) (nil fontified nil 7896 . 7897) (nil fontified nil 7895 . 7896) (nil fontified nil 7894 . 7895) (nil fontified nil 7893 . 7894) (nil fontified nil 7892 . 7893) (nil fontified nil 7891 . 7892) (nil fontified nil 7890 . 7891) (nil fontified nil 7889 . 7890) (nil fontified nil 7888 . 7889) (nil fontified nil 7887 . 7888) (nil fontified nil 7886 . 7887) (nil fontified nil 7885 . 7886) (nil fontified nil 7884 . 7885) (nil fontified nil 7883 . 7884) (nil fontified nil 7882 . 7883) (nil fontified nil 7881 . 7882) (nil fontified nil 7880 . 7881) (nil fontified nil 7879 . 7880) (nil fontified nil 7878 . 7879) (nil fontified nil 7877 . 7878) (nil fontified nil 7876 . 7877) (nil fontified nil 7875 . 7876) (nil fontified nil 7874 . 7875) (nil fontified nil 7873 . 7874) (nil fontified nil 7865 . 7873) (nil fontified nil 7864 . 7865) (nil fontified nil 7863 . 7864) (nil fontified nil 7862 . 7863) (nil fontified nil 7861 . 7862) (nil fontified nil 7860 . 7861) (nil fontified nil 7859 . 7860) (nil fontified nil 7849 . 7859) (nil fontified nil 7848 . 7849) (nil fontified nil 7847 . 7848) (nil fontified nil 7846 . 7847) (nil fontified nil 7845 . 7846) (nil fontified nil 7844 . 7845) (nil fontified nil 7843 . 7844) (nil fontified nil 7842 . 7843) (nil fontified nil 7841 . 7842) (nil fontified nil 7840 . 7841) (nil fontified nil 7839 . 7840) (nil fontified nil 7838 . 7839) (nil fontified nil 7837 . 7838) (nil fontified nil 7836 . 7837) (nil fontified nil 7816 . 7836) (nil fontified nil 7815 . 7816) (nil fontified nil 7807 . 7815) (nil fontified nil 7806 . 7807) (nil fontified nil 7800 . 7806) (nil fontified nil 7799 . 7800) (nil fontified nil 7798 . 7799) (nil fontified nil 7797 . 7798) (nil fontified nil 7796 . 7797) (nil fontified nil 7795 . 7796) (nil fontified nil 7777 . 7795) (nil fontified nil 7776 . 7777) (nil fontified nil 7775 . 7776) (nil fontified nil 7774 . 7775) (nil fontified nil 7773 . 7774) (nil fontified nil 7772 . 7773) (nil fontified nil 7771 . 7772) (nil fontified nil 7770 . 7771) (nil fontified nil 7769 . 7770) (nil fontified nil 7768 . 7769) (nil fontified nil 7767 . 7768) (nil fontified nil 7766 . 7767) (nil fontified nil 7762 . 7766) (nil fontified nil 7761 . 7762) (nil fontified nil 7760 . 7761) (nil fontified nil 7759 . 7760) (nil fontified nil 7758 . 7759) (nil fontified nil 7754 . 7758) (nil fontified nil 7753 . 7754) (nil fontified nil 7751 . 7753) (nil fontified nil 7750 . 7751) (nil fontified nil 7749 . 7750) (nil fontified nil 7748 . 7749) (nil fontified nil 7747 . 7748) (nil fontified nil 7746 . 7747) (nil fontified nil 7745 . 7746) (nil fontified nil 7744 . 7745) (nil fontified nil 7743 . 7744) (nil fontified nil 7742 . 7743) (nil fontified nil 7741 . 7742) (nil fontified nil 7740 . 7741) (nil fontified nil 7739 . 7740) (nil fontified nil 7738 . 7739) (nil fontified nil 7737 . 7738) (nil fontified nil 7736 . 7737) (nil fontified nil 7735 . 7736) (nil fontified nil 7734 . 7735) (nil fontified nil 7733 . 7734) (nil fontified nil 7732 . 7733) (nil fontified nil 7731 . 7732) (nil fontified nil 7730 . 7731) (nil fontified nil 7729 . 7730) (nil fontified nil 7728 . 7729) (nil fontified nil 7727 . 7728) (nil fontified nil 7726 . 7727) (nil fontified nil 7725 . 7726) (nil fontified nil 7724 . 7725) (nil fontified nil 7723 . 7724) (nil fontified nil 7722 . 7723) (7722 . 8218) (t 25557 9951 81783 240000)) nil (25557 9953 170121 724000) 0 nil])
([nil nil ((7722 . 7723) (t 25557 9953 249775 843000)) nil (25557 9955 75493 488000) 0 nil])
([nil nil ((2596 . 2598) (t 25557 9955 157769 333000)) nil (25557 9973 984606 669000) 0 nil])
([nil nil ((2597 . 2599) (#(" " 0 1 (c-in-sws t c-is-sws t ws-butler-chg chg fontified t)) . 2597) (undo-tree-id1439 . -1) 2598) nil (25557 9973 984605 328000) 0 nil])
([nil nil ((2599 . 2604)) nil (25557 9973 984603 77000) 0 nil])
([nil nil ((2604 . 2608)) nil (25557 9973 984602 84000) 0 nil])
([nil nil ((2599 . 2620) (#("Regex_Pri" 0 1 (c-is-sws t ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t)) . -2599) (undo-tree-id1437 . -9) (undo-tree-id1438 . -9) 2608) nil (25557 9973 984600 542000) 0 nil])
([nil nil ((2620 . 2622)) nil (25557 9973 984597 61000) 0 nil])
([nil nil ((2622 . 2623)) nil (25557 9973 984595 979000) 0 nil])
([nil nil ((2623 . 2625)) nil (25557 9973 984594 438000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2624) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 2625) nil (25557 9973 984570 898000) 0 nil])
([nil nil ((2624 . 2625) 2625 (t 25557 9974 65704 860000)) nil (25557 9988 191707 940000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 2624) (undo-tree-id1444 . -1) 2625 (t 25557 9974 65704 860000)) nil (25557 9988 191706 14000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2007) (undo-tree-id1440 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2008) (undo-tree-id1441 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2009) (undo-tree-id1442 . -1) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2010) (undo-tree-id1443 . -1) 2011) nil (25557 9988 191702 90000) 0 nil])
([nil nil ((2007 . 2013)) nil (25557 9988 191691 53000) 0 nil])
([nil nil ((2013 . 2014)) nil (25557 9988 191686 371000) 0 nil])
([nil nil ((#("  return 0;
" 0 2 (fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 8 (face font-lock-keyword-face fontified t) 8 11 (fontified t) 11 12 (fontified t)) . 8219) (undo-tree-id1445 . -12) (t 25557 9988 273656 457000)) nil (25557 9991 305599 474000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2007) (undo-tree-id1446 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2008) (undo-tree-id1447 . -1) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2009) (undo-tree-id1448 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2010) (undo-tree-id1449 . -1) (#("8" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2011) (undo-tree-id1450 . -1) (#("_" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2012) (undo-tree-id1451 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2013) (undo-tree-id1452 . -1) 2014 (t 25557 9991 385645 862000)) nil (25557 10004 457250 206000) 0 nil])
([nil nil ((2007 . 2011)) nil (25557 10004 457231 520000) 0 nil])
([nil nil ((#("printf(\"Collision Accured %s at %d \\n \", name, slot);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (face font-lock-string-face fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 7192) (undo-tree-id1529 . -53) (undo-tree-id1530 . -53) (undo-tree-id1531 . -53) (t 25557 10004 533601 119000)) nil (25557 10026 3157 301000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -7188) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (#("
" 0 1 (fontified t)) . -7189) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (#("
" 0 1 (fontified t)) . -7190) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (#(" " 0 1 (fontified t)) . -7191) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) 7192) nil (25557 10026 3151 149000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . 7185) (undo-tree-id1453 . -3) (undo-tree-id1454 . -3) (undo-tree-id1455 . -3) (undo-tree-id1456 . -3) (undo-tree-id1457 . -3) (undo-tree-id1458 . -3) (undo-tree-id1459 . -3) (undo-tree-id1460 . -3) (undo-tree-id1461 . -3) (undo-tree-id1462 . -3) (undo-tree-id1463 . -3) (undo-tree-id1464 . -3) (undo-tree-id1465 . -3) (undo-tree-id1466 . -3) (undo-tree-id1467 . -3) (undo-tree-id1468 . -3) (undo-tree-id1469 . -3) (undo-tree-id1470 . -3) 7188) nil (25557 10026 3107 853000) 0 nil])
([nil nil ((7185 . 7188) 7188 (t 25557 10026 77527 872000)) nil (25557 10027 260491 60000) 0 nil])
([nil nil ((7188 . 7189) (t 25557 10026 77527 872000)) nil (25557 10027 260473 327000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7039) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (#(" " 0 1 (fontified t)) . -7040) (undo-tree-id1538 . -1) 7041 (t 25557 10027 345523 567000)) nil (25557 10036 158477 660000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 7042) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 7042) (#(" " 0 1 (fontified t)) . 7042)) nil (25557 10036 158473 103000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete fontified t)) . 7104) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 7104) (#(" " 0 1 (fontified t)) . 7104)) nil (25557 10036 158471 686000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 7163) (#(" " 0 1 (ws-butler-chg delete fontified t)) . 7163) (#(" " 0 1 (fontified t)) . 7163)) nil (25557 10036 158470 249000) 0 nil])
([nil nil ((7163 . 7164)) nil (25557 10036 158468 895000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7177)) nil (25557 10036 158467 423000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7176) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1)) nil (25557 10036 158463 406000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7163) (t 25557 10036 241493 353000)) nil (25557 10036 914521 564000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t c-is-sws t)) . -2596) (undo-tree-id1547 . -1) 2597 (t 25557 10036 993490 799000)) nil (25557 13205 11801 190000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2626) (undo-tree-id1546 . -1) 2627) nil (25557 13205 11797 694000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -118) (undo-tree-id1545 . -1) 119) nil (25557 13205 11795 838000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -139) (undo-tree-id1544 . -1) 140) nil (25557 13205 11793 944000) 0 nil])
([nil nil ((#("Logic&Control" 0 1 (c-in-sws t face font-lock-comment-face ws-butler-chg delete fontified t) 1 13 (c-in-sws t face font-lock-comment-face fontified t)) . 139) (undo-tree-id1539 . -13) (undo-tree-id1540 . -13) (undo-tree-id1541 . -13) (undo-tree-id1542 . -13) (undo-tree-id1543 . -13)) nil (25557 13205 11791 277000) 0 nil])
([nil nil ((nil rear-nonsticky nil 151 . 152) (nil fontified nil 140 . 152) (nil fontified nil 139 . 140) (139 . 152)) nil (25557 13205 11780 42000) 0 nil])
([nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 161 . 173) (nil fontified nil 160 . 161) (160 . 173)) nil (25557 13205 11774 919000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name);
" 0 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 17 (face font-lock-function-name-face fontified t) 17 24 (face font-lock-function-name-face fontified t) 24 25 (c-type c-decl-arg-start fontified t) 25 29 (face font-lock-type-face fontified t) 29 31 (fontified t) 31 35 (face font-lock-variable-name-face fontified t) 35 37 (fontified t) 37 38 (fontified t)) . 1892) (undo-tree-id1548 . -37) (undo-tree-id1549 . -25) (undo-tree-id1550 . -36) (undo-tree-id1551 . -38) (undo-tree-id1552 . -38) (undo-tree-id1553 . -38) (undo-tree-id1554 . -38) (undo-tree-id1555 . -38) (undo-tree-id1556 . -38) (undo-tree-id1557 . -38) (t 25557 13205 94399 699000)) nil (25557 14253 190379 801000) 0 nil])
([nil nil ((1945 . 1946)) nil (25557 14253 190363 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1983 . 1984) (nil fontified nil 1983 . 1984) (nil fontified nil 1981 . 1983) (nil fontified nil 1977 . 1981) (nil fontified nil 1975 . 1977) (nil fontified nil 1971 . 1975) (nil fontified nil 1970 . 1971) (nil fontified nil 1963 . 1970) (nil fontified nil 1955 . 1963) (nil fontified nil 1954 . 1955) (nil fontified nil 1953 . 1954) (nil fontified nil 1946 . 1953) (1946 . 1984)) nil (25557 14253 190358 843000) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-type-face fontified t)) . -1990) (undo-tree-id1563 . -1) 1991 (t 25557 14253 277008 673000)) nil (25557 14264 875542 947000) 0 nil])
([nil nil ((1990 . 1991)) nil (25557 14264 875540 751000) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -1990) (undo-tree-id1562 . -1) 1991) nil (25557 14264 875539 599000) 0 nil])
([nil nil ((1990 . 1991)) nil (25557 14264 875537 536000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-type-face fontified t)) . -1989) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (#("8" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -1990) (undo-tree-id1561 . -1) 1991) nil (25557 14264 875535 603000) 0 nil])
([nil nil ((1989 . 1990)) nil (25557 14264 875521 75000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-type-face fontified t)) . -1985) (undo-tree-id1564 . -1) 1986 (t 25557 14264 960951 627000)) nil (25557 14265 986400 968000) 0 nil])
([nil nil ((#("uint64_t Regex_HashGroup(char* name);
" 0 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 17 (face font-lock-function-name-face fontified t) 17 24 (face font-lock-function-name-face fontified t) 24 25 (c-type c-decl-arg-start fontified t) 25 29 (face font-lock-type-face fontified t) 29 31 (fontified t) 31 35 (face font-lock-variable-name-face fontified t) 35 37 (fontified t) 37 38 (rear-nonsticky t fontified t)) . 1946) (undo-tree-id1565 . -37) (undo-tree-id1566 . -25) (undo-tree-id1567 . -36) (undo-tree-id1568 . -38) (t 25557 14266 68946 223000)) nil (25557 14276 168627 959000) 0 nil])
([nil nil ((1892 . 1893)) nil (25557 14276 168616 244000) 0 nil])
([nil nil ((nil fontified nil 1930 . 1931) (nil fontified nil 1928 . 1930) (nil fontified nil 1924 . 1928) (nil fontified nil 1922 . 1924) (nil fontified nil 1918 . 1922) (nil fontified nil 1917 . 1918) (nil fontified nil 1910 . 1917) (nil fontified nil 1902 . 1910) (nil fontified nil 1901 . 1902) (nil fontified nil 1900 . 1901) (nil fontified nil 1893 . 1900) (1893 . 1931)) nil (25557 14276 168611 82000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1984) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) 1985 (t 25557 14276 244896 625000)) nil (25557 14277 558025 189000) 0 nil])
([nil nil ((1892 . 1895) (t 25557 14277 644889 809000)) nil (25557 14286 514820 978000) 0 nil])
([nil nil ((1810 . 1812)) nil (25557 14286 514819 471000) 0 nil])
([nil nil ((1812 . 1814)) nil (25557 14286 514818 458000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1894) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) 1895) nil (25557 14286 514816 899000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -1812) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) 1813) nil (25557 14286 514810 961000) 0 nil])
([nil nil ((1607 . 1608) (t 25557 14286 596846 243000)) nil (25557 14289 630674 542000) 0 nil])
([nil nil ((#("int16_t Regex_IsStrictWord(char** head);
" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t) 7 8 (fontified t) 8 26 (face font-lock-function-name-face fontified t) 26 27 (c-type c-decl-arg-start fontified t) 27 31 (face font-lock-type-face fontified t) 31 34 (fontified t) 34 38 (face font-lock-variable-name-face fontified t) 38 41 (fontified t)) . 1565) (undo-tree-id1583 . -40) (undo-tree-id1584 . -27) (undo-tree-id1585 . -39) (undo-tree-id1586 . -41) (t 25557 14289 712831 89000)) nil (25557 14297 437957 167000) 0 nil])
([nil nil ((1626 . 1628)) nil (25557 14297 437946 257000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1668 . 1669) (nil fontified nil 1666 . 1669) (nil fontified nil 1662 . 1666) (nil fontified nil 1659 . 1662) (nil fontified nil 1655 . 1659) (nil fontified nil 1654 . 1655) (nil fontified nil 1636 . 1654) (nil fontified nil 1635 . 1636) (nil fontified nil 1634 . 1635) (nil fontified nil 1628 . 1634) (1628 . 1669)) nil (25557 14297 437941 153000) 0 nil])
([nil nil ((1745 . 1746) (t 25557 14297 524793 125000)) nil (25557 14299 108826 756000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1206) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) 1207 (t 25557 14299 188785 44000)) nil (25557 14306 235300 44000) 0 nil])
([nil nil ((207 . 214) (t 25557 14306 316750 449000)) nil (25558 13950 535304 295000) 0 nil])
([nil nil ((246 . 253)) nil (25558 13950 535303 227000) 0 nil])
([nil nil ((284 . 291)) nil (25558 13950 535301 818000) 0 nil])
([nil nil ((323 . 330)) nil (25558 13950 535297 289000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t c-in-sws t)) . -332) (undo-tree-id0 . -1) 333 (t 25558 13950 638845 208000)) nil (25558 13952 735615 454000) 0 nil])
([nil nil ((332 . 333)) nil (25558 13952 735594 533000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t c-in-sws t)) . -332) (undo-tree-id2 . -1) 333 (t 25558 13952 826838 741000)) nil (25558 13961 854958 440000) 0 nil])
([nil nil ((332 . 333)) nil (25558 13961 854956 159000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t c-in-sws t)) . -293) (undo-tree-id1 . -1) 294) nil (25558 13961 854954 506000) 0 nil])
([nil nil ((293 . 294)) nil (25558 13961 854944 643000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t c-in-sws t)) . -253) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("6" 0 1 (fontified t c-in-sws t)) . -254) (undo-tree-id9 . -1) 255 (t 25558 13961 938811 824000)) nil (25558 13979 714462 244000) 0 nil])
([nil nil ((253 . 255)) nil (25558 13979 714443 304000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t c-in-sws t ws-butler-chg chg)) . -253) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("4" 0 1 (fontified t ws-butler-chg chg c-in-sws t)) . -254) (undo-tree-id6 . -1) 255) nil (25558 13979 714441 902000) 0 nil])
([nil nil ((253 . 254)) nil (25558 13979 714437 812000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t c-in-sws t ws-butler-chg chg)) . -253) (undo-tree-id3 . -1) 254) nil (25558 13979 714435 691000) 0 nil])
([nil nil ((253 . 255)) nil (25558 13979 714425 62000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t c-in-sws t)) . -253) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("6" 0 1 (fontified t c-in-sws t)) . -254) (undo-tree-id14 . -1) 255 (t 25558 13979 790759 91000)) nil (25558 13984 782831 377000) 0 nil])
([nil nil ((253 . 255)) nil (25558 13984 782816 449000) 0 nil])
([nil nil ((#(" Regex_PrintGroupTable();
" 0 1 (fontified t c-is-sws t c-in-sws t) 1 2 (fontified t c-is-sws t) 2 26 (fontified t)) . 2643) (undo-tree-id15 . -26) (t 25558 13984 874744 73000)) nil (25558 14006 572048 804000) 0 nil])
([nil nil ((#(" Regex_RegisterGroup(test3,group);
" 0 35 (fontified t)) . 2558) (t 25558 14006 654679 739000)) nil (25558 14009 250965 38000) 0 nil])
([nil nil ((2558 . 2560)) nil (25558 14009 250963 502000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t ws-butler-chg chg)) . -2558) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -2559) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 2560) nil (25558 14009 250958 993000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Word Functions Start
" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 85 (c-in-sws t fontified t face font-lock-comment-face) 85 89 (c-in-sws t fontified t face font-lock-comment-face) 89 90 (c-in-sws t fontified t face font-lock-comment-face)) . 3207) (undo-tree-id24 . -90) (t 25558 14009 330671 837000)) nil (25558 14014 252531 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3296 . 3297) (nil fontified nil 3296 . 3297) (nil fontified nil 3292 . 3296) (nil fontified nil 3210 . 3292) (nil fontified nil 3208 . 3210) (nil fontified nil 3207 . 3208) (3207 . 3297)) nil (25558 14014 252518 868000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1743 . 1744) (nil fontified nil 1743 . 1744) (nil fontified nil 1739 . 1743) (nil fontified nil 1657 . 1739) (nil fontified nil 1655 . 1657) (nil fontified nil 1654 . 1655) (1654 . 1744) (t 25558 14014 330657 69000)) nil (25558 14023 100499 381000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Word Functions Start
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 85 (c-in-sws t fontified t face font-lock-comment-face) 85 89 (c-in-sws t fontified t face font-lock-comment-face) 89 90 (fontified t rear-nonsticky t face font-lock-comment-face c-in-sws t)) . 1654) (undo-tree-id25 . -89) (undo-tree-id26 . -90) (t 25558 14023 182630 921000)) nil (25558 14026 536086 42000) 0 nil])
([nil nil ((nil fontified nil 1743 . 1744) (nil fontified nil 1739 . 1743) (nil fontified nil 1657 . 1739) (nil fontified nil 1655 . 1657) (nil fontified nil 1654 . 1655) (1654 . 1744)) nil (25558 14026 536074 547000) 0 nil])
([nil nil ((#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1728) (undo-tree-id27 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1729) (undo-tree-id28 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1730) (undo-tree-id29 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1731) (undo-tree-id30 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1732) (undo-tree-id31 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1733) (undo-tree-id32 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1734) (undo-tree-id33 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -1735) (undo-tree-id34 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1736) (undo-tree-id35 . -1) 1737 (t 25558 14026 626620 751000)) nil (25558 14035 93109 550000) 0 nil])
([nil nil ((1728 . 1730)) nil (25558 14035 93093 283000) 0 nil])
([nil nil ((1730 . 1738)) nil (25558 14035 93088 132000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Word Prototypes Start
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t face font-lock-comment-face c-in-sws t) 77 78 (fontified t face font-lock-comment-face c-in-sws t) 78 79 (fontified t face font-lock-comment-face c-in-sws t) 79 80 (fontified t face font-lock-comment-face c-in-sws t) 80 81 (fontified t face font-lock-comment-face c-in-sws t) 81 82 (fontified t face font-lock-comment-face c-in-sws t) 82 83 (fontified t face font-lock-comment-face c-in-sws t) 83 84 (fontified t face font-lock-comment-face c-in-sws t) 84 85 (fontified t face font-lock-comment-face c-in-sws t) 85 86 (fontified t face font-lock-comment-face c-in-sws t) 86 90 (fontified t face font-lock-comment-face c-in-sws t) 90 91 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . 1654) (undo-tree-id36 . -84) (undo-tree-id37 . -84) (undo-tree-id38 . -91) (t 25558 14035 186595 471000)) nil (25558 14036 491929 388000) 0 nil])
([nil nil ((nil fontified nil 1744 . 1745) (nil fontified nil 1740 . 1744) (nil fontified nil 1739 . 1740) (nil fontified nil 1738 . 1739) (nil fontified nil 1737 . 1738) (nil fontified nil 1736 . 1737) (nil fontified nil 1735 . 1736) (nil fontified nil 1734 . 1735) (nil fontified nil 1733 . 1734) (nil fontified nil 1732 . 1733) (nil fontified nil 1731 . 1732) (nil fontified nil 1730 . 1731) (nil fontified nil 1729 . 1730) (nil fontified nil 1728 . 1729) (nil fontified nil 1657 . 1728) (nil fontified nil 1655 . 1657) (nil fontified nil 1654 . 1655) (1654 . 1745)) nil (25558 14036 491915 21000) 0 nil])
([nil nil ((1863 . 1866) (t 25558 14036 586591 337000)) nil (25558 14045 862526 270000) 0 nil])
([nil nil ((1723 . 1729)) nil (25558 14045 862521 231000) 0 nil])
([nil nil ((nil fontified nil 1960 . 1961) (nil fontified nil 1956 . 1960) (nil fontified nil 1955 . 1956) (nil fontified nil 1954 . 1955) (nil fontified nil 1953 . 1954) (nil fontified nil 1952 . 1953) (nil fontified nil 1951 . 1952) (nil fontified nil 1950 . 1951) (nil fontified nil 1949 . 1950) (nil fontified nil 1948 . 1949) (nil fontified nil 1947 . 1948) (nil fontified nil 1946 . 1947) (nil fontified nil 1945 . 1946) (nil fontified nil 1944 . 1945) (nil fontified nil 1873 . 1944) (nil fontified nil 1871 . 1873) (nil fontified nil 1870 . 1871) (1870 . 1961) (t 25558 14045 950563 683000)) nil (25558 14049 692384 190000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1939) (undo-tree-id43 . -1) 1940 (t 25558 14049 778552 379000)) nil (25558 14056 36536 805000) 0 nil])
([nil nil ((1939 . 1943)) nil (25558 14056 36534 952000) 0 nil])
([nil nil ((1943 . 1944)) nil (25558 14056 36534 57000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1940) (undo-tree-id39 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1941) (undo-tree-id40 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1942) (undo-tree-id41 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1943) (undo-tree-id42 . -1) 1944) nil (25558 14056 36531 550000) 0 nil])
([nil nil ((1940 . 1945)) nil (25558 14056 36516 452000) 0 nil])
([nil nil ((1945 . 1946) (t 25558 14056 130533 622000)) nil (25558 14058 41505 776000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-comment-face)) . -1961) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1962) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1963) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -1964) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1965) (undo-tree-id56 . -1) 1966 (t 25558 14058 134527 705000)) nil (25558 14060 965915 659000) 0 nil])
([nil nil ((1961 . 1964)) nil (25558 14060 965882 771000) 0 nil])
([nil nil ((nil fontified nil 2057 . 2058) (nil fontified nil 2053 . 2057) (nil fontified nil 2052 . 2053) (nil fontified nil 2051 . 2052) (nil fontified nil 2050 . 2051) (nil fontified nil 2049 . 2050) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2044 . 2045) (nil fontified nil 2043 . 2044) (nil fontified nil 2042 . 2043) (nil fontified nil 2041 . 2042) (nil fontified nil 1970 . 2041) (nil fontified nil 1968 . 1970) (nil fontified nil 1967 . 1968) (1967 . 2058) (t 25558 14061 62519 58000)) nil (25558 14063 753627 158000) 0 nil])
([nil nil ((#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2037) (undo-tree-id61 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -2038) (undo-tree-id62 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2039) (undo-tree-id63 . -1) 2040 (t 25558 14063 838510 862000)) nil (25558 14068 488921 539000) 0 nil])
([nil nil ((2037 . 2038)) nil (25558 14068 488917 572000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2036) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("C" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2037) (undo-tree-id60 . -1) 2038) nil (25558 14068 488915 327000) 0 nil])
([nil nil ((2036 . 2040)) nil (25558 14068 488900 605000) 0 nil])
([nil nil ((2127 . 2128) (t 25558 14068 574496 874000)) nil (25558 14071 723373 433000) 0 nil])
([nil nil ((nil fontified nil 2218 . 2219) (nil fontified nil 2214 . 2218) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2204 . 2205) (nil fontified nil 2203 . 2204) (nil fontified nil 2202 . 2203) (nil fontified nil 2131 . 2202) (nil fontified nil 2129 . 2131) (nil fontified nil 2128 . 2129) (2128 . 2219)) nil (25558 14071 723367 718000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2127) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 2128 (t 25558 14071 806487 328000)) nil (25558 14073 186286 513000) 0 nil])
([nil nil ((#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2212) (undo-tree-id68 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2213) (undo-tree-id69 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2214) (undo-tree-id70 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2215) (undo-tree-id71 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2216) (undo-tree-id72 . -1) 2217 (t 25558 14073 274482 993000)) nil (25558 14076 572899 136000) 0 nil])
([nil nil ((2212 . 2213)) nil (25558 14076 572885 836000) 0 nil])
([nil nil ((2213 . 2215)) nil (25558 14076 572881 334000) 0 nil])
([nil nil ((nil fontified nil 2308 . 2309) (nil fontified nil 2304 . 2308) (nil fontified nil 2303 . 2304) (nil fontified nil 2302 . 2303) (nil fontified nil 2301 . 2302) (nil fontified nil 2300 . 2301) (nil fontified nil 2299 . 2300) (nil fontified nil 2298 . 2299) (nil fontified nil 2297 . 2298) (nil fontified nil 2296 . 2297) (nil fontified nil 2295 . 2296) (nil fontified nil 2294 . 2295) (nil fontified nil 2293 . 2294) (nil fontified nil 2292 . 2293) (nil fontified nil 2221 . 2292) (nil fontified nil 2219 . 2221) (nil fontified nil 2218 . 2219) (2218 . 2309) (t 25558 14076 714472 835000)) nil (25558 14078 145192 398000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2287) (undo-tree-id73 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2288) (undo-tree-id74 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2289) (undo-tree-id75 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2290) (undo-tree-id76 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2291) (undo-tree-id77 . -1) (#("P" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2292) (undo-tree-id78 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2293) (undo-tree-id79 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2294) (undo-tree-id80 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2295) (undo-tree-id81 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2296) (undo-tree-id82 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2297) (undo-tree-id83 . -1) (#("y" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2298) (undo-tree-id84 . -1) (#("p" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2299) (undo-tree-id85 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2300) (undo-tree-id86 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2301) (undo-tree-id87 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2302) (undo-tree-id88 . -1) (#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2303) (undo-tree-id89 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2304) (undo-tree-id90 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2305) (undo-tree-id91 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2306) (undo-tree-id92 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2307) (undo-tree-id93 . -1) 2308 (t 25558 14078 234468 347000)) nil (25558 14082 710455 974000) 0 nil])
([nil nil ((2287 . 2292)) nil (25558 14082 710425 53000) 0 nil])
([nil nil ((nil fontified nil 2466 . 2467) (nil fontified nil 2462 . 2466) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2379 . 2450) (nil fontified nil 2377 . 2379) (nil fontified nil 2376 . 2377) (2376 . 2467) (t 25558 14082 794454 880000)) nil (25558 14084 985166 228000) 0 nil])
([nil nil ((2292 . 2294) (t 25558 14085 78448 134000)) nil (25558 14093 132029 101000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -2293) (undo-tree-id99 . -1) 2294) nil (25558 14093 132027 484000) 0 nil])
([nil nil ((2293 . 2298)) nil (25558 14093 132025 396000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -2293) (undo-tree-id94 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -2294) (undo-tree-id95 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -2295) (undo-tree-id96 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -2296) (undo-tree-id97 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -2297) (undo-tree-id98 . -1) 2298) nil (25558 14093 132022 263000) 0 nil])
([nil nil ((2293 . 2298)) nil (25558 14093 131979 983000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2451) (undo-tree-id100 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2452) (undo-tree-id101 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2453) (undo-tree-id102 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2454) (undo-tree-id103 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2455) (undo-tree-id104 . -1) (#("P" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2456) (undo-tree-id105 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2457) (undo-tree-id106 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2458) (undo-tree-id107 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2459) (undo-tree-id108 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2460) (undo-tree-id109 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2461) (undo-tree-id110 . -1) (#("y" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2462) (undo-tree-id111 . -1) (#("p" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2463) (undo-tree-id112 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2464) (undo-tree-id113 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2465) (undo-tree-id114 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2466) (undo-tree-id115 . -1) (#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2467) (undo-tree-id116 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2468) (undo-tree-id117 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2469) (undo-tree-id118 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2470) (undo-tree-id119 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2471) (undo-tree-id120 . -1) 2472 (t 25558 14093 218424 99000)) nil (25558 14100 266785 606000) 0 nil])
([nil nil ((2451 . 2460)) nil (25558 14100 266755 763000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t c-is-sws t)) . 2463) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 2464 (t 25558 14100 354403 27000)) nil (25558 14107 686345 381000) 0 nil])
([nil nil ((2463 . 2464)) nil (25558 14107 686340 914000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t c-is-sws t)) . -2462) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("
" 0 1 (fontified t c-is-sws t c-in-sws t ws-butler-chg chg)) . -2463) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . 1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 2464) nil (25558 14107 686339 20000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Utils End
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face c-in-sws t) 70 71 (fontified t face font-lock-comment-face c-in-sws t) 71 72 (fontified t face font-lock-comment-face c-in-sws t) 72 73 (fontified t face font-lock-comment-face c-in-sws t) 73 74 (fontified t face font-lock-comment-face c-in-sws t) 74 75 (fontified t face font-lock-comment-face c-in-sws t) 75 76 (fontified t face font-lock-comment-face c-in-sws t) 76 77 (fontified t face font-lock-comment-face c-in-sws t) 77 78 (fontified t face font-lock-comment-face c-in-sws t) 78 79 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . 2382) (undo-tree-id121 . -78) (undo-tree-id122 . -78) (undo-tree-id123 . -79)) nil (25558 14107 686266 245000) 0 nil])
([nil nil ((nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2385 . 2451) (nil fontified nil 2383 . 2385) (nil fontified nil 2382 . 2383) (2382 . 2461)) nil (25558 14107 686256 474000) 0 nil])
([nil nil ((2461 . 2462)) nil (25558 14107 686253 91000) 0 nil])
([nil nil ((nil fontified nil 2540 . 2541) (nil fontified nil 2539 . 2540) (nil fontified nil 2538 . 2539) (nil fontified nil 2537 . 2538) (nil fontified nil 2536 . 2537) (nil fontified nil 2535 . 2536) (nil fontified nil 2534 . 2535) (nil fontified nil 2533 . 2534) (nil fontified nil 2532 . 2533) (nil fontified nil 2531 . 2532) (nil fontified nil 2465 . 2531) (nil fontified nil 2463 . 2465) (nil fontified nil 2462 . 2463) (2462 . 2541)) nil (25558 14107 686247 836000) 0 nil])
([nil nil ((2462 . 2463) (t 25558 14107 778381 108000)) nil (25558 14123 432708 964000) 0 nil])
([nil nil ((#("U" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2532) (undo-tree-id151 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2533) (undo-tree-id152 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2534) (undo-tree-id153 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2535) (undo-tree-id154 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2536) (undo-tree-id155 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2537) (undo-tree-id156 . -1) (#("E" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2538) (undo-tree-id157 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2539) (undo-tree-id158 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2540) (undo-tree-id159 . -1) 2541) nil (25558 14123 432707 23000) 0 nil])
([nil nil ((2532 . 2536)) nil (25558 14123 432698 959000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2535) (undo-tree-id150 . -1) 2536) nil (25558 14123 432698 122000) 0 nil])
([nil nil ((2535 . 2537)) nil (25558 14123 432696 674000) 0 nil])
([nil nil ((2537 . 2542)) nil (25558 14123 432696 31000) 0 nil])
([nil nil ((2542 . 2543)) nil (25558 14123 432695 329000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -2542) (undo-tree-id149 . -1) 2543) nil (25558 14123 432694 408000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -2537) (undo-tree-id148 . -1) 2538) nil (25558 14123 432691 867000) 0 nil])
([nil nil ((2537 . 2538)) nil (25558 14123 432682 733000) 0 nil])
([nil nil ((2542 . 2553)) nil (25558 14123 432678 311000) 0 nil])
([nil nil ((2553 . 2555) (t 25558 14123 522334 630000)) nil (25558 14128 80470 475000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -2554) (undo-tree-id160 . -1) 2555) nil (25558 14128 80468 235000) 0 nil])
([nil nil ((2554 . 2559)) nil (25558 14128 80456 962000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- GroupTable Prototypes Start
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 79 (fontified t c-in-sws t face font-lock-comment-face) 79 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 83 (fontified t c-in-sws t face font-lock-comment-face) 83 84 (fontified t c-in-sws t face font-lock-comment-face) 84 85 (fontified t c-in-sws t face font-lock-comment-face) 85 86 (fontified t c-in-sws t face font-lock-comment-face) 86 87 (fontified t c-in-sws t face font-lock-comment-face) 87 88 (fontified t c-in-sws t face font-lock-comment-face) 88 89 (fontified t c-in-sws t face font-lock-comment-face) 89 90 (fontified t c-in-sws t face font-lock-comment-face) 90 91 (fontified t face font-lock-comment-face c-in-sws t) 91 92 (fontified t face font-lock-comment-face c-in-sws t) 92 93 (fontified t face font-lock-comment-face c-in-sws t) 93 94 (fontified t face font-lock-comment-face c-in-sws t) 94 95 (fontified t face font-lock-comment-face c-in-sws t) 95 96 (fontified t face font-lock-comment-face c-in-sws t) 96 97 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . 2463) (undo-tree-id161 . -96) (undo-tree-id162 . -96) (undo-tree-id163 . -97) (t 25558 14128 166320 921000)) nil (25558 14130 314120 222000) 0 nil])
([nil nil ((nil fontified nil 2559 . 2560) (nil fontified nil 2558 . 2559) (nil fontified nil 2557 . 2558) (nil fontified nil 2556 . 2557) (nil fontified nil 2555 . 2556) (nil fontified nil 2554 . 2555) (nil fontified nil 2553 . 2554) (nil fontified nil 2552 . 2553) (nil fontified nil 2551 . 2552) (nil fontified nil 2550 . 2551) (nil fontified nil 2549 . 2550) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2546 . 2547) (nil fontified nil 2545 . 2546) (nil fontified nil 2544 . 2545) (nil fontified nil 2543 . 2544) (nil fontified nil 2542 . 2543) (nil fontified nil 2539 . 2542) (nil fontified nil 2538 . 2539) (nil fontified nil 2537 . 2538) (nil fontified nil 2536 . 2537) (nil fontified nil 2535 . 2536) (nil fontified nil 2534 . 2535) (nil fontified nil 2533 . 2534) (nil fontified nil 2532 . 2533) (nil fontified nil 2466 . 2532) (nil fontified nil 2464 . 2466) (nil fontified nil 2463 . 2464) (2463 . 2560)) nil (25558 14130 314105 786000) 0 nil])
([nil nil ((nil fontified nil 2811 . 2812) (nil fontified nil 2810 . 2811) (nil fontified nil 2809 . 2810) (nil fontified nil 2808 . 2809) (nil fontified nil 2807 . 2808) (nil fontified nil 2806 . 2807) (nil fontified nil 2805 . 2806) (nil fontified nil 2804 . 2805) (nil fontified nil 2803 . 2804) (nil fontified nil 2802 . 2803) (nil fontified nil 2801 . 2802) (nil fontified nil 2800 . 2801) (nil fontified nil 2799 . 2800) (nil fontified nil 2798 . 2799) (nil fontified nil 2797 . 2798) (nil fontified nil 2796 . 2797) (nil fontified nil 2795 . 2796) (nil fontified nil 2794 . 2795) (nil fontified nil 2791 . 2794) (nil fontified nil 2790 . 2791) (nil fontified nil 2789 . 2790) (nil fontified nil 2788 . 2789) (nil fontified nil 2787 . 2788) (nil fontified nil 2786 . 2787) (nil fontified nil 2785 . 2786) (nil fontified nil 2784 . 2785) (nil fontified nil 2718 . 2784) (nil fontified nil 2716 . 2718) (nil fontified nil 2715 . 2716) (2715 . 2812) (t 25558 14130 398314 333000)) nil (25558 14131 940199 763000) 0 nil])
([nil nil ((2715 . 2716) (t 25558 14132 22309 538000)) nil (25558 14135 520518 65000) 0 nil])
([nil nil ((#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2807) (undo-tree-id164 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2808) (undo-tree-id165 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2809) (undo-tree-id166 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2810) (undo-tree-id167 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2811) (undo-tree-id168 . -1) 2812) nil (25558 14135 520515 248000) 0 nil])
([nil nil ((2807 . 2810)) nil (25558 14135 520500 487000) 0 nil])
([nil nil ((1385 . 1387) (t 25558 14135 614298 934000)) nil (25558 14143 417708 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1592) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("
" 0 1 (fontified t)) . -1593) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 1594 (t 25558 14143 510275 622000)) nil (25558 14146 225277 963000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- StrictWord Prototypes Start
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (c-in-sws t fontified t face font-lock-comment-face) 70 71 (c-in-sws t fontified t face font-lock-comment-face) 71 72 (c-in-sws t fontified t face font-lock-comment-face) 72 73 (c-in-sws t fontified t face font-lock-comment-face) 73 74 (c-in-sws t fontified t face font-lock-comment-face) 74 75 (c-in-sws t fontified t face font-lock-comment-face) 75 80 (c-in-sws t fontified t face font-lock-comment-face) 80 81 (c-in-sws t fontified t face font-lock-comment-face) 81 82 (c-in-sws t fontified t face font-lock-comment-face) 82 83 (c-in-sws t fontified t face font-lock-comment-face) 83 84 (c-in-sws t fontified t face font-lock-comment-face) 84 85 (c-in-sws t fontified t face font-lock-comment-face) 85 86 (c-in-sws t fontified t face font-lock-comment-face) 86 87 (c-in-sws t fontified t face font-lock-comment-face) 87 88 (c-in-sws t fontified t face font-lock-comment-face) 88 89 (c-in-sws t fontified t face font-lock-comment-face) 89 90 (c-in-sws t fontified t face font-lock-comment-face) 90 91 (c-in-sws t fontified t face font-lock-comment-face) 91 92 (c-in-sws t fontified t face font-lock-comment-face) 92 96 (c-in-sws t fontified t face font-lock-comment-face) 96 97 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face)) . 1654) (undo-tree-id176 . -97) (t 25558 14146 330267 297000)) nil (25558 14152 800843 595000) 0 nil])
([nil nil ((nil fontified nil 1750 . 1751) (nil fontified nil 1746 . 1750) (nil fontified nil 1745 . 1746) (nil fontified nil 1744 . 1745) (nil fontified nil 1743 . 1744) (nil fontified nil 1742 . 1743) (nil fontified nil 1741 . 1742) (nil fontified nil 1740 . 1741) (nil fontified nil 1739 . 1740) (nil fontified nil 1738 . 1739) (nil fontified nil 1737 . 1738) (nil fontified nil 1736 . 1737) (nil fontified nil 1735 . 1736) (nil fontified nil 1734 . 1735) (nil fontified nil 1729 . 1734) (nil fontified nil 1728 . 1729) (nil fontified nil 1727 . 1728) (nil fontified nil 1726 . 1727) (nil fontified nil 1725 . 1726) (nil fontified nil 1724 . 1725) (nil fontified nil 1723 . 1724) (nil fontified nil 1657 . 1723) (nil fontified nil 1655 . 1657) (nil fontified nil 1654 . 1655) (1654 . 1751)) nil (25558 14152 800835 812000) 0 nil])
([nil nil ((nil fontified nil 1483 . 1484) (nil fontified nil 1479 . 1483) (nil fontified nil 1478 . 1479) (nil fontified nil 1477 . 1478) (nil fontified nil 1476 . 1477) (nil fontified nil 1475 . 1476) (nil fontified nil 1474 . 1475) (nil fontified nil 1473 . 1474) (nil fontified nil 1472 . 1473) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1462 . 1467) (nil fontified nil 1461 . 1462) (nil fontified nil 1460 . 1461) (nil fontified nil 1459 . 1460) (nil fontified nil 1458 . 1459) (nil fontified nil 1457 . 1458) (nil fontified nil 1456 . 1457) (nil fontified nil 1390 . 1456) (nil fontified nil 1388 . 1390) (nil fontified nil 1387 . 1388) (1387 . 1484)) nil (25558 14152 800826 229000) 0 nil])
([nil nil ((#("W" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1462) (undo-tree-id192 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1463) (undo-tree-id193 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1464) (undo-tree-id194 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1465) (undo-tree-id195 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1466) (undo-tree-id196 . -1) (#("P" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1467) (undo-tree-id197 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1468) (undo-tree-id198 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1469) (undo-tree-id199 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1470) (undo-tree-id200 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1471) (undo-tree-id201 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1472) (undo-tree-id202 . -1) (#("y" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1473) (undo-tree-id203 . -1) (#("p" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1474) (undo-tree-id204 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1475) (undo-tree-id205 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1476) (undo-tree-id206 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1477) (undo-tree-id207 . -1) (#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1478) (undo-tree-id208 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1479) (undo-tree-id209 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1480) (undo-tree-id210 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1481) (undo-tree-id211 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1482) (undo-tree-id212 . -1) 1483 (t 25558 14152 938247 789000)) nil (25558 14168 35354 701000) 0 nil])
([nil nil ((#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1456) (undo-tree-id186 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1457) (undo-tree-id187 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1458) (undo-tree-id188 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1459) (undo-tree-id189 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1460) (undo-tree-id190 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1461) (undo-tree-id191 . -1) 1462) nil (25558 14168 35312 97000) 0 nil])
([nil nil ((1456 . 1460)) nil (25558 14168 35307 211000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1459) (undo-tree-id185 . -1) 1460) nil (25558 14168 35306 446000) 0 nil])
([nil nil ((1459 . 1463)) nil (25558 14168 35305 115000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1456) (undo-tree-id178 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1457) (undo-tree-id179 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1458) (undo-tree-id180 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1459) (undo-tree-id181 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1460) (undo-tree-id182 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -1461) (undo-tree-id183 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -1462) (undo-tree-id184 . -1) 1463) nil (25558 14168 35303 463000) 0 nil])
([nil nil ((1456 . 1461)) nil (25558 14168 35297 504000) 0 nil])
([nil nil ((1461 . 1462)) nil (25558 14168 35296 616000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -1461) (undo-tree-id177 . -1) 1462) nil (25558 14168 35294 564000) 0 nil])
([nil nil ((1461 . 1476)) nil (25558 14168 35281 650000) 0 nil])
([nil nil ((1476 . 1482) (t 25558 14168 138202 918000)) nil (25558 14170 90711 860000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1467) (undo-tree-id213 . -1) (#("u" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1468) (undo-tree-id214 . -1) (#("n" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1469) (undo-tree-id215 . -1) (#("c" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1470) (undo-tree-id216 . -1) (#("t" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1471) (undo-tree-id217 . -1) (#("i" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1472) (undo-tree-id218 . -1) (#("o" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1473) (undo-tree-id219 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -1474) (undo-tree-id220 . -1) (#("s" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1475) (undo-tree-id221 . -1) 1476 (t 25558 14170 174196 908000)) nil (25558 14175 235659 232000) 0 nil])
([nil nil ((1467 . 1472)) nil (25558 14175 235644 139000) 0 nil])
([nil nil ((1472 . 1477)) nil (25558 14175 235639 662000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Regex Core Prototypes Start
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t c-in-sws t face font-lock-comment-face) 77 78 (fontified t c-in-sws t face font-lock-comment-face) 78 79 (fontified t c-in-sws t face font-lock-comment-face) 79 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 83 (fontified t c-in-sws t face font-lock-comment-face) 83 84 (fontified t c-in-sws t face font-lock-comment-face) 84 85 (fontified t c-in-sws t face font-lock-comment-face) 85 90 (fontified t face font-lock-comment-face c-in-sws t) 90 91 (fontified t face font-lock-comment-face c-in-sws t) 91 92 (fontified t face font-lock-comment-face c-in-sws t) 92 93 (fontified t face font-lock-comment-face c-in-sws t) 93 94 (fontified t face font-lock-comment-face c-in-sws t) 94 95 (fontified t face font-lock-comment-face c-in-sws t) 95 96 (fontified t face font-lock-comment-face c-in-sws t) 96 97 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . 1387) (undo-tree-id222 . -85) (undo-tree-id223 . -90) (undo-tree-id224 . -90) (undo-tree-id225 . -90) (undo-tree-id226 . -97) (t 25558 14175 342181 657000)) nil (25558 14177 411219 813000) 0 nil])
([nil nil ((nil fontified nil 1483 . 1484) (nil fontified nil 1482 . 1483) (nil fontified nil 1481 . 1482) (nil fontified nil 1480 . 1481) (nil fontified nil 1479 . 1480) (nil fontified nil 1478 . 1479) (nil fontified nil 1477 . 1478) (nil fontified nil 1472 . 1477) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1464 . 1465) (nil fontified nil 1463 . 1464) (nil fontified nil 1462 . 1463) (nil fontified nil 1461 . 1462) (nil fontified nil 1460 . 1461) (nil fontified nil 1459 . 1460) (nil fontified nil 1458 . 1459) (nil fontified nil 1457 . 1458) (nil fontified nil 1456 . 1457) (nil fontified nil 1390 . 1456) (nil fontified nil 1388 . 1390) (nil fontified nil 1387 . 1388) (1387 . 1484)) nil (25558 14177 411203 868000) 0 nil])
([nil nil ((1750 . 1753) (t 25558 14177 498175 292000)) nil (25558 14179 862078 843000) 0 nil])
([nil nil ((nil fontified nil 1848 . 1849) (nil fontified nil 1847 . 1848) (nil fontified nil 1846 . 1847) (nil fontified nil 1845 . 1846) (nil fontified nil 1844 . 1845) (nil fontified nil 1843 . 1844) (nil fontified nil 1842 . 1843) (nil fontified nil 1837 . 1842) (nil fontified nil 1836 . 1837) (nil fontified nil 1835 . 1836) (nil fontified nil 1834 . 1835) (nil fontified nil 1833 . 1834) (nil fontified nil 1832 . 1833) (nil fontified nil 1831 . 1832) (nil fontified nil 1830 . 1831) (nil fontified nil 1829 . 1830) (nil fontified nil 1828 . 1829) (nil fontified nil 1827 . 1828) (nil fontified nil 1826 . 1827) (nil fontified nil 1825 . 1826) (nil fontified nil 1824 . 1825) (nil fontified nil 1823 . 1824) (nil fontified nil 1822 . 1823) (nil fontified nil 1821 . 1822) (nil fontified nil 1755 . 1821) (nil fontified nil 1753 . 1755) (nil fontified nil 1752 . 1753) (1752 . 1849)) nil (25558 14179 862072 970000) 0 nil])
([nil nil ((#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1843) (undo-tree-id227 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1844) (undo-tree-id228 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1845) (undo-tree-id229 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1846) (undo-tree-id230 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -1847) (undo-tree-id231 . -1) 1848 (t 25558 14179 950168 55000)) nil (25558 14182 336567 733000) 0 nil])
([nil nil ((1843 . 1846)) nil (25558 14182 336553 790000) 0 nil])
([nil nil ((#("#include \"stdio.h\"
#include \"stdint.h\"
#include \"string.h\"
#include \"stdlib.h\"

// Regex Expression Format =  Object1Logic&Control Object2Logic&Control Object3Logic&Control ...

#define MAX_ARGUMENT_LENGTH        512
#define MAX_ARGUMENTS              32
#define MAX_OP_CODES               256
#define MAX_WORD_LENGTH            256

#define DEFAULT_TABLE_SIZE         2048
#define MAX_GROUP_LENGTH           1024
#define MAX_GROUP_NAME_LENGTH      256

//Todo : Try Out text++ to search throught text
//Todo : Add Default Groups And Group Tests
//Todo : Build Execution Engine

//ASCII Letters Are form 65 to 90 For Capital Letters and 97 to 122 for lowercase letters

typedef enum
{
 STRICT_WORD,
 STRICT_CHAR,
 CHAR,
}Regex_Object;

typedef enum
{
 EQUAL,
 IN_GROUP,
 UPPERCASE,
 LOWERCASE,
 NOT,
}Regex_OpCode;

typedef enum
{
 JUMP,
 FOR,
}Regex_Control;

typedef enum
{
 OR,
 XOR,
}Regex_Logic;

typedef struct
{
 Regex_Object    object;
 Regex_OpCode    op_code[MAX_OP_CODES];
 Regex_Logic     logic;
 Regex_Control   control;
 uint8_t         operation_count;
 char            argument[MAX_ARGUMENTS][MAX_ARGUMENT_LENGTH];
}Regex_Operation;

typedef struct
{
 char* name;
 char* group;
 void* next;
}Regex_GroupTableBucket;

Regex_GroupTableBucket* group_table;

typedef int8_t (*Regex_Action)(uint64_t trigger, char* text);

int8_t TestAction(uint64_t trigger , char* text);


// ----------------------------------------------------------------- Regex Core Prototypes Start

int8_t Regex_AddOpCode(Regex_Operation *operation, Regex_OpCode op_code, char* argument);

int8_t Regex_ExecuteOperations(char* text, Regex_Operation* operations, uint16_t op_count , Regex_Action action);

int64_t Regex_GetObject(Regex_Object object, char** head);


// ----------------------------------------------------------------- Regex Core Prototypes End


// ----------------------------------------------------------------- StrictWord Prototypes Start

int16_t Regex_IsStrictWord(char** head);

int64_t Regex_GetObjectStrictWord(char** head,char word[MAX_WORD_LENGTH]);

// ----------------------------------------------------------------- StrictWord Prototypes End


// ----------------------------------------------------------------- Char Prototypes Start


int64_t Regex_GetObjectStrictChar(char** head,char* strict_char);

// ----------------------------------------------------------------- Word Prototypes End


// ----------------------------------------------------------------- Utils Start

int64_t Regex_JumpToLetter(char** head);

int8_t Regex_JumpToSpace(char** head);

// ----------------------------------------------------------------- Utils End


// ----------------------------------------------------------------- GroupTable Prototypes Start

uint64_t Regex_HashGroup(char* name);

int8_t Regex_RegisterGroup(char* name,char* group);

int8_t Regex_InitGroupTable();

void Regex_PrintGroupTable();

// ----------------------------------------------------------------- GroupTable Prototypes End

" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 1 8 (fontified t face font-lock-preprocessor-face c-in-sws t) 8 9 (fontified t c-in-sws t) 9 18 (fontified t face font-lock-string-face c-in-sws t) 18 19 (fontified t c-in-sws t) 19 20 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 20 27 (fontified t face font-lock-preprocessor-face c-in-sws t) 27 28 (fontified t c-in-sws t) 28 38 (fontified t face font-lock-string-face c-in-sws t) 38 39 (fontified t c-in-sws t) 39 40 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 40 47 (fontified t face font-lock-preprocessor-face c-in-sws t) 47 48 (fontified t c-in-sws t) 48 58 (fontified t face font-lock-string-face c-in-sws t) 58 59 (fontified t c-in-sws t) 59 60 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 60 67 (fontified t face font-lock-preprocessor-face c-in-sws t) 67 68 (fontified t c-in-sws t) 68 78 (fontified t face font-lock-string-face c-in-sws t) 78 79 (fontified t c-in-sws t) 79 80 (fontified t c-in-sws t) 80 81 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 81 83 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 83 177 (fontified t face font-lock-comment-face c-in-sws t) 177 178 (fontified t c-is-sws t c-in-sws t) 178 179 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 179 185 (fontified t c-in-sws t face font-lock-preprocessor-face) 185 186 (fontified t c-in-sws t) 186 205 (fontified t c-in-sws t face font-lock-variable-name-face) 205 206 (fontified t c-in-sws t) 206 207 (fontified t c-in-sws t) 207 208 (fontified t c-in-sws t) 208 209 (fontified t c-in-sws t) 209 210 (fontified t c-in-sws t) 210 211 (fontified t c-in-sws t) 211 212 (fontified t c-in-sws t) 212 213 (fontified t c-in-sws t) 213 216 (fontified t c-in-sws t) 216 217 (fontified t c-in-sws t) 217 218 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 218 224 (fontified t c-in-sws t face font-lock-preprocessor-face) 224 225 (fontified t c-in-sws t) 225 238 (fontified t c-in-sws t face font-lock-variable-name-face) 238 245 (fontified t c-in-sws t) 245 246 (fontified t c-in-sws t) 246 247 (fontified t c-in-sws t) 247 248 (fontified t c-in-sws t) 248 249 (fontified t c-in-sws t) 249 250 (fontified t c-in-sws t) 250 251 (fontified t c-in-sws t) 251 252 (fontified t c-in-sws t) 252 253 (fontified t c-in-sws t) 253 254 (fontified t c-in-sws t) 254 255 (fontified t c-in-sws t) 255 256 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 256 262 (fontified t c-in-sws t face font-lock-preprocessor-face) 262 263 (fontified t c-in-sws t) 263 275 (fontified t c-in-sws t face font-lock-variable-name-face) 275 283 (fontified t c-in-sws t) 283 284 (fontified t c-in-sws t) 284 285 (fontified t c-in-sws t) 285 286 (fontified t c-in-sws t) 286 287 (fontified t c-in-sws t) 287 288 (fontified t c-in-sws t) 288 289 (fontified t c-in-sws t) 289 290 (fontified t c-in-sws t) 290 292 (fontified t c-in-sws t) 292 293 (fontified t c-in-sws t) 293 294 (fontified t c-in-sws t) 294 295 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 295 301 (c-in-sws t fontified t face font-lock-preprocessor-face) 301 302 (c-in-sws t fontified t) 302 317 (c-in-sws t fontified t face font-lock-variable-name-face) 317 322 (c-in-sws t fontified t) 322 323 (c-in-sws t fontified t) 323 324 (c-in-sws t fontified t) 324 325 (c-in-sws t fontified t) 325 326 (c-in-sws t fontified t) 326 327 (c-in-sws t fontified t) 327 328 (c-in-sws t fontified t) 328 329 (c-in-sws t fontified t) 329 331 (c-in-sws t fontified t) 331 332 (c-in-sws t fontified t) 332 333 (c-in-sws t fontified t) 333 334 (c-in-sws t c-is-sws t fontified t) 334 335 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 335 341 (c-in-sws t fontified t face font-lock-preprocessor-face) 341 342 (c-in-sws t fontified t) 342 360 (c-in-sws t fontified t face font-lock-variable-name-face) 360 374 (c-in-sws t fontified t) 374 375 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 375 381 (c-in-sws t fontified t face font-lock-preprocessor-face) 381 382 (c-in-sws t fontified t) 382 398 (c-in-sws t fontified t face font-lock-variable-name-face) 398 414 (c-in-sws t fontified t) 414 415 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 415 421 (c-in-sws t fontified t face font-lock-preprocessor-face) 421 422 (c-in-sws t fontified t) 422 443 (c-in-sws t fontified t face font-lock-variable-name-face) 443 453 (c-in-sws t fontified t) 453 454 (c-in-sws t fontified t) 454 455 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 455 456 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 456 502 (c-in-sws t fontified t face font-lock-comment-face) 502 504 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 504 528 (c-in-sws t fontified t face font-lock-comment-face) 528 546 (c-in-sws t fontified t face font-lock-comment-face) 546 547 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 547 548 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 548 577 (c-in-sws t fontified t face font-lock-comment-face) 577 578 (c-in-sws t fontified t face font-lock-comment-face) 578 579 (c-is-sws t c-in-sws t fontified t) 579 580 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 580 581 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 581 669 (c-in-sws t fontified t face font-lock-comment-face) 669 670 (c-in-sws t fontified t) 670 671 (c-is-sws t fontified t face font-lock-keyword-face) 671 677 (fontified t face font-lock-keyword-face) 677 678 (fontified t) 678 682 (fontified t face font-lock-keyword-face) 682 683 (fontified t) 683 684 (fontified t c-type c-not-decl) 684 686 (fontified t) 686 697 (fontified t face font-lock-variable-name-face) 697 698 (fontified t c-type c-decl-id-start) 698 700 (fontified t) 700 711 (fontified t face font-lock-variable-name-face) 711 712 (fontified t c-type c-decl-id-start) 712 714 (fontified t) 714 718 (fontified t face font-lock-variable-name-face) 718 719 (fontified t c-type c-decl-id-start) 719 720 (fontified t) 720 721 (fontified t c-type c-decl-type-start) 721 733 (fontified t face font-lock-type-face) 733 736 (fontified t) 736 743 (fontified t face font-lock-keyword-face) 743 744 (fontified t) 744 748 (fontified t face font-lock-keyword-face) 748 749 (fontified t) 749 750 (fontified t c-type c-decl-id-start) 750 752 (fontified t) 752 757 (fontified t face font-lock-variable-name-face) 757 758 (fontified t c-type c-decl-id-start) 758 760 (fontified t) 760 768 (fontified t face font-lock-variable-name-face) 768 769 (fontified t c-type c-decl-id-start) 769 771 (fontified t) 771 780 (fontified t face font-lock-variable-name-face) 780 781 (fontified t c-type c-decl-id-start) 781 783 (fontified t) 783 792 (fontified t face font-lock-variable-name-face) 792 793 (fontified t c-type c-decl-id-start) 793 794 (fontified t) 794 795 (fontified t) 795 798 (fontified t face font-lock-variable-name-face) 798 799 (fontified t c-type c-decl-id-start) 799 800 (fontified t) 800 801 (fontified t) 801 813 (fontified t face font-lock-type-face) 813 816 (fontified t) 816 823 (fontified t face font-lock-keyword-face) 823 824 (fontified t) 824 828 (fontified t face font-lock-keyword-face) 828 829 (fontified t) 829 830 (fontified t c-type c-not-decl) 830 832 (fontified t) 832 833 (fontified t face font-lock-variable-name-face) 833 834 (fontified t face font-lock-variable-name-face) 834 836 (fontified t face font-lock-variable-name-face) 836 837 (fontified t c-type c-decl-id-start) 837 839 (fontified t) 839 842 (fontified t face font-lock-variable-name-face) 842 843 (fontified t c-type c-decl-id-start) 843 844 (fontified t) 844 845 (fontified t c-type c-decl-type-start) 845 858 (fontified t face font-lock-type-face) 858 861 (fontified t) 861 868 (fontified t face font-lock-keyword-face) 868 869 (fontified t) 869 873 (fontified t face font-lock-keyword-face) 873 874 (fontified t) 874 875 (fontified t c-type c-not-decl) 875 877 (fontified t) 877 879 (fontified t face font-lock-variable-name-face) 879 880 (fontified t c-type c-decl-id-start) 880 882 (fontified t) 882 885 (fontified t face font-lock-variable-name-face) 885 886 (fontified t c-type c-decl-id-start) 886 887 (fontified t) 887 888 (fontified t c-type c-decl-type-start) 888 899 (fontified t face font-lock-type-face) 899 902 (fontified t) 902 909 (fontified t face font-lock-keyword-face) 909 910 (fontified t) 910 916 (fontified t face font-lock-keyword-face) 916 920 (fontified t) 920 931 (fontified t face font-lock-type-face) 931 932 (fontified t c-type c-decl-id-start face font-lock-type-face) 932 936 (fontified t) 936 942 (fontified t face font-lock-variable-name-face) 942 945 (fontified t) 945 956 (fontified t face font-lock-type-face) 956 957 (fontified t c-type c-decl-id-start face font-lock-type-face) 957 961 (fontified t) 961 968 (fontified t face font-lock-variable-name-face) 968 985 (fontified t) 985 995 (fontified t face font-lock-type-face) 995 996 (fontified t c-type c-decl-id-start face font-lock-type-face) 996 1001 (fontified t) 1001 1006 (fontified t face font-lock-variable-name-face) 1006 1009 (fontified t) 1009 1021 (fontified t face font-lock-type-face) 1021 1022 (fontified t c-type c-decl-id-start face font-lock-type-face) 1022 1025 (fontified t) 1025 1032 (fontified t face font-lock-variable-name-face) 1032 1035 (fontified t) 1035 1041 (fontified t face font-lock-type-face) 1041 1042 (fontified t c-type c-decl-id-start face font-lock-type-face) 1042 1046 (fontified t) 1046 1051 (fontified t) 1051 1066 (fontified t face font-lock-variable-name-face) 1066 1067 (fontified t) 1067 1069 (fontified t) 1069 1072 (fontified t face font-lock-type-face) 1072 1073 (fontified t c-type c-decl-id-start face font-lock-type-face) 1073 1085 (fontified t) 1085 1093 (fontified t face font-lock-variable-name-face) 1093 1131 (fontified t) 1131 1132 (fontified t c-type c-decl-type-start) 1132 1147 (fontified t face font-lock-type-face) 1147 1150 (fontified t) 1150 1157 (fontified t face font-lock-keyword-face) 1157 1158 (fontified t) 1158 1164 (fontified t face font-lock-keyword-face) 1164 1168 (fontified t) 1168 1171 (fontified t face font-lock-type-face) 1171 1172 (fontified t c-type c-decl-id-start face font-lock-type-face) 1172 1174 (fontified t) 1174 1178 (fontified t face font-lock-variable-name-face) 1178 1181 (fontified t) 1181 1184 (fontified t face font-lock-type-face) 1184 1185 (fontified t c-type c-decl-id-start face font-lock-type-face) 1185 1187 (fontified t) 1187 1192 (fontified t face font-lock-variable-name-face) 1192 1195 (fontified t) 1195 1198 (fontified t face font-lock-type-face) 1198 1199 (fontified t c-type c-decl-id-start face font-lock-type-face) 1199 1201 (fontified t) 1201 1205 (fontified t face font-lock-variable-name-face) 1205 1207 (fontified t) 1207 1208 (fontified t c-type c-decl-type-start) 1208 1230 (fontified t face font-lock-type-face) 1230 1233 (fontified t) 1233 1254 (fontified t face font-lock-type-face) 1254 1255 (fontified t c-type c-decl-id-start face font-lock-type-face) 1255 1257 (fontified t) 1257 1268 (fontified t face font-lock-variable-name-face) 1268 1271 (fontified t) 1271 1278 (fontified t face font-lock-keyword-face) 1278 1279 (fontified t) 1279 1284 (fontified t face font-lock-type-face) 1284 1285 (fontified t c-type c-decl-type-start face font-lock-type-face) 1285 1288 (fontified t) 1288 1294 (fontified t face font-lock-type-face) 1294 1300 (fontified t face font-lock-type-face) 1300 1301 (fontified t) 1301 1302 (fontified t c-type c-decl-arg-start) 1302 1310 (fontified t face font-lock-type-face) 1310 1311 (fontified t) 1311 1318 (fontified t face font-lock-variable-name-face) 1318 1319 (fontified t c-type c-decl-arg-start) 1319 1320 (fontified t) 1320 1324 (fontified t face font-lock-type-face) 1324 1326 (fontified t) 1326 1330 (fontified t face font-lock-variable-name-face) 1330 1334 (fontified t) 1334 1337 (fontified t face font-lock-type-face) 1337 1339 (fontified t face font-lock-type-face) 1339 1340 (fontified t c-type c-decl-id-start face font-lock-type-face) 1340 1341 (fontified t) 1341 1351 (fontified t face font-lock-function-name-face) 1351 1352 (fontified t c-type c-decl-arg-start) 1352 1360 (fontified t face font-lock-type-face) 1360 1361 (fontified t) 1361 1368 (fontified t face font-lock-variable-name-face) 1368 1369 (fontified t) 1369 1370 (fontified t c-type c-decl-arg-start) 1370 1371 (fontified t) 1371 1375 (fontified t face font-lock-type-face) 1375 1377 (fontified t) 1377 1381 (fontified t face font-lock-variable-name-face) 1381 1383 (fontified t) 1383 1384 (fontified t) 1384 1385 (fontified t) 1385 1386 (fontified t) 1386 1387 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1387 1389 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1389 1455 (c-in-sws t fontified t face font-lock-comment-face) 1455 1456 (c-in-sws t fontified t face font-lock-comment-face) 1456 1457 (c-in-sws t fontified t face font-lock-comment-face) 1457 1458 (c-in-sws t fontified t face font-lock-comment-face) 1458 1459 (c-in-sws t fontified t face font-lock-comment-face) 1459 1460 (c-in-sws t fontified t face font-lock-comment-face) 1460 1461 (c-in-sws t fontified t face font-lock-comment-face) 1461 1462 (c-in-sws t fontified t face font-lock-comment-face) 1462 1463 (c-in-sws t fontified t face font-lock-comment-face) 1463 1464 (c-in-sws t fontified t face font-lock-comment-face) 1464 1465 (c-in-sws t fontified t face font-lock-comment-face) 1465 1466 (c-in-sws t fontified t face font-lock-comment-face) 1466 1467 (c-in-sws t fontified t face font-lock-comment-face) 1467 1468 (c-in-sws t fontified t face font-lock-comment-face) 1468 1469 (c-in-sws t fontified t face font-lock-comment-face) 1469 1470 (c-in-sws t fontified t face font-lock-comment-face) 1470 1471 (c-in-sws t fontified t face font-lock-comment-face) 1471 1476 (c-in-sws t fontified t face font-lock-comment-face) 1476 1477 (c-in-sws t fontified t face font-lock-comment-face) 1477 1478 (c-in-sws t fontified t face font-lock-comment-face) 1478 1479 (c-in-sws t fontified t face font-lock-comment-face) 1479 1480 (c-in-sws t fontified t face font-lock-comment-face) 1480 1481 (c-in-sws t fontified t face font-lock-comment-face) 1481 1482 (c-in-sws t fontified t face font-lock-comment-face) 1482 1483 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t) 1483 1484 (fontified t c-is-sws t c-in-sws t) 1484 1485 (c-is-sws t fontified t face font-lock-type-face) 1485 1489 (fontified t face font-lock-type-face) 1489 1490 (fontified t c-type c-decl-id-start face font-lock-type-face) 1490 1491 (fontified t) 1491 1506 (fontified t face font-lock-function-name-face) 1506 1507 (fontified t c-type c-decl-arg-start) 1507 1522 (fontified t face font-lock-type-face) 1522 1524 (fontified t) 1524 1533 (fontified t face font-lock-variable-name-face) 1533 1534 (fontified t c-type c-decl-arg-start) 1534 1535 (fontified t) 1535 1547 (fontified t face font-lock-type-face) 1547 1548 (fontified t) 1548 1555 (fontified t face font-lock-variable-name-face) 1555 1556 (fontified t c-type c-decl-arg-start) 1556 1557 (fontified t) 1557 1561 (fontified t face font-lock-type-face) 1561 1563 (fontified t) 1563 1571 (fontified t face font-lock-variable-name-face) 1571 1575 (fontified t) 1575 1580 (fontified t face font-lock-type-face) 1580 1581 (fontified t c-type c-decl-id-start face font-lock-type-face) 1581 1582 (fontified t) 1582 1605 (fontified t face font-lock-function-name-face) 1605 1606 (fontified t c-type c-decl-arg-start) 1606 1610 (fontified t face font-lock-type-face) 1610 1612 (fontified t) 1612 1616 (fontified t face font-lock-variable-name-face) 1616 1617 (fontified t c-type c-decl-arg-start) 1617 1618 (fontified t) 1618 1633 (fontified t face font-lock-type-face) 1633 1635 (fontified t) 1635 1645 (fontified t face font-lock-variable-name-face) 1645 1646 (fontified t c-type c-decl-arg-start) 1646 1647 (fontified t) 1647 1655 (fontified t face font-lock-type-face) 1655 1656 (fontified t) 1656 1664 (fontified t face font-lock-variable-name-face) 1664 1665 (fontified t) 1665 1666 (fontified t c-type c-decl-arg-start) 1666 1667 (fontified t) 1667 1679 (fontified t face font-lock-type-face) 1679 1680 (fontified t) 1680 1686 (fontified t face font-lock-variable-name-face) 1686 1688 (fontified t) 1688 1689 (fontified t) 1689 1690 (fontified t) 1690 1696 (fontified t face font-lock-type-face) 1696 1697 (fontified t c-type c-decl-id-start face font-lock-type-face) 1697 1698 (fontified t) 1698 1713 (fontified t face font-lock-function-name-face) 1713 1714 (fontified t c-type c-decl-arg-start) 1714 1726 (fontified t face font-lock-type-face) 1726 1727 (fontified t) 1727 1733 (fontified t face font-lock-variable-name-face) 1733 1734 (fontified t c-type c-decl-arg-start) 1734 1735 (fontified t) 1735 1739 (fontified t face font-lock-type-face) 1739 1742 (fontified t) 1742 1746 (fontified t face font-lock-variable-name-face) 1746 1749 (fontified t) 1749 1750 (fontified t) 1750 1751 (fontified t) 1751 1752 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1752 1754 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1754 1820 (c-in-sws t fontified t face font-lock-comment-face) 1820 1821 (c-in-sws t fontified t face font-lock-comment-face) 1821 1822 (c-in-sws t fontified t face font-lock-comment-face) 1822 1823 (c-in-sws t fontified t face font-lock-comment-face) 1823 1824 (c-in-sws t fontified t face font-lock-comment-face) 1824 1825 (c-in-sws t fontified t face font-lock-comment-face) 1825 1826 (c-in-sws t fontified t face font-lock-comment-face) 1826 1827 (c-in-sws t fontified t face font-lock-comment-face) 1827 1828 (c-in-sws t fontified t face font-lock-comment-face) 1828 1829 (c-in-sws t fontified t face font-lock-comment-face) 1829 1830 (c-in-sws t fontified t face font-lock-comment-face) 1830 1831 (c-in-sws t fontified t face font-lock-comment-face) 1831 1832 (c-in-sws t fontified t face font-lock-comment-face) 1832 1833 (c-in-sws t fontified t face font-lock-comment-face) 1833 1834 (c-in-sws t fontified t face font-lock-comment-face) 1834 1835 (c-in-sws t fontified t face font-lock-comment-face) 1835 1836 (c-in-sws t fontified t face font-lock-comment-face) 1836 1841 (c-in-sws t fontified t face font-lock-comment-face) 1841 1842 (c-in-sws t fontified t face font-lock-comment-face) 1842 1843 (fontified t face font-lock-comment-face c-in-sws t) 1843 1844 (fontified t face font-lock-comment-face c-in-sws t) 1844 1845 (fontified t face font-lock-comment-face c-in-sws t) 1845 1846 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t) 1846 1847 (c-in-sws t fontified t) 1847 1848 (c-in-sws t fontified t) 1848 1849 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1849 1851 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1851 1917 (c-in-sws t fontified t face font-lock-comment-face) 1917 1918 (c-in-sws t fontified t face font-lock-comment-face) 1918 1919 (c-in-sws t fontified t face font-lock-comment-face) 1919 1920 (c-in-sws t fontified t face font-lock-comment-face) 1920 1921 (c-in-sws t fontified t face font-lock-comment-face) 1921 1922 (c-in-sws t fontified t face font-lock-comment-face) 1922 1923 (c-in-sws t fontified t face font-lock-comment-face) 1923 1928 (c-in-sws t fontified t face font-lock-comment-face) 1928 1929 (c-in-sws t fontified t face font-lock-comment-face) 1929 1930 (c-in-sws t fontified t face font-lock-comment-face) 1930 1931 (c-in-sws t fontified t face font-lock-comment-face) 1931 1932 (c-in-sws t fontified t face font-lock-comment-face) 1932 1933 (c-in-sws t fontified t face font-lock-comment-face) 1933 1934 (c-in-sws t fontified t face font-lock-comment-face) 1934 1935 (c-in-sws t fontified t face font-lock-comment-face) 1935 1936 (c-in-sws t fontified t face font-lock-comment-face) 1936 1937 (c-in-sws t fontified t face font-lock-comment-face) 1937 1938 (c-in-sws t fontified t face font-lock-comment-face) 1938 1939 (c-in-sws t fontified t face font-lock-comment-face) 1939 1940 (c-in-sws t fontified t face font-lock-comment-face) 1940 1944 (c-in-sws t fontified t face font-lock-comment-face) 1944 1945 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 1945 1946 (fontified t c-in-sws t) 1946 1947 (c-is-sws t fontified t face font-lock-type-face) 1947 1952 (fontified t face font-lock-type-face) 1952 1953 (fontified t c-type c-decl-id-start face font-lock-type-face) 1953 1954 (fontified t) 1954 1972 (fontified t face font-lock-function-name-face) 1972 1973 (fontified t c-type c-decl-arg-start) 1973 1977 (fontified t face font-lock-type-face) 1977 1980 (fontified t) 1980 1984 (fontified t face font-lock-variable-name-face) 1984 1985 (fontified t) 1985 1988 (fontified t) 1988 1994 (fontified t face font-lock-type-face) 1994 1995 (fontified t c-type c-decl-id-start face font-lock-type-face) 1995 1996 (fontified t) 1996 2021 (fontified t face font-lock-function-name-face) 2021 2022 (fontified t c-type c-decl-arg-start) 2022 2026 (fontified t face font-lock-type-face) 2026 2029 (fontified t) 2029 2033 (fontified t face font-lock-variable-name-face) 2033 2034 (fontified t c-type c-decl-arg-start) 2034 2038 (fontified t face font-lock-type-face) 2038 2039 (fontified t) 2039 2043 (fontified t face font-lock-variable-name-face) 2043 2063 (fontified t) 2063 2064 (fontified t) 2064 2065 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 2065 2067 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2067 2080 (c-in-sws t fontified t face font-lock-comment-face) 2080 2081 (c-in-sws t fontified t face font-lock-comment-face) 2081 2132 (c-in-sws t fontified t face font-lock-comment-face) 2132 2133 (c-in-sws t fontified t face font-lock-comment-face) 2133 2134 (c-in-sws t fontified t face font-lock-comment-face) 2134 2135 (c-in-sws t fontified t face font-lock-comment-face) 2135 2136 (c-in-sws t fontified t face font-lock-comment-face) 2136 2137 (c-in-sws t fontified t face font-lock-comment-face) 2137 2138 (c-in-sws t fontified t face font-lock-comment-face) 2138 2139 (c-in-sws t fontified t face font-lock-comment-face) 2139 2140 (c-in-sws t fontified t face font-lock-comment-face) 2140 2141 (c-in-sws t fontified t face font-lock-comment-face) 2141 2144 (c-in-sws t fontified t face font-lock-comment-face) 2144 2145 (c-in-sws t fontified t face font-lock-comment-face) 2145 2146 (c-in-sws t fontified t face font-lock-comment-face) 2146 2147 (c-in-sws t fontified t face font-lock-comment-face) 2147 2148 (c-in-sws t fontified t face font-lock-comment-face) 2148 2149 (c-in-sws t fontified t face font-lock-comment-face) 2149 2150 (c-in-sws t fontified t face font-lock-comment-face) 2150 2151 (c-in-sws t fontified t face font-lock-comment-face) 2151 2152 (c-in-sws t fontified t face font-lock-comment-face) 2152 2153 (c-in-sws t fontified t face font-lock-comment-face) 2153 2154 (c-in-sws t fontified t face font-lock-comment-face) 2154 2155 (c-in-sws t fontified t face font-lock-comment-face) 2155 2156 (c-in-sws t fontified t face font-lock-comment-face) 2156 2157 (c-in-sws t fontified t face font-lock-comment-face) 2157 2158 (c-in-sws t fontified t face font-lock-comment-face) 2158 2159 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 2159 2160 (c-is-sws t c-in-sws t fontified t) 2160 2161 (c-in-sws t c-is-sws t fontified t) 2161 2162 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 2162 2164 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2164 2230 (c-in-sws t fontified t face font-lock-comment-face) 2230 2231 (c-in-sws t fontified t face font-lock-comment-face) 2231 2232 (c-in-sws t fontified t face font-lock-comment-face) 2232 2233 (c-in-sws t fontified t face font-lock-comment-face) 2233 2234 (c-in-sws t fontified t face font-lock-comment-face) 2234 2235 (c-in-sws t fontified t face font-lock-comment-face) 2235 2236 (c-in-sws t fontified t face font-lock-comment-face) 2236 2237 (c-in-sws t fontified t face font-lock-comment-face) 2237 2238 (c-in-sws t fontified t face font-lock-comment-face) 2238 2239 (c-in-sws t fontified t face font-lock-comment-face) 2239 2240 (c-in-sws t fontified t face font-lock-comment-face) 2240 2241 (c-in-sws t fontified t face font-lock-comment-face) 2241 2242 (c-in-sws t fontified t face font-lock-comment-face) 2242 2243 (c-in-sws t fontified t face font-lock-comment-face) 2243 2244 (c-in-sws t fontified t face font-lock-comment-face) 2244 2245 (c-in-sws t fontified t face font-lock-comment-face) 2245 2246 (c-in-sws t fontified t face font-lock-comment-face) 2246 2247 (c-in-sws t fontified t face font-lock-comment-face) 2247 2251 (c-in-sws t fontified t face font-lock-comment-face) 2251 2252 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 2252 2253 (c-in-sws t fontified t) 2253 2254 (c-in-sws t fontified t) 2254 2255 (c-is-sws t fontified t face font-lock-type-face) 2255 2260 (fontified t face font-lock-type-face) 2260 2261 (fontified t c-type c-decl-id-start face font-lock-type-face) 2261 2262 (fontified t) 2262 2282 (fontified t face font-lock-function-name-face) 2282 2287 (fontified t face font-lock-function-name-face) 2287 2288 (fontified t c-type c-decl-arg-start) 2288 2292 (fontified t face font-lock-type-face) 2292 2295 (fontified t) 2295 2299 (fontified t face font-lock-variable-name-face) 2299 2300 (fontified t c-type c-decl-arg-start) 2300 2304 (fontified t face font-lock-type-face) 2304 2306 (fontified t) 2306 2317 (fontified t face font-lock-variable-name-face) 2317 2319 (fontified t) 2319 2321 (fontified t) 2321 2322 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 2322 2324 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2324 2395 (c-in-sws t fontified t face font-lock-comment-face) 2395 2396 (c-in-sws t fontified t face font-lock-comment-face) 2396 2397 (c-in-sws t fontified t face font-lock-comment-face) 2397 2398 (c-in-sws t fontified t face font-lock-comment-face) 2398 2399 (c-in-sws t fontified t face font-lock-comment-face) 2399 2400 (c-in-sws t fontified t face font-lock-comment-face) 2400 2401 (c-in-sws t fontified t face font-lock-comment-face) 2401 2402 (c-in-sws t fontified t face font-lock-comment-face) 2402 2403 (c-in-sws t fontified t face font-lock-comment-face) 2403 2404 (c-in-sws t fontified t face font-lock-comment-face) 2404 2405 (c-in-sws t fontified t face font-lock-comment-face) 2405 2406 (c-in-sws t fontified t face font-lock-comment-face) 2406 2407 (c-in-sws t fontified t face font-lock-comment-face) 2407 2408 (c-in-sws t fontified t face font-lock-comment-face) 2408 2409 (c-in-sws t fontified t face font-lock-comment-face) 2409 2410 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 2410 2411 (c-in-sws t fontified t) 2411 2412 (c-in-sws t fontified t) 2412 2413 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2413 2415 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2415 2481 (c-in-sws t fontified t face font-lock-comment-face) 2481 2482 (c-in-sws t fontified t face font-lock-comment-face) 2482 2483 (c-in-sws t fontified t face font-lock-comment-face) 2483 2484 (c-in-sws t fontified t face font-lock-comment-face) 2484 2485 (c-in-sws t fontified t face font-lock-comment-face) 2485 2486 (c-in-sws t face font-lock-comment-face fontified t) 2486 2487 (c-in-sws t face font-lock-comment-face fontified t) 2487 2488 (c-in-sws t face font-lock-comment-face fontified t) 2488 2489 (c-in-sws t face font-lock-comment-face fontified t) 2489 2490 (c-in-sws t face font-lock-comment-face fontified t) 2490 2491 (c-in-sws t face font-lock-comment-face fontified t) 2491 2492 (c-in-sws t face font-lock-comment-face fontified t) 2492 2493 (rear-nonsticky t face font-lock-comment-face fontified t c-in-sws t) 2493 2494 (c-is-sws t c-in-sws t fontified t) 2494 2495 (c-is-sws t fontified t face font-lock-type-face) 2495 2500 (fontified t face font-lock-type-face) 2500 2501 (fontified t c-type c-decl-id-start face font-lock-type-face) 2501 2502 (fontified t) 2502 2520 (fontified t face font-lock-function-name-face) 2520 2521 (fontified t c-type c-decl-arg-start) 2521 2525 (fontified t face font-lock-type-face) 2525 2528 (fontified t) 2528 2532 (fontified t face font-lock-variable-name-face) 2532 2536 (fontified t) 2536 2541 (fontified t face font-lock-type-face) 2541 2542 (fontified t c-type c-decl-id-start face font-lock-type-face) 2542 2543 (fontified t) 2543 2560 (fontified t face font-lock-function-name-face) 2560 2561 (fontified t c-type c-decl-arg-start) 2561 2565 (fontified t face font-lock-type-face) 2565 2568 (fontified t) 2568 2572 (fontified t face font-lock-variable-name-face) 2572 2576 (fontified t) 2576 2577 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 2577 2579 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2579 2645 (c-in-sws t fontified t face font-lock-comment-face) 2645 2646 (c-in-sws t fontified t face font-lock-comment-face) 2646 2647 (c-in-sws t fontified t face font-lock-comment-face) 2647 2648 (c-in-sws t fontified t face font-lock-comment-face) 2648 2649 (c-in-sws t fontified t face font-lock-comment-face) 2649 2650 (c-in-sws t fontified t face font-lock-comment-face) 2650 2651 (c-in-sws t fontified t face font-lock-comment-face) 2651 2652 (c-in-sws t fontified t face font-lock-comment-face) 2652 2653 (c-in-sws t fontified t face font-lock-comment-face) 2653 2654 (c-in-sws t fontified t face font-lock-comment-face) 2654 2655 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 2655 2656 (c-in-sws t fontified t) 2656 2657 (c-in-sws t fontified t) 2657 2658 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2658 2659 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2659 2660 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2660 2726 (c-in-sws t fontified t face font-lock-comment-face) 2726 2727 (c-in-sws t fontified t face font-lock-comment-face) 2727 2728 (c-in-sws t fontified t face font-lock-comment-face) 2728 2729 (c-in-sws t fontified t face font-lock-comment-face) 2729 2730 (c-in-sws t fontified t face font-lock-comment-face) 2730 2731 (c-in-sws t fontified t face font-lock-comment-face) 2731 2732 (c-in-sws t fontified t face font-lock-comment-face) 2732 2733 (c-in-sws t fontified t face font-lock-comment-face) 2733 2736 (c-in-sws t fontified t face font-lock-comment-face) 2736 2737 (c-in-sws t fontified t face font-lock-comment-face) 2737 2738 (c-in-sws t fontified t face font-lock-comment-face) 2738 2739 (c-in-sws t fontified t face font-lock-comment-face) 2739 2740 (c-in-sws t fontified t face font-lock-comment-face) 2740 2741 (c-in-sws t fontified t face font-lock-comment-face) 2741 2742 (c-in-sws t fontified t face font-lock-comment-face) 2742 2743 (c-in-sws t fontified t face font-lock-comment-face) 2743 2744 (c-in-sws t fontified t face font-lock-comment-face) 2744 2745 (c-in-sws t fontified t face font-lock-comment-face) 2745 2746 (c-in-sws t fontified t face font-lock-comment-face) 2746 2747 (c-in-sws t fontified t face font-lock-comment-face) 2747 2748 (c-in-sws t fontified t face font-lock-comment-face) 2748 2749 (c-in-sws t fontified t face font-lock-comment-face) 2749 2750 (c-in-sws t fontified t face font-lock-comment-face) 2750 2751 (c-in-sws t fontified t face font-lock-comment-face) 2751 2752 (c-in-sws t fontified t face font-lock-comment-face) 2752 2753 (c-in-sws t fontified t face font-lock-comment-face) 2753 2754 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 2754 2755 (c-is-sws t c-in-sws t fontified t) 2755 2756 (c-is-sws t fontified t face font-lock-type-face) 2756 2762 (fontified t face font-lock-type-face) 2762 2763 (fontified t c-type c-decl-id-start face font-lock-type-face) 2763 2764 (fontified t) 2764 2779 (fontified t face font-lock-function-name-face) 2779 2780 (fontified t c-type c-decl-arg-start) 2780 2784 (fontified t face font-lock-type-face) 2784 2786 (fontified t) 2786 2790 (fontified t face font-lock-variable-name-face) 2790 2793 (fontified t) 2793 2794 (fontified t) 2794 2799 (fontified t face font-lock-type-face) 2799 2800 (fontified t c-type c-decl-id-start face font-lock-type-face) 2800 2801 (fontified t) 2801 2819 (fontified t face font-lock-function-name-face) 2819 2820 (fontified t face font-lock-function-name-face) 2820 2821 (fontified t c-type c-decl-arg-start) 2821 2825 (fontified t face font-lock-type-face) 2825 2827 (fontified t) 2827 2831 (fontified t face font-lock-variable-name-face) 2831 2832 (fontified t c-type c-decl-arg-start) 2832 2836 (fontified t face font-lock-type-face) 2836 2838 (fontified t) 2838 2843 (fontified t face font-lock-variable-name-face) 2843 2845 (fontified t) 2845 2847 (fontified t) 2847 2852 (fontified t face font-lock-type-face) 2852 2853 (fontified t c-type c-decl-id-start face font-lock-type-face) 2853 2854 (fontified t) 2854 2874 (fontified t face font-lock-function-name-face) 2874 2879 (fontified t) 2879 2882 (fontified t face font-lock-type-face) 2882 2883 (fontified t c-type c-decl-id-start face font-lock-type-face) 2883 2884 (fontified t) 2884 2905 (fontified t face font-lock-function-name-face) 2905 2909 (fontified t) 2909 2910 (fontified t) 2910 2911 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 2911 2913 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2913 2979 (c-in-sws t fontified t face font-lock-comment-face) 2979 2980 (c-in-sws t fontified t face font-lock-comment-face) 2980 2981 (c-in-sws t fontified t face font-lock-comment-face) 2981 2982 (c-in-sws t fontified t face font-lock-comment-face) 2982 2983 (c-in-sws t fontified t face font-lock-comment-face) 2983 2984 (c-in-sws t fontified t face font-lock-comment-face) 2984 2985 (c-in-sws t fontified t face font-lock-comment-face) 2985 2986 (c-in-sws t fontified t face font-lock-comment-face) 2986 2989 (c-in-sws t fontified t face font-lock-comment-face) 2989 2990 (c-in-sws t fontified t face font-lock-comment-face) 2990 2991 (c-in-sws t fontified t face font-lock-comment-face) 2991 2992 (c-in-sws t fontified t face font-lock-comment-face) 2992 2993 (c-in-sws t fontified t face font-lock-comment-face) 2993 2994 (c-in-sws t face font-lock-comment-face fontified t) 2994 2995 (c-in-sws t face font-lock-comment-face fontified t) 2995 2996 (c-in-sws t face font-lock-comment-face fontified t) 2996 2997 (c-in-sws t face font-lock-comment-face fontified t) 2997 2998 (c-in-sws t face font-lock-comment-face fontified t) 2998 2999 (c-in-sws t face font-lock-comment-face fontified t) 2999 3000 (c-in-sws t face font-lock-comment-face fontified t) 3000 3001 (c-in-sws t face font-lock-comment-face fontified t) 3001 3002 (c-in-sws t face font-lock-comment-face fontified t) 3002 3003 (c-in-sws t face font-lock-comment-face fontified t) 3003 3004 (c-in-sws t face font-lock-comment-face fontified t) 3004 3005 (rear-nonsticky t face font-lock-comment-face fontified t c-in-sws t) 3005 3006 (fontified t c-is-sws t c-in-sws t)) . 1) (undo-tree-id245 . -294) (undo-tree-id246 . -332) (undo-tree-id247 . -844) (undo-tree-id248 . -2064) (undo-tree-id249 . -2161) (undo-tree-id250 . -2321) (undo-tree-id251 . -2412) (undo-tree-id252 . -2755) (undo-tree-id253 . -2576) (undo-tree-id254 . -2656) (undo-tree-id255 . -2657) (undo-tree-id256 . -2909) (undo-tree-id257 . -1848) (undo-tree-id258 . -1386) (undo-tree-id259 . -1575) (undo-tree-id260 . -1384) (undo-tree-id261 . -3006) (undo-tree-id262 . -1751) (undo-tree-id263 . -3006) 3007 (t 25558 14182 426160 747000)) nil (25558 14265 809600 457000) 0 nil])
([nil nil ((1 . 2)) nil (25558 14265 809585 516000) 0 nil])
([nil nil ((2 . 3)) nil (25558 14265 809584 567000) 0 nil])
([nil nil ((2 . 5)) nil (25558 14265 809583 773000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face)) . -3) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face)) . -4) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 5) nil (25558 14265 809582 272000) 0 nil])
([nil nil ((3 . 6)) nil (25558 14265 809578 617000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face)) . -2) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face)) . -3) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face)) . -4) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-preprocessor-face)) . -5) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 6) nil (25558 14265 809576 743000) 0 nil])
([nil nil ((11 . 12) (nil syntax-table nil 11 . 12) (nil syntax-table (1) 10 . 11) (2 . 11)) nil (25558 14265 809569 496000) 0 nil])
([nil nil ((11 . 17)) nil (25558 14265 809567 938000) 0 nil])
([nil nil ((17 . 19)) nil (25558 14265 809566 777000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-string-face)) . -18) (undo-tree-id232 . -1) 19) nil (25558 14265 809564 911000) 0 nil])
([nil nil ((18 . 20)) nil (25558 14265 809551 351000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -549) (undo-tree-id264 . -1) (undo-tree-id265 . -1) 550 (t 25558 14265 893914 398000)) nil (25558 14364 836160 20000) 0 nil])
([nil nil ((656 . 688) (#(" " 0 1 (fontified t)) . 656) (undo-tree-id268 . -1) 657 (t 25558 14364 925622 185000)) nil (25558 14382 23269 578000) 0 nil])
([nil nil ((716 . 748) (#(" " 0 1 (fontified t)) . 716) (undo-tree-id266 . -1) (undo-tree-id267 . -1) 717) nil (25558 14382 23263 924000) 0 nil])
([nil nil ((767 . 799) (#(" " 0 1 (fontified t)) . 767) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 768 (t 25558 14382 109571 489000)) nil (25558 14387 268865 369000) 0 nil])
([nil nil ((3173 . 3177) (#(" " 0 1 (fontified t)) . 3173) (undo-tree-id271 . -1) 3174 (t 25558 14387 377555 952000)) nil (25558 14406 362476 497000) 0 nil])
([nil nil ((3177 . 3178)) nil (25558 14406 362463 40000) 0 nil])
([nil nil ((5233 . 5237) (#(" " 0 1 (fontified t)) . 5233) (undo-tree-id288 . -1) 5234 (t 25558 14406 449499 690000)) nil (25558 14439 623704 682000) 0 nil])
([nil nil ((5234 . 5238) (#("   " 0 3 (fontified t ws-butler-chg chg)) . 5234) (undo-tree-id287 . -3) 5237) nil (25558 14439 623701 942000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5234) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5235) (undo-tree-id284 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5236) (undo-tree-id285 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5237) (undo-tree-id286 . -1) 5238) nil (25558 14439 623698 761000) 0 nil])
([nil nil ((5234 . 5235)) nil (25558 14439 623689 402000) 0 nil])
([nil nil ((5259 . 5263) (#(" " 0 1 (fontified t)) . 5259) (undo-tree-id282 . -1) 5260) nil (25558 14439 623688 111000) 0 nil])
([nil nil ((5260 . 5264) (#("   " 0 3 (fontified t ws-butler-chg chg)) . 5260) (undo-tree-id280 . -3) (undo-tree-id281 . -3) 5263) nil (25558 14439 623685 355000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -5260) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5261) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5262) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5263) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 5264) nil (25558 14439 623680 545000) 0 nil])
([nil nil ((5260 . 5261)) nil (25558 14439 623637 158000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5233) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#(" " 0 1 (fontified t)) . -5234) (undo-tree-id292 . -1) 5235 (t 25558 14439 709401 568000)) nil (25558 14453 655305 211000) 0 nil])
([nil nil ((5233 . 5234)) nil (25558 14453 655289 309000) 0 nil])
([nil nil ((5260 . 5281) (t 25558 14453 749360 151000)) nil (25558 14459 994225 908000) 0 nil])
([nil nil ((5281 . 5298)) nil (25558 14459 994220 871000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5277) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#(" " 0 1 (fontified t)) . -5278) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#(" " 0 1 (fontified t)) . -5279) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#(" " 0 1 (fontified t)) . -5280) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#(" " 0 1 (fontified t)) . -5281) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#(" " 0 1 (fontified t)) . -5282) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (fontified t)) . -5283) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -5284) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#(" " 0 1 (fontified t)) . -5285) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#(" " 0 1 (fontified t)) . -5286) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#(" " 0 1 (fontified t)) . -5287) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#(" " 0 1 (fontified t)) . -5288) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t)) . -5289) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#(" " 0 1 (fontified t)) . -5290) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#(" " 0 1 (fontified t)) . -5291) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (#(" " 0 1 (fontified t)) . -5292) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#(" " 0 1 (fontified t)) . -5293) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#(" " 0 1 (fontified t)) . -5294) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#(" " 0 1 (fontified t)) . -5295) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#(" " 0 1 (fontified t)) . -5296) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#(" " 0 1 (fontified t)) . -5297) (undo-tree-id404 . -1) 5298 (t 25558 14460 89341 447000)) nil (25558 14464 450090 221000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5260) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#(" " 0 1 (fontified t)) . -5261) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#(" " 0 1 (fontified t)) . -5262) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#(" " 0 1 (fontified t)) . -5263) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#(" " 0 1 (fontified t)) . -5264) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#(" " 0 1 (fontified t)) . -5265) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#(" " 0 1 (fontified t)) . -5266) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#(" " 0 1 (fontified t)) . -5267) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#(" " 0 1 (fontified t)) . -5268) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#(" " 0 1 (fontified t)) . -5269) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t)) . -5270) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#(" " 0 1 (fontified t)) . -5271) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t)) . -5272) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#(" " 0 1 (fontified t)) . -5273) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#(" " 0 1 (fontified t)) . -5274) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#(" " 0 1 (fontified t)) . -5275) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#(" " 0 1 (fontified t)) . -5276) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 5277) nil (25558 14464 450042 252000) 0 nil])
([nil nil ((#(" char* group=\"Hallo,Bye,Tschüss,Was,Geht\";

 char* test=\"Brau\";
 char* test1=\"Adau\";
 char* test2=\"Dradwau\";
 char* test3=\"Rraau\";
" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 41 (fontified t face font-lock-string-face) 41 45 (fontified t) 45 48 (fontified t face font-lock-type-face) 48 49 (fontified t c-type c-decl-id-start face font-lock-type-face) 49 51 (fontified t) 51 52 (fontified t face font-lock-variable-name-face) 52 53 (fontified t face font-lock-variable-name-face) 53 54 (fontified t face font-lock-variable-name-face) 54 55 (fontified t face font-lock-variable-name-face) 55 56 (fontified t) 56 62 (fontified t face font-lock-string-face) 62 64 (fontified t) 64 65 (fontified t) 65 68 (fontified t face font-lock-type-face) 68 69 (fontified t c-type c-decl-id-start face font-lock-type-face) 69 71 (fontified t) 71 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t) 77 83 (fontified t face font-lock-string-face) 83 86 (fontified t) 86 89 (fontified t face font-lock-type-face) 89 90 (fontified t c-type c-decl-id-start face font-lock-type-face) 90 92 (fontified t) 92 97 (fontified t face font-lock-variable-name-face) 97 98 (fontified t) 98 107 (fontified t face font-lock-string-face) 107 110 (fontified t) 110 113 (fontified t face font-lock-type-face) 113 114 (fontified t c-type c-decl-id-start face font-lock-type-face) 114 116 (fontified t) 116 121 (fontified t face font-lock-variable-name-face) 121 122 (fontified t) 122 129 (fontified t face font-lock-string-face) 129 131 (fontified t)) . 226) (undo-tree-id413 . -131) (undo-tree-id414 . -131) (t 25558 14464 525328 362000)) nil (25558 14692 509651 28000) 0 nil])
([nil nil ((#("
 Regex_RegisterGroup(test,group);
 Regex_RegisterGroup(test,group);
 Regex_RegisterGroup(test1,group);
 Regex_RegisterGroup(test2,group);
" 0 1 (fontified t ws-butler-chg delete) 1 7 (fontified t) 7 9 (fontified t) 9 10 (fontified t) 10 34 (fontified t) 34 48 (fontified t) 48 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 104 (fontified t) 104 139 (fontified t)) . 226) (undo-tree-id410 . -139) (undo-tree-id411 . -139) (undo-tree-id412 . -139)) nil (25558 14692 509647 403000) 0 nil])
([nil nil ((#(" Regex_InitGroupTable();
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 24 (fontified t) 24 25 (fontified t)) . 200) (undo-tree-id408 . -25) (undo-tree-id409 . -25)) nil (25558 14692 509644 678000) 0 nil])
([nil nil ((37 . 39) (#(" " 0 1 (fontified nil)) . 37) (36 . 37)) nil (25558 14692 509642 349000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -38) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) 39) nil (25558 14692 509640 579000) 0 nil])
([nil nil ((36 . 38) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 36) (nil rear-nonsticky nil 60 . 61) (nil fontified nil 60 . 61) (nil fontified nil 47 . 60) (nil fontified nil 46 . 47) (nil fontified nil 45 . 46) (nil fontified nil 44 . 45) (nil fontified nil 36 . 44) (36 . 61)) nil (25558 14692 509624 163000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -37) (undo-tree-id415 . -1) 38 (t 25558 14692 588655 792000)) nil (25558 14693 713582 63000) 0 nil])
([nil nil ((36 . 39) (#(" " 0 1 (fontified t)) . 36) (undo-tree-id417 . -1) 37 (t 25558 14693 796652 230000)) nil (25558 14697 386152 874000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -38) (undo-tree-id416 . -1) 39) nil (25558 14697 386147 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58 . 59) (nil fontified nil 57 . 59) (nil fontified nil 46 . 57) (nil fontified nil 44 . 46) (nil fontified nil 43 . 44) (nil fontified nil 23 . 43) (nil fontified nil 22 . 23) (22 . 59) (t 25558 14697 476641 382000)) nil (25558 14711 779828 548000) 0 nil])
([nil nil ((22 . 24) (t 25558 14711 864598 954000)) nil (25558 14712 498629 848000) 0 nil])
([nil nil ((61 . 63) (t 25558 14712 592596 807000)) nil (25558 14720 559833 411000) 0 nil])
([nil nil ((nil rear-nonsticky nil 111 . 112) (nil fontified nil 111 . 112) (nil fontified nil 109 . 111) (nil fontified nil 105 . 109) (nil fontified nil 103 . 105) (nil fontified nil 99 . 103) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 96 . 97) (nil fontified nil 89 . 96) (nil fontified nil 88 . 89) (nil fontified nil 80 . 88) (nil fontified nil 79 . 80) (nil fontified nil 69 . 79) (nil fontified nil 68 . 69) (nil fontified nil 67 . 68) (nil fontified nil 65 . 67) (nil fontified nil 62 . 65) (62 . 112)) nil (25558 14720 559827 843000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -111) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) 112 (t 25558 14720 652573 43000)) nil (25558 14721 580726 626000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -320) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -321) (undo-tree-id425 . -1) 322 (t 25558 14721 668570 48000)) nil (25558 14869 787169 373000) 0 nil])
([nil nil ((675 . 677) (t 25558 14869 864133 107000)) nil (25558 14906 969299 694000) 0 nil])
([nil nil ((677 . 680)) nil (25558 14906 969298 917000) 0 nil])
([nil nil ((680 . 682)) nil (25558 14906 969298 248000) 0 nil])
([nil nil ((681 . 686)) nil (25558 14906 969297 591000) 0 nil])
([nil nil ((#("8" 0 1 (ws-butler-chg chg fontified t)) . -685) (undo-tree-id449 . -1) 686) nil (25558 14906 969296 792000) 0 nil])
([nil nil ((685 . 690)) nil (25558 14906 969295 330000) 0 nil])
([nil nil ((#("6" 0 1 (ws-butler-chg chg fontified t)) . -685) (undo-tree-id444 . -1) (#("4" 0 1 (ws-butler-chg chg fontified t)) . -686) (undo-tree-id445 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t)) . -687) (undo-tree-id446 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -688) (undo-tree-id447 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -689) (undo-tree-id448 . -1) 690) nil (25558 14906 969293 932000) 0 nil])
([nil nil ((685 . 688)) nil (25558 14906 969289 631000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -687) (undo-tree-id443 . -1) 688) nil (25558 14906 969288 706000) 0 nil])
([nil nil ((687 . 688)) nil (25558 14906 969287 341000) 0 nil])
([nil nil ((688 . 692)) nil (25558 14906 969286 598000) 0 nil])
([nil nil ((#(">" 0 1 (ws-butler-chg chg fontified t)) . -691) (undo-tree-id442 . -1) 692) nil (25558 14906 969285 753000) 0 nil])
([nil nil ((691 . 692)) nil (25558 14906 969284 321000) 0 nil])
([nil nil ((#("<" 0 1 (ws-butler-chg chg fontified t)) . -691) (undo-tree-id441 . -1) 692) nil (25558 14906 969283 495000) 0 nil])
([nil nil ((691 . 693)) nil (25558 14906 969281 993000) 0 nil])
([nil nil ((693 . 694)) nil (25558 14906 969281 159000) 0 nil])
([nil nil ((694 . 696)) nil (25558 14906 969280 464000) 0 nil])
([nil nil ((#(">" 0 1 (ws-butler-chg chg fontified t)) . -695) (undo-tree-id440 . -1) 696) nil (25558 14906 969279 524000) 0 nil])
([nil nil ((695 . 704)) nil (25558 14906 969278 40000) 0 nil])
([nil nil ((704 . 705)) nil (25558 14906 969277 353000) 0 nil])
([nil nil ((#("," 0 1 (ws-butler-chg chg fontified t)) . -704) (undo-tree-id439 . -1) 705) nil (25558 14906 969276 335000) 0 nil])
([nil nil ((704 . 705)) nil (25558 14906 969274 734000) 0 nil])
([nil nil ((705 . 708)) nil (25558 14906 969273 992000) 0 nil])
([nil nil ((709 . 711)) nil (25558 14906 969273 280000) 0 nil])
([nil nil ((709 . 713)) nil (25558 14906 969272 347000) 0 nil])
([nil nil ((714 . 718)) nil (25558 14906 969271 663000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -711) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -712) (undo-tree-id437 . -1) (undo-tree-id438 . -1) 713) nil (25558 14906 969270 484000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -714) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -715) (undo-tree-id432 . -1) (undo-tree-id433 . -1) 716) nil (25558 14906 969263 880000) 0 nil])
([nil nil ((712 . 716)) nil (25558 14906 969258 815000) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg fontified t)) . 713) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) 716) nil (25558 14906 969254 511000) 0 nil])
([nil nil ((713 . 716) 716 (t 25558 14907 52023 474000)) nil (25558 14911 14619 108000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg)) . 713) (undo-tree-id455 . -3) 716 (t 25558 14907 52023 474000)) nil (25558 14911 14617 878000) 0 nil])
([nil nil ((#("if(eof==-1){ printf(\" End of File \\n \"); return 1; }" 0 2 (fontified t face font-lock-keyword-face) 2 20 (fontified t) 20 38 (fontified t face font-lock-string-face) 38 41 (fontified t) 41 47 (fontified t face font-lock-keyword-face) 47 52 (fontified t)) . 759)) nil (25558 14911 14616 62000) 0 nil])
([nil nil ((713 . 715)) nil (25558 14911 14615 288000) 0 nil])
([nil nil ((713 . 716) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg)) . 713) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (nil rear-nonsticky nil 766 . 767) (nil fontified nil 762 . 767) (nil fontified nil 756 . 762) (nil fontified nil 753 . 756) (nil fontified nil 735 . 753) (nil fontified nil 717 . 735) (nil fontified nil 715 . 717) (715 . 767)) nil (25558 14911 14613 196000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 813) 768) nil (25558 14911 14596 701000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -715) (undo-tree-id456 . -1) 716 (t 25558 14911 104011 526000)) nil (25558 14912 615687 114000) 0 nil])
([nil nil ((#("eof=Regex_GetObject(STRICT_WORD,&head);" 0 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t) 8 17 (fontified t) 17 39 (fontified t)) . 772) (undo-tree-id469 . -39) (t 25558 14912 704006 806000)) nil (25558 14916 170801 345000) 0 nil])
([nil nil ((712 . 716)) nil (25558 14916 170799 814000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -715) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) 716) nil (25558 14916 170798 656000) 0 nil])
([nil nil ((713 . 716) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 713) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (nil rear-nonsticky nil 753 . 754) (nil fontified nil 732 . 754) (nil fontified nil 723 . 732) (nil fontified nil 719 . 723) (nil fontified nil 718 . 719) (nil fontified nil 715 . 718) (715 . 754)) nil (25558 14916 170780 421000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 814) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) 755) nil (25558 14916 170771 86000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -715) (undo-tree-id470 . -1) 716 (t 25558 14916 255996 338000)) nil (25558 14917 664945 146000) 0 nil])
([nil nil ((#("

 eof=Regex_GetObject(STRICT_CHAR,&head);
 if(eof==-1){ printf(\" End of File \\n \"); return 1; }

 eof=Regex_GetObject(CHAR,&head);
 if(eof==-1){ printf(\" End of File \\n \"); return 1; }

 eof=Regex_GetObject(STRICT_WORD,&head);
 if(eof==-1){ printf(\" End of File \\n \"); return 1; }
" 0 1 (fontified t) 1 44 (fontified t) 44 46 (fontified t face font-lock-keyword-face) 46 47 (fontified t) 47 52 (fontified t) 52 64 (fontified t) 64 82 (fontified t face font-lock-string-face) 82 85 (fontified t) 85 91 (fontified t face font-lock-keyword-face) 91 95 (fontified t) 95 97 (fontified t) 97 133 (fontified t) 133 135 (fontified t face font-lock-keyword-face) 135 139 (fontified t) 139 141 (fontified t) 141 153 (fontified t) 153 171 (fontified t face font-lock-string-face) 171 174 (fontified t) 174 180 (fontified t face font-lock-keyword-face) 180 187 (fontified t) 187 189 (fontified t) 189 190 (fontified t) 190 192 (fontified t) 192 193 (fontified t) 193 227 (fontified t) 227 229 (fontified t) 229 231 (fontified t face font-lock-keyword-face) 231 249 (fontified t) 249 267 (fontified t face font-lock-string-face) 267 270 (fontified t) 270 276 (fontified t face font-lock-keyword-face) 276 282 (fontified t)) . -814) (undo-tree-id480 . -282) (undo-tree-id481 . -282) (undo-tree-id482 . -282) (undo-tree-id483 . -282) 1097 (t 25558 14917 755991 917000)) nil (25558 14924 70363 976000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -813) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 814) nil (25558 14924 70355 144000) 0 nil])
([nil nil ((712 . 716) (t 25558 14924 159973 39000)) nil (25558 14958 398491 395000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -715) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 716) nil (25558 14958 398489 627000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 713) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) 3229) nil (25558 14958 398484 40000) 0 nil])
([nil nil ((713 . 725) (t 25558 14958 483871 858000)) nil (25558 15066 495862 666000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -712) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -713) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -714) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -715) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -716) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -717) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -718) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -719) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -720) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -721) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -722) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -723) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -724) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 725) nil (25558 15066 495852 66000) 0 nil])
([nil nil ((675 . 676) (t 25558 15066 583553 187000)) nil (25558 15087 706732 679000) 0 nil])
([nil nil ((675 . 677) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 675) (undo-tree-id685 . -1) 676) nil (25558 15087 706731 695000) 0 nil])
([nil nil ((677 . 681)) nil (25558 15087 706730 70000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -680) (undo-tree-id684 . -1) 681) nil (25558 15087 706729 305000) 0 nil])
([nil nil ((680 . 682)) nil (25558 15087 706727 987000) 0 nil])
([nil nil ((682 . 683) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 682) (undo-tree-id683 . -5) (677 . 682) 682) nil (25558 15087 706727 153000) 0 nil])
([nil nil ((683 . 684)) nil (25558 15087 706725 427000) 0 nil])
([nil nil ((683 . 685)) nil (25558 15087 706724 791000) 0 nil])
([nil nil ((685 . 686)) nil (25558 15087 706724 84000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -683) (undo-tree-id680 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -684) (undo-tree-id681 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -685) (undo-tree-id682 . -1) 686) nil (25558 15087 706722 907000) 0 nil])
([nil nil ((683 . 684)) nil (25558 15087 706720 143000) 0 nil])
([nil nil ((685 . 686)) nil (25558 15087 706719 511000) 0 nil])
([nil nil ((685 . 689)) nil (25558 15087 706718 870000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -687) (undo-tree-id678 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -688) (undo-tree-id679 . -1) 689) nil (25558 15087 706717 967000) 0 nil])
([nil nil ((690 . 691)) nil (25558 15087 706715 813000) 0 nil])
([nil nil ((725 . 726)) nil (25558 15087 706715 178000) 0 nil])
([nil nil ((730 . 731)) nil (25558 15087 706714 486000) 0 nil])
([nil nil ((773 . 774)) nil (25558 15087 706713 845000) 0 nil])
([nil nil ((828 . 829)) nil (25558 15087 706713 202000) 0 nil])
([nil nil ((831 . 832)) nil (25558 15087 706712 206000) 0 nil])
([nil nil ((832 . 833)) nil (25558 15087 706711 494000) 0 nil])
([nil nil ((830 . 833)) nil (25558 15087 706710 723000) 0 nil])
([nil nil ((831 . 834) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 831) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) 833) nil (25558 15087 706709 688000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -830) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -831) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -832) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -833) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) 834) nil (25558 15087 706705 285000) 0 nil])
([nil nil ((833 . 835)) nil (25558 15087 706689 201000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 834) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) 835) nil (25558 15087 706685 44000) 0 nil])
([nil nil ((834 . 835) 835 (t 25558 15087 799490 636000)) nil (25558 15103 369627 463000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 834) (undo-tree-id698 . -1) (undo-tree-id699 . -1) 835 (t 25558 15087 799490 636000)) nil (25558 15103 369626 48000) 0 nil])
([nil nil ((#("eof=Regex_GetObject(STRICT_WORD,&head);" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t) 8 17 (fontified t) 17 38 (fontified t) 38 39 (rear-nonsticky t fontified t)) . 731) (undo-tree-id696 . -18) (undo-tree-id697 . -39)) nil (25558 15103 369623 245000) 0 nil])
([nil nil ((688 . 692)) nil (25558 15103 369621 199000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg)) . 689) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -2) (undo-tree-id694 . -3) (undo-tree-id695 . -3) 692) nil (25558 15103 369619 835000) 0 nil])
([nil nil ((689 . 692) (nil fontified nil 727 . 728) (nil fontified nil 706 . 727) (nil fontified nil 697 . 706) (nil fontified nil 693 . 697) (nil fontified nil 692 . 693) (nil fontified nil 690 . 692) (nil fontified nil 689 . 690) (689 . 728)) nil (25558 15103 369597 420000) 0 nil])
([nil nil ((#("   " 0 2 (fontified t) 2 3 (fontified t)) . 771) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) 731) nil (25558 15103 369591 860000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -691) (undo-tree-id700 . -1) 692 (t 25558 15103 455444 474000)) nil (25558 15104 528970 534000) 0 nil])
([nil nil ((#("eof=Regex_GetObject(STRICT_WORD,&head);" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t) 8 17 (fontified t) 17 38 (fontified t) 38 39 (rear-nonsticky t fontified t)) . 691) (t 25558 15104 623441 30000)) nil (25558 15127 760131 85000) 0 nil])
([nil nil ((731 . 734)) nil (25558 15127 760130 217000) 0 nil])
([nil nil ((731 . 735) (#("   " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 731) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -2) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (nil fontified nil 772 . 773) (nil fontified nil 751 . 772) (nil fontified nil 742 . 751) (nil fontified nil 738 . 742) (nil fontified nil 737 . 738) (nil fontified nil 735 . 737) (nil fontified nil 734 . 735) (734 . 773)) nil (25558 15127 760128 254000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 689) 774) nil (25558 15127 760111 428000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -732) (undo-tree-id707 . -1) 733 (t 25558 15127 851372 553000)) nil (25558 15131 955554 820000) 0 nil])
([nil nil ((728 . 733) (t 25558 15132 43360 195000)) nil (25558 15151 38629 285000) 0 nil])
([nil nil ((729 . 734) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 729) (undo-tree-id726 . -4) 733) nil (25558 15151 38628 87000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -728) (undo-tree-id720 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -729) (undo-tree-id721 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -730) (undo-tree-id722 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -731) (undo-tree-id723 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -732) (undo-tree-id724 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -733) (undo-tree-id725 . -1) 734) nil (25558 15151 38625 851000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -753) (undo-tree-id710 . -1) (#("R" 0 1 (fontified t)) . -754) (undo-tree-id711 . -1) (#("I" 0 1 (fontified t)) . -755) (undo-tree-id712 . -1) (#("C" 0 1 (fontified t)) . -756) (undo-tree-id713 . -1) (#("T" 0 1 (fontified t)) . -757) (undo-tree-id714 . -1) (#("_" 0 1 (fontified t)) . -758) (undo-tree-id715 . -1) (#("W" 0 1 (fontified t)) . -759) (undo-tree-id716 . -1) (#("O" 0 1 (fontified t)) . -760) (undo-tree-id717 . -1) (#("R" 0 1 (fontified t)) . -761) (undo-tree-id718 . -1) (#("D" 0 1 (fontified t)) . -762) (undo-tree-id719 . -1) 763) nil (25558 15151 38619 22000) 0 nil])
([nil nil ((753 . 754)) nil (25558 15151 38593 498000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -752) (undo-tree-id708 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -753) (undo-tree-id709 . -1) 754) nil (25558 15151 38592 40000) 0 nil])
([nil nil ((752 . 764)) nil (25558 15151 38584 883000) 0 nil])
([nil nil ((763 . 764)) nil (25558 15151 38584 87000) 0 nil])
([nil nil ((765 . 766)) nil (25558 15151 38582 892000) 0 nil])
([nil nil ((766 . 772)) nil (25558 15151 38578 435000) 0 nil])
([nil nil ((#(" char  word[MAX_WORD_LENGTH];
 char  strict_char;
 char  character;

 switch(object)
 {
  case STRICT_WORD: return Regex_GetObjectStrictWord(head,word); break;

  case STRICT_CHAR: return Regex_GetObjectStrictChar(head,&strict_char); break;

  case CHAR:if(**head=='\\0'){ printf(\" No Futher Characters \\n \"); return -1; }
            character=**head;
            printf(\" Not Strict Character %c Found \\n \", character);
            break;

  default  : break;
 }
" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 7 (fontified t) 7 11 (fontified t face font-lock-variable-name-face) 11 31 (fontified t) 31 34 (fontified t face font-lock-type-face) 34 35 (fontified t c-type c-decl-id-start face font-lock-type-face) 35 37 (fontified t) 37 48 (fontified t face font-lock-variable-name-face) 48 51 (fontified t) 51 54 (fontified t face font-lock-type-face) 54 55 (fontified t c-type c-decl-id-start face font-lock-type-face) 55 57 (fontified t) 57 66 (fontified t face font-lock-variable-name-face) 66 70 (fontified t) 70 76 (fontified t face font-lock-keyword-face) 76 90 (fontified t) 90 94 (fontified t face font-lock-keyword-face) 94 106 (fontified t) 106 107 (fontified t c-type c-decl-end) 107 108 (fontified t) 108 114 (fontified t face font-lock-keyword-face) 114 153 (fontified t) 153 158 (fontified t face font-lock-keyword-face) 158 163 (fontified t) 163 167 (fontified t face font-lock-keyword-face) 167 174 (fontified t) 174 179 (fontified t) 179 180 (fontified t c-type c-decl-end) 180 181 (fontified t) 181 187 (fontified t face font-lock-keyword-face) 187 233 (fontified t) 233 234 (fontified t) 234 239 (fontified t face font-lock-keyword-face) 239 244 (fontified t) 244 248 (fontified t face font-lock-keyword-face) 248 253 (fontified t) 253 254 (fontified t c-type c-decl-end) 254 256 (fontified t face font-lock-keyword-face) 256 265 (fontified t) 265 269 (fontified t face font-lock-string-face) 269 279 (fontified t) 279 306 (fontified t face font-lock-string-face) 306 309 (fontified t) 309 315 (fontified t face font-lock-keyword-face) 315 371 (fontified t) 371 407 (fontified t face font-lock-string-face) 407 433 (fontified t) 433 437 (fontified t face font-lock-keyword-face) 437 438 (fontified t face font-lock-keyword-face) 438 440 (fontified t) 440 443 (fontified t) 443 450 (fontified t face font-lock-keyword-face) 450 452 (fontified t) 452 453 (fontified t c-type c-decl-end) 453 454 (fontified t) 454 459 (fontified t face font-lock-keyword-face) 459 464 (fontified t)) . 3170) (undo-tree-id741 . -464) (undo-tree-id742 . -464) (t 25558 15151 127303 935000)) nil (25558 15340 864660 318000) 0 nil])
([nil nil ((3628 . 3632) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3628) (3606 . 3610) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3606) (3592 . 3598) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 3592) (3529 . 3535) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 3529) (3505 . 3511) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 3505) (3423 . 3427) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3423) (3340 . 3344) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3340) (3265 . 3269) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 3265) (3259 . 3263) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3259) (3242 . 3244) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3242) (3222 . 3224) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3222) (3201 . 3203) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3201) (3170 . 3172) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3170) (nil rear-nonsticky nil 3633 . 3634) (nil fontified nil 3629 . 3634) (nil fontified nil 3624 . 3629) (nil fontified nil 3623 . 3624) (nil fontified nil 3622 . 3623) (nil fontified nil 3620 . 3622) (nil fontified nil 3613 . 3620) (nil fontified nil 3610 . 3613) (nil fontified nil 3608 . 3610) (nil fontified nil 3607 . 3608) (nil fontified nil 3603 . 3607) (nil fontified nil 3577 . 3603) (nil fontified nil 3541 . 3577) (nil fontified nil 3485 . 3541) (nil fontified nil 3479 . 3485) (nil fontified nil 3476 . 3479) (nil fontified nil 3449 . 3476) (nil fontified nil 3439 . 3449) (nil fontified nil 3435 . 3439) (nil fontified nil 3426 . 3435) (nil fontified nil 3424 . 3426) (nil fontified nil 3423 . 3424) (nil fontified nil 3418 . 3423) (nil fontified nil 3414 . 3418) (nil fontified nil 3409 . 3414) (nil fontified nil 3404 . 3409) (nil fontified nil 3403 . 3404) (nil fontified nil 3357 . 3403) (nil fontified nil 3351 . 3357) (nil fontified nil 3350 . 3351) (nil fontified nil 3349 . 3350) (nil fontified nil 3344 . 3349) (nil fontified nil 3337 . 3344) (nil fontified nil 3333 . 3337) (nil fontified nil 3328 . 3333) (nil fontified nil 3323 . 3328) (nil fontified nil 3284 . 3323) (nil fontified nil 3278 . 3284) (nil fontified nil 3277 . 3278) (nil fontified nil 3276 . 3277) (nil fontified nil 3264 . 3276) (nil fontified nil 3260 . 3264) (nil fontified nil 3246 . 3260) (nil fontified nil 3240 . 3246) (nil fontified nil 3236 . 3240) (nil fontified nil 3227 . 3236) (nil fontified nil 3225 . 3227) (nil fontified nil 3224 . 3225) (nil fontified nil 3221 . 3224) (nil fontified nil 3218 . 3221) (nil fontified nil 3207 . 3218) (nil fontified nil 3205 . 3207) (nil fontified nil 3204 . 3205) (nil fontified nil 3201 . 3204) (nil fontified nil 3181 . 3201) (nil fontified nil 3177 . 3181) (nil fontified nil 3175 . 3177) (nil fontified nil 3174 . 3175) (nil fontified nil 3171 . 3174) (nil fontified nil 3170 . 3171) (3170 . 3634)) nil (25558 15340 864646 643000) 0 nil])
([nil nil ((675 . 677)) nil (25558 15340 864633 985000) 0 nil])
([nil nil ((676 . 678) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 676) (undo-tree-id740 . -1) 677) nil (25558 15340 864633 159000) 0 nil])
([nil nil ((677 . 679) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 677) (undo-tree-id739 . -1) 678) nil (25558 15340 864631 444000) 0 nil])
([nil nil ((678 . 680) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 678) (undo-tree-id738 . -1) 679) nil (25558 15340 864629 727000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 679) (undo-tree-id737 . -1) 680) nil (25558 15340 864628 142000) 0 nil])
([nil nil ((676 . 677)) nil (25558 15340 864626 706000) 0 nil])
([nil nil ((678 . 679)) nil (25558 15340 864625 979000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -675) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -676) (undo-tree-id736 . -1) 677) nil (25558 15340 864624 907000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -676) (undo-tree-id732 . -1) 677) nil (25558 15340 864621 101000) 0 nil])
([nil nil ((676 . 677)) nil (25558 15340 864618 586000) 0 nil])
([nil nil ((1122 . 1125) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 1122) (1101 . 1104) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 1101) (1088 . 1093) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 1088) (1026 . 1031) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 1026) (1003 . 1008) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 1003) (922 . 925) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 922) (840 . 843) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 840) (766 . 769) (#("  " 0 2 (ws-butler-chg chg fontified nil)) . 766) (761 . 764) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 761) (676 . 677) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (ws-butler-chg chg fontified nil)) . 676) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (nil rear-nonsticky nil 1140 . 1141) (nil fontified nil 1136 . 1141) (nil fontified nil 1131 . 1136) (nil fontified nil 1130 . 1131) (nil fontified nil 1129 . 1130) (nil fontified nil 1127 . 1129) (nil fontified nil 1120 . 1127) (nil fontified nil 1117 . 1120) (nil fontified nil 1115 . 1117) (nil fontified nil 1114 . 1115) (nil fontified nil 1110 . 1114) (nil fontified nil 1084 . 1110) (nil fontified nil 1048 . 1084) (nil fontified nil 992 . 1048) (nil fontified nil 986 . 992) (nil fontified nil 983 . 986) (nil fontified nil 956 . 983) (nil fontified nil 946 . 956) (nil fontified nil 942 . 946) (nil fontified nil 933 . 942) (nil fontified nil 931 . 933) (nil fontified nil 930 . 931) (nil fontified nil 925 . 930) (nil fontified nil 921 . 925) (nil fontified nil 916 . 921) (nil fontified nil 911 . 916) (nil fontified nil 910 . 911) (nil fontified nil 864 . 910) (nil fontified nil 858 . 864) (nil fontified nil 857 . 858) (nil fontified nil 856 . 857) (nil fontified nil 851 . 856) (nil fontified nil 844 . 851) (nil fontified nil 840 . 844) (nil fontified nil 835 . 840) (nil fontified nil 830 . 835) (nil fontified nil 791 . 830) (nil fontified nil 785 . 791) (nil fontified nil 784 . 785) (nil fontified nil 783 . 784) (nil fontified nil 771 . 783) (nil fontified nil 767 . 771) (nil fontified nil 753 . 767) (nil fontified nil 747 . 753) (nil fontified nil 743 . 747) (nil fontified nil 734 . 743) (nil fontified nil 732 . 734) (nil fontified nil 731 . 732) (nil fontified nil 728 . 731) (nil fontified nil 725 . 728) (nil fontified nil 714 . 725) (nil fontified nil 712 . 714) (nil fontified nil 711 . 712) (nil fontified nil 708 . 711) (nil fontified nil 688 . 708) (nil fontified nil 684 . 688) (nil fontified nil 682 . 684) (nil fontified nil 681 . 682) (nil fontified nil 678 . 681) (nil fontified nil 677 . 678) (677 . 1141)) nil (25558 15340 864610 796000) 0 nil])
([nil nil ((1295 . 1296) (t 25558 15340 950744 338000)) nil (25558 15411 31956 788000) 0 nil])
([nil nil ((1296 . 1298) (#(" " 0 1 (fontified t)) . 1296) (undo-tree-id743 . -1) (undo-tree-id744 . -1) 1297) nil (25558 15411 31952 379000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1295) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#("
" 0 1 (fontified t)) . -1296) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (#(" " 0 1 (fontified t)) . -1297) (undo-tree-id750 . -1) (undo-tree-id751 . -1) 1298 (t 25558 15411 126537 481000)) nil (25558 15413 25026 609000) 0 nil])
([nil nil ((1295 . 1296)) nil (25558 15413 25018 551000) 0 nil])
([nil nil ((1295 . 1297) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1295) (undo-tree-id745 . -1) 1296) nil (25558 15413 25014 507000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -762) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (#(" " 0 1 (fontified t)) . -763) (undo-tree-id756 . -1) 764 (t 25558 15413 110531 634000)) nil (25558 15419 599419 32000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 765) (#(" " 0 1 (fontified t)) . 765) (t 25558 15419 678512 275000)) nil (25558 15434 837641 237000) 0 nil])
([nil nil ((765 . 766)) nil (25558 15434 837640 203000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 839)) nil (25558 15434 837639 161000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 920)) nil (25558 15434 837638 261000) 0 nil])
([nil nil ((1000 . 1008)) nil (25558 15434 837637 518000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1007) (undo-tree-id757 . -1) 1008) nil (25558 15434 837635 629000) 0 nil])
([nil nil ((1033 . 1034)) nil (25558 15434 837616 237000) 0 nil])
([nil nil ((1034 . 1040)) nil (25558 15434 837614 971000) 0 nil])
([nil nil ((1102 . 1109)) nil (25558 15434 837595 761000) 0 nil])
([nil nil ((1120 . 1129) (t 25558 15434 922467 341000)) nil (25558 15448 22565 891000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1148) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (#(" " 0 1 (fontified t)) . -1149) (undo-tree-id762 . -1) 1150) nil (25558 15448 22548 575000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118) (#(" " 0 1 (fontified t)) . 1118) (t 25558 15448 102428 491000)) nil (25558 15455 758329 136000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1118)) nil (25558 15455 758322 386000) 0 nil])
([nil nil ((753 . 764) (t 25558 15455 846405 664000)) nil (25558 15558 435967 390000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -763) (undo-tree-id763 . -1) 764) nil (25558 15558 435965 881000) 0 nil])
([nil nil ((763 . 765)) nil (25558 15558 435957 378000) 0 nil])
([nil nil ((764 . 765)) nil (25558 15558 435955 804000) 0 nil])
([nil nil ((766 . 767)) nil (25558 15558 435951 526000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -798) (undo-tree-id773 . -1) (#("e" 0 1 (fontified t)) . -799) (undo-tree-id774 . -1) (#("t" 0 1 (fontified t)) . -800) (undo-tree-id775 . -1) (#("u" 0 1 (fontified t)) . -801) (undo-tree-id776 . -1) (#("r" 0 1 (fontified t)) . -802) (undo-tree-id777 . -1) (#("n" 0 1 (fontified t)) . -803) (undo-tree-id778 . -1) (#(" " 0 1 (fontified t)) . -804) (undo-tree-id779 . -1) 805 (t 25558 15558 526038 283000)) nil (25558 15580 512032 299000) 0 nil])
([nil nil ((798 . 801)) nil (25558 15580 512026 441000) 0 nil])
([nil nil ((801 . 802)) nil (25558 15580 512025 747000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -801) (undo-tree-id772 . -1) 802) nil (25558 15580 512024 898000) 0 nil])
([nil nil ((801 . 802)) nil (25558 15580 512023 348000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -868) (undo-tree-id765 . -1) (#("e" 0 1 (fontified t)) . -869) (undo-tree-id766 . -1) (#("t" 0 1 (fontified t)) . -870) (undo-tree-id767 . -1) (#("u" 0 1 (fontified t)) . -871) (undo-tree-id768 . -1) (#("r" 0 1 (fontified t)) . -872) (undo-tree-id769 . -1) (#("n" 0 1 (fontified t)) . -873) (undo-tree-id770 . -1) (#(" " 0 1 (fontified t)) . -874) (undo-tree-id771 . -1) 875) nil (25558 15580 512021 549000) 0 nil])
([nil nil ((868 . 870)) nil (25558 15580 512013 414000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -869) (undo-tree-id764 . -1) 870) nil (25558 15580 512011 623000) 0 nil])
([nil nil ((869 . 872)) nil (25558 15580 511999 522000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -993) (undo-tree-id780 . -1) (#("e" 0 1 (fontified t)) . -994) (undo-tree-id781 . -1) (#("t" 0 1 (fontified t)) . -995) (undo-tree-id782 . -1) (#("u" 0 1 (fontified t)) . -996) (undo-tree-id783 . -1) (#("r" 0 1 (fontified t)) . -997) (undo-tree-id784 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -998) (undo-tree-id785 . -1) (#(" " 0 1 (fontified t)) . -999) (undo-tree-id786 . -1) 1000 (t 25558 15580 609761 178000)) nil (25558 15586 277774 230000) 0 nil])
([nil nil ((993 . 996)) nil (25558 15586 277756 940000) 0 nil])
([nil nil ((996 . 997) (t 25558 15586 385689 990000)) nil (25558 15587 57666 293000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -996) (undo-tree-id787 . -1) 997 (t 25558 15587 153680 562000)) nil (25558 15590 634801 192000) 0 nil])
([nil nil ((996 . 997)) nil (25558 15590 634789 843000) 0 nil])
([nil nil ((#("  for(uint16_t i=0;i<op_count;i++)
  {
   eof=Regex_GetObject(operations[i].object,&head);
   if(eof==-1){ printf(\" End of File \\n \"); return 1; }
  }
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t c-type c-decl-id-start face font-lock-type-face) 14 15 (fontified t) 15 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 42 (fontified t) 42 43 (fontified t) 43 45 (fontified t) 45 46 (fontified t) 46 50 (fontified t) 50 59 (fontified t) 59 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 89 (fontified t) 89 90 (rear-nonsticky t fontified t) 90 91 (fontified t) 91 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t face font-lock-keyword-face) 95 96 (fontified t face font-lock-keyword-face) 96 103 (fontified t) 103 114 (fontified t) 114 132 (fontified t face font-lock-string-face) 132 135 (fontified t) 135 141 (fontified t face font-lock-keyword-face) 141 145 (fontified t) 145 146 (rear-nonsticky t fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t)) . 1162) (undo-tree-id788 . -151) (undo-tree-id789 . -91) (undo-tree-id790 . -151) (undo-tree-id791 . -34) (undo-tree-id792 . -90) (undo-tree-id793 . -39) (undo-tree-id794 . -151) (undo-tree-id795 . -151) (undo-tree-id796 . -151) 1313 (t 25558 15590 721636 891000)) nil (25558 15624 804719 359000) 0 nil])
([nil nil ((1297 . 1300) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 1297) (1239 . 1244) (#("   " 0 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1239) (1185 . 1190) (#("   " 0 3 (ws-butler-chg chg fontified nil)) . 1185) (1180 . 1183) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 1180) (1146 . 1147) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 1146) (nil rear-nonsticky nil 1296 . 1297) (nil fontified nil 1296 . 1297) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1293 . 1294) (nil fontified nil 1292 . 1293) (nil fontified nil 1291 . 1292) (nil fontified nil 1287 . 1291) (nil fontified nil 1281 . 1287) (nil fontified nil 1278 . 1281) (nil fontified nil 1260 . 1278) (nil fontified nil 1249 . 1260) (nil fontified nil 1242 . 1249) (nil fontified nil 1241 . 1242) (nil fontified nil 1240 . 1241) (nil fontified nil 1239 . 1240) (nil fontified nil 1237 . 1239) (nil fontified nil 1236 . 1237) (nil fontified nil 1235 . 1236) (nil fontified nil 1229 . 1235) (nil fontified nil 1228 . 1229) (nil fontified nil 1227 . 1228) (nil fontified nil 1226 . 1227) (nil fontified nil 1225 . 1226) (nil fontified nil 1224 . 1225) (nil fontified nil 1223 . 1224) (nil fontified nil 1222 . 1223) (nil fontified nil 1221 . 1222) (nil fontified nil 1220 . 1221) (nil fontified nil 1219 . 1220) (nil fontified nil 1218 . 1219) (nil fontified nil 1217 . 1218) (nil fontified nil 1216 . 1217) (nil fontified nil 1215 . 1216) (nil fontified nil 1214 . 1215) (nil fontified nil 1213 . 1214) (nil fontified nil 1212 . 1213) (nil fontified nil 1211 . 1212) (nil fontified nil 1210 . 1211) (nil fontified nil 1209 . 1210) (nil fontified nil 1208 . 1209) (nil fontified nil 1205 . 1208) (nil fontified nil 1196 . 1205) (nil fontified nil 1192 . 1196) (nil fontified nil 1191 . 1192) (nil fontified nil 1189 . 1191) (nil fontified nil 1188 . 1189) (nil fontified nil 1185 . 1188) (nil fontified nil 1184 . 1185) (nil fontified nil 1183 . 1184) (nil fontified nil 1182 . 1183) (nil fontified nil 1181 . 1182) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1178 . 1179) (nil fontified nil 1177 . 1178) (nil fontified nil 1176 . 1177) (nil fontified nil 1175 . 1176) (nil fontified nil 1174 . 1175) (nil fontified nil 1173 . 1174) (nil fontified nil 1172 . 1173) (nil fontified nil 1171 . 1172) (nil fontified nil 1170 . 1171) (nil fontified nil 1169 . 1170) (nil fontified nil 1168 . 1169) (nil fontified nil 1167 . 1168) (nil fontified nil 1166 . 1167) (nil fontified nil 1165 . 1166) (nil fontified nil 1164 . 1165) (nil fontified nil 1163 . 1164) (nil fontified nil 1162 . 1163) (nil fontified nil 1161 . 1162) (nil fontified nil 1160 . 1161) (nil fontified nil 1159 . 1160) (nil fontified nil 1158 . 1159) (nil fontified nil 1157 . 1158) (nil fontified nil 1156 . 1157) (nil fontified nil 1155 . 1156) (nil fontified nil 1154 . 1155) (nil fontified nil 1153 . 1154) (nil fontified nil 1152 . 1153) (nil fontified nil 1151 . 1152) (nil fontified nil 1150 . 1151) (nil fontified nil 1149 . 1150) (nil fontified nil 1148 . 1149) (nil fontified nil 1147 . 1148) (nil fontified nil 1146 . 1147) (1146 . 1297)) nil (25558 15624 804695 744000) 0 nil])
([nil nil ((#(" for(uint16_t i=0;i<op_count;i++)
" 0 1 (fontified t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t c-type c-decl-id-start face font-lock-type-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t)) . 1146) (t 25558 15624 885228 513000)) nil (25558 15641 621811 950000) 0 nil])
([nil nil ((745 . 746)) nil (25558 15641 621811 87000) 0 nil])
([nil nil ((747 . 748)) nil (25558 15641 621810 427000) 0 nil])
([nil nil ((778 . 779)) nil (25558 15641 621809 780000) 0 nil])
([nil nil ((782 . 783)) nil (25558 15641 621809 120000) 0 nil])
([nil nil ((853 . 854)) nil (25558 15641 621808 459000) 0 nil])
([nil nil ((933 . 934)) nil (25558 15641 621807 778000) 0 nil])
([nil nil ((1011 . 1012)) nil (25558 15641 621807 154000) 0 nil])
([nil nil ((1043 . 1044)) nil (25558 15641 621806 520000) 0 nil])
([nil nil ((1114 . 1115)) nil (25558 15641 621805 883000) 0 nil])
([nil nil ((1132 . 1133)) nil (25558 15641 621805 207000) 0 nil])
([nil nil ((1153 . 1154)) nil (25558 15641 621804 412000) 0 nil])
([nil nil ((745 . 746)) nil (25558 15641 621803 262000) 0 nil])
([nil nil ((745 . 746) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (ws-butler-chg chg fontified nil)) . 745) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (nil rear-nonsticky nil 779 . 780) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 758 . 759) (nil fontified nil 757 . 758) (nil fontified nil 756 . 757) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 749 . 750) (nil fontified nil 748 . 749) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (746 . 780)) nil (25558 15641 621785 290000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -778) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) 779 (t 25558 15641 713033 660000)) nil (25558 15642 464656 592000) 0 nil])
([nil nil ((778 . 779) (t 25558 15642 545024 130000)) nil (25558 15653 591993 492000) 0 nil])
([nil nil ((778 . 782)) nil (25558 15653 591992 558000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -780) (undo-tree-id811 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -781) (undo-tree-id812 . -1) 782) nil (25558 15653 591991 343000) 0 nil])
([nil nil ((1193 . 1194) (#(" " 0 1 (fontified t)) . 1193) (undo-tree-id810 . -1) 1194) nil (25558 15653 591974 133000) 0 nil])
([nil nil ((1193 . 1194)) nil (25558 15653 591972 202000) 0 nil])
([nil nil ((1194 . 1195)) nil (25558 15653 591971 278000) 0 nil])
([nil nil ((1195 . 1197)) nil (25558 15653 591970 130000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1196) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) 1197) nil (25558 15653 591966 400000) 0 nil])
([nil nil ((1196 . 1197) 1197 (t 25558 15653 688897 416000)) nil (25558 15723 993466 435000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1196) (undo-tree-id846 . -1) 1197 (t 25558 15653 688897 416000)) nil (25558 15723 993465 256000) 0 nil])
([nil nil ((#(" {
     eof=Regex_GetObject(operations[i].object,&head);
     if(eof==-1){ printf(\" End of File \\n \"); return 1; }
   }
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 8 (fontified t) 8 9 (fontified t) 9 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t) 16 25 (fontified t) 25 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 55 (fontified t) 55 56 (rear-nonsticky t fontified t) 56 62 (fontified t) 62 63 (fontified t face font-lock-keyword-face) 63 64 (fontified t face font-lock-keyword-face) 64 71 (fontified t) 71 82 (fontified t) 82 87 (fontified t face font-lock-string-face) 87 100 (fontified t face font-lock-string-face) 100 103 (fontified t) 103 109 (fontified t face font-lock-keyword-face) 109 113 (fontified t) 113 114 (rear-nonsticky t fontified t) 114 115 (fontified t) 115 118 (fontified t) 118 119 (fontified t) 119 120 (rear-nonsticky t fontified t)) . 1198) (undo-tree-id844 . -120) (undo-tree-id845 . -120) 1318) nil (25558 15723 993463 414000) 0 nil])
([nil nil ((1192 . 1193)) nil (25558 15723 993461 521000) 0 nil])
([nil nil ((1192 . 1195) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1192) (undo-tree-id843 . -1) 1193) nil (25558 15723 993460 623000) 0 nil])
([nil nil ((1195 . 1197)) nil (25558 15723 993459 243000) 0 nil])
([nil nil ((1197 . 1199)) nil (25558 15723 993458 562000) 0 nil])
([nil nil ((1198 . 1205)) nil (25558 15723 993457 939000) 0 nil])
([nil nil ((1206 . 1208)) nil (25558 15723 993457 205000) 0 nil])
([nil nil ((1207 . 1208)) nil (25558 15723 993456 176000) 0 nil])
([nil nil ((1208 . 1214)) nil (25558 15723 993455 574000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -1208) (undo-tree-id837 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1209) (undo-tree-id838 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1210) (undo-tree-id839 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1211) (undo-tree-id840 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -1212) (undo-tree-id841 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1213) (undo-tree-id842 . -1) 1214) nil (25558 15723 993454 48000) 0 nil])
([nil nil ((1208 . 1214)) nil (25558 15723 993449 285000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -1211) (undo-tree-id834 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1212) (undo-tree-id835 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1213) (undo-tree-id836 . -1) 1214) nil (25558 15723 993448 263000) 0 nil])
([nil nil ((1211 . 1212)) nil (25558 15723 993445 497000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -1211) (undo-tree-id833 . -1) 1212) nil (25558 15723 993444 687000) 0 nil])
([nil nil ((1211 . 1212)) nil (25558 15723 993443 289000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -1208) (undo-tree-id829 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1209) (undo-tree-id830 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1210) (undo-tree-id831 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1211) (undo-tree-id832 . -1) 1212) nil (25558 15723 993442 89000) 0 nil])
([nil nil ((1208 . 1216)) nil (25558 15723 993436 500000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -1215) (undo-tree-id828 . -1) 1216) nil (25558 15723 993435 770000) 0 nil])
([nil nil ((1215 . 1216)) nil (25558 15723 993434 451000) 0 nil])
([nil nil ((1216 . 1217)) nil (25558 15723 993433 824000) 0 nil])
([nil nil ((1217 . 1218)) nil (25558 15723 993433 155000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -1217) (undo-tree-id827 . -1) 1218) nil (25558 15723 993432 397000) 0 nil])
([nil nil ((1217 . 1219)) nil (25558 15723 993430 943000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t ws-butler-chg chg)) . -1218) (undo-tree-id826 . -1) 1219) nil (25558 15723 993429 750000) 0 nil])
([nil nil ((1208 . 1214)) nil (25558 15723 993428 304000) 0 nil])
([nil nil ((1214 . 1216)) nil (25558 15723 993427 689000) 0 nil])
([nil nil ((1215 . 1216)) nil (25558 15723 993427 49000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1215) (undo-tree-id825 . -1) 1216) nil (25558 15723 993426 291000) 0 nil])
([nil nil ((1216 . 1217) (nil syntax-table nil 1228 . 1229) (nil syntax-table (1) 1215 . 1216) (1215 . 1216)) nil (25558 15723 993424 806000) 0 nil])
([nil nil ((1216 . 1223)) nil (25558 15723 993423 749000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1220) (undo-tree-id822 . -1) (#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1221) (undo-tree-id823 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1222) (undo-tree-id824 . -1) 1223) nil (25558 15723 993422 586000) 0 nil])
([nil nil ((1220 . 1223)) nil (25558 15723 993419 824000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1220) (undo-tree-id819 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1221) (undo-tree-id820 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1222) (undo-tree-id821 . -1) 1223) nil (25558 15723 993418 732000) 0 nil])
([nil nil ((1220 . 1224)) nil (25558 15723 993415 839000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1221) (undo-tree-id816 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1222) (undo-tree-id817 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1223) (undo-tree-id818 . -1) 1224) nil (25558 15723 993414 676000) 0 nil])
([nil nil ((1221 . 1222)) nil (25558 15723 993411 613000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1221) (undo-tree-id815 . -1) 1222) nil (25558 15723 993410 688000) 0 nil])
([nil nil ((1221 . 1237)) nil (25558 15723 993408 962000) 0 nil])
([nil nil ((1239 . 1240)) nil (25558 15723 993408 112000) 0 nil])
([nil nil ((1240 . 1241)) nil (25558 15723 993406 944000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1257) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 1241) nil (25558 15723 993402 565000) 0 nil])
([nil nil ((#("while(1)
 {


 }
" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . -1260) (undo-tree-id877 . -17) (undo-tree-id878 . -12) (undo-tree-id879 . -17) (undo-tree-id880 . -13) (undo-tree-id881 . -17) (undo-tree-id882 . -17) 1273 (t 25558 15724 84134 845000)) nil (25558 15732 688080 649000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1258) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (#(" " 0 1 (fontified t)) . -1259) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) 1260) nil (25558 15732 688061 703000) 0 nil])
([nil nil ((1252 . 1255)) nil (25558 15732 688013 559000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 1253) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . -2) (undo-tree-id850 . -2) 1255) nil (25558 15732 688009 577000) 0 nil])
([nil nil ((1253 . 1255) 1255 (t 25558 15732 780044 916000)) nil (25558 15735 927433 586000) 0 nil])
([nil nil ((1255 . 1256) (t 25558 15732 780044 916000)) nil (25558 15735 927432 565000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1255) (undo-tree-id891 . -1) 1256) nil (25558 15735 927431 586000) 0 nil])
([nil nil ((1253 . 1256) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1253) (undo-tree-id890 . -2) 1255) nil (25558 15735 927429 932000) 0 nil])
([nil nil ((1254 . 1257) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1254) (undo-tree-id889 . -2) 1256) nil (25558 15735 927428 260000) 0 nil])
([nil nil ((1257 . 1258)) nil (25558 15735 927426 501000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1254) (undo-tree-id885 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1255) (undo-tree-id886 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1256) (undo-tree-id887 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1257) (undo-tree-id888 . -1) 1258) nil (25558 15735 927425 4000) 0 nil])
([nil nil ((1254 . 1256)) nil (25558 15735 927420 706000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 1254) (undo-tree-id883 . -2) (undo-tree-id884 . -2) 1256) nil (25558 15735 927417 49000) 0 nil])
([nil nil ((1254 . 1256) 1256 (t 25558 15736 72011 111000)) nil (25558 15769 464166 250000) 0 nil])
([nil nil ((675 . 680) (t 25558 15736 72011 111000)) nil (25558 15769 464165 219000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -676) (undo-tree-id908 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -677) (undo-tree-id909 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -678) (undo-tree-id910 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -679) (undo-tree-id911 . -1) 680) nil (25558 15769 464163 813000) 0 nil])
([nil nil ((676 . 680)) nil (25558 15769 464160 107000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -676) (undo-tree-id904 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -677) (undo-tree-id905 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -678) (undo-tree-id906 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -679) (undo-tree-id907 . -1) 680) nil (25558 15769 464158 902000) 0 nil])
([nil nil ((676 . 680)) nil (25558 15769 464155 106000) 0 nil])
([nil nil ((676 . 682) (#("int8" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -676) (undo-tree-id903 . -4) 680) nil (25558 15769 464154 257000) 0 nil])
([nil nil ((682 . 691)) nil (25558 15769 464152 670000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -690) (undo-tree-id902 . -1) 691) nil (25558 15769 464151 777000) 0 nil])
([nil nil ((690 . 694)) nil (25558 15769 464150 336000) 0 nil])
([nil nil ((694 . 695)) nil (25558 15769 464149 273000) 0 nil])
([nil nil ((695 . 697)) nil (25558 15769 464148 557000) 0 nil])
([nil nil ((696 . 698) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 696) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) 697) nil (25558 15769 464147 382000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 697) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) 698) nil (25558 15769 464143 996000) 0 nil])
([nil nil ((675 . 677) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 675) (undo-tree-id892 . -1) (undo-tree-id893 . -1) 676) nil (25558 15769 464138 697000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg fontified t)) . 1277) 677) nil (25558 15769 464124 876000) 0 nil])
([nil nil ((695 . 697) (t 25558 15769 543674 401000)) nil (25558 15771 529827 414000) 0 nil])
([nil nil ((1279 . 1282) (t 25558 15771 611654 8000)) nil (25558 15780 414640 101000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1279) (undo-tree-id925 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1280) (undo-tree-id926 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1281) (undo-tree-id927 . -1) 1282) nil (25558 15780 414638 614000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1278) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -1279) (undo-tree-id923 . -1) (undo-tree-id924 . -1) 1280) nil (25558 15780 414634 819000) 0 nil])
([nil nil ((1278 . 1279)) nil (25558 15780 414615 37000) 0 nil])
([nil nil ((1279 . 1281) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 1279) (undo-tree-id918 . -1) 1280) nil (25558 15780 414613 979000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1278) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -1279) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1280) (undo-tree-id916 . -1) (undo-tree-id917 . -1) 1281) nil (25558 15780 414610 336000) 0 nil])
([nil nil ((1278 . 1279)) nil (25558 15780 414593 817000) 0 nil])
([nil nil ((1278 . 1280) (#(" " 0 1 (fontified t)) . 1278) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) 1279 (t 25558 15780 503566 848000)) nil (25558 15781 710256 962000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1278) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (#(" " 0 1 (fontified t)) . -1279) (undo-tree-id933 . -1) (undo-tree-id934 . -1) 1280 (t 25558 15781 803554 176000)) nil (25558 15783 675937 363000) 0 nil])
([nil nil ((1278 . 1279)) nil (25558 15783 675922 970000) 0 nil])
([nil nil ((1278 . 1280) (#(" " 0 1 (fontified t)) . 1278) (undo-tree-id954 . -1) 1279 (t 25558 15783 771535 26000)) nil (25558 15797 359524 610000) 0 nil])
([nil nil ((1279 . 1281) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1279) (undo-tree-id953 . -1) 1280) nil (25558 15797 359522 318000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1279) (undo-tree-id951 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1280) (undo-tree-id952 . -1) 1281) nil (25558 15797 359520 457000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1278) (undo-tree-id950 . -1) 1279) nil (25558 15797 359518 0) 0 nil])
([nil nil ((1278 . 1279)) nil (25558 15797 359501 692000) 0 nil])
([nil nil ((1278 . 1280) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1278) (undo-tree-id949 . -1) 1279) nil (25558 15797 359500 637000) 0 nil])
([nil nil ((1278 . 1280)) nil (25558 15797 359498 331000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1279) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -1280) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1281) (undo-tree-id947 . -1) (undo-tree-id948 . -1) 1282) nil (25558 15797 359493 891000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1282) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) 1283 (t 25558 15797 455403 19000)) nil (25558 15799 180071 149000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1281) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) 1282) nil (25558 15799 180061 923000) 0 nil])
([nil nil ((4047 . 4048) (t 25558 15799 263385 722000)) nil (25558 15830 947831 274000) 0 nil])
([nil nil ((4048 . 4049) (t 25558 15831 39087 148000)) nil (25558 15835 443941 947000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3698) (undo-tree-id987 . -1) (#(" " 0 1 (fontified t)) . -3699) (undo-tree-id988 . -1) 3700 (t 25558 15835 543045 630000)) nil (25558 15898 317585 72000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3702)) nil (25558 15898 317582 626000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3776)) nil (25558 15898 317581 961000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3855) (#("
" 0 1 (fontified t)) . 3855)) nil (25558 15898 317580 965000) 0 nil])
([nil nil ((3856 . 3858) (#("   " 0 1 (fontified nil ws-butler-chg delete) 1 3 (fontified nil)) . 3856) (3855 . 3856)) nil (25558 15898 317579 984000) 0 nil])
([nil nil ((3858 . 3859)) nil (25558 15898 317578 996000) 0 nil])
([nil nil ((3939 . 3946)) nil (25558 15898 317578 375000) 0 nil])
([nil nil ((3974 . 3981)) nil (25558 15898 317577 698000) 0 nil])
([nil nil ((4044 . 4051)) nil (25558 15898 317576 958000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4062) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#(" " 0 1 (fontified t)) . -4063) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (#(" " 0 1 (fontified t)) . -4064) (undo-tree-id986 . -1) 4065) nil (25558 15898 317575 536000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4081) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (#(" " 0 1 (fontified t)) . -4082) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (#(" " 0 1 (fontified t)) . -4083) (undo-tree-id979 . -1) 4084) nil (25558 15898 317568 27000) 0 nil])
([nil nil ((4081 . 4082)) nil (25558 15898 317549 698000) 0 nil])
([nil nil ((#("int64_t Regex_GetObject(Regex_Object object, char** head)
{

  char  word[MAX_WORD_LENGTH];
  char  strict_char;
  char  character;

  switch(object)
  {
   case STRICT_WORD: return Regex_GetObjectStrictWord(head,word); break;

   case STRICT_CHAR: return Regex_GetObjectStrictChar(head,&strict_char); break;

   case CHAR:if(**head=='\\0'){ printf(\" No Futher Characters \\n \"); return -1; }
             character=**head;
             printf(\" Not Strict Character %c Found \\n \", character);
             break;

   default  : break;
  }

}
" 0 1 (c-is-sws t fontified t face font-lock-type-face) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t c-type c-decl-arg-start) 24 36 (fontified t face font-lock-type-face) 36 37 (fontified t) 37 43 (fontified t face font-lock-variable-name-face) 43 44 (fontified t c-type c-decl-arg-start) 44 45 (fontified t) 45 49 (fontified t face font-lock-type-face) 49 52 (fontified t) 52 56 (fontified t face font-lock-variable-name-face) 56 61 (fontified t) 61 63 (fontified t) 63 64 (fontified t face font-lock-type-face) 64 66 (fontified t face font-lock-type-face) 66 67 (fontified t c-type c-decl-id-start face font-lock-type-face) 67 69 (fontified t) 69 73 (fontified t face font-lock-variable-name-face) 73 94 (fontified t) 94 95 (fontified t face font-lock-type-face) 95 97 (fontified t face font-lock-type-face) 97 98 (fontified t c-type c-decl-id-start face font-lock-type-face) 98 100 (fontified t) 100 111 (fontified t face font-lock-variable-name-face) 111 115 (fontified t) 115 116 (fontified t face font-lock-type-face) 116 118 (fontified t face font-lock-type-face) 118 119 (fontified t c-type c-decl-id-start face font-lock-type-face) 119 121 (fontified t) 121 130 (fontified t face font-lock-variable-name-face) 130 135 (fontified t) 135 136 (fontified t face font-lock-keyword-face) 136 141 (fontified t face font-lock-keyword-face) 141 150 (fontified t) 150 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t face font-lock-keyword-face) 158 161 (fontified t face font-lock-keyword-face) 161 173 (fontified t) 173 174 (fontified t c-type c-decl-end) 174 175 (fontified t) 175 181 (fontified t face font-lock-keyword-face) 181 220 (fontified t) 220 225 (fontified t face font-lock-keyword-face) 225 227 (fontified t) 227 228 (fontified t) 228 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t face font-lock-keyword-face) 232 235 (fontified t face font-lock-keyword-face) 235 242 (fontified t) 242 247 (fontified t) 247 248 (fontified t c-type c-decl-end) 248 249 (fontified t) 249 255 (fontified t face font-lock-keyword-face) 255 301 (fontified t) 301 302 (fontified t) 302 307 (fontified t face font-lock-keyword-face) 307 309 (fontified t) 309 310 (fontified t) 310 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t face font-lock-keyword-face) 314 317 (fontified t face font-lock-keyword-face) 317 322 (fontified t) 322 323 (fontified t c-type c-decl-end) 323 325 (fontified t face font-lock-keyword-face) 325 334 (fontified t) 334 338 (fontified t face font-lock-string-face) 338 348 (fontified t) 348 354 (fontified t face font-lock-string-face) 354 375 (fontified t face font-lock-string-face) 375 378 (fontified t) 378 384 (fontified t face font-lock-keyword-face) 384 391 (fontified t) 391 393 (fontified t) 393 394 (fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 404 (fontified t) 404 405 (fontified t) 405 422 (fontified t) 422 428 (fontified t) 428 429 (fontified t) 429 430 (fontified t) 430 431 (fontified t) 431 432 (fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 435 (fontified t) 435 436 (fontified t) 436 442 (fontified t) 442 478 (fontified t face font-lock-string-face) 478 492 (fontified t) 492 498 (fontified t) 498 499 (fontified t) 499 500 (fontified t) 500 501 (fontified t) 501 502 (fontified t) 502 503 (fontified t) 503 504 (fontified t) 504 505 (fontified t) 505 506 (fontified t face font-lock-keyword-face) 506 509 (fontified t face font-lock-keyword-face) 509 510 (fontified t face font-lock-keyword-face) 510 512 (fontified t) 512 513 (fontified t) 513 516 (fontified t) 516 517 (fontified t face font-lock-keyword-face) 517 523 (fontified t face font-lock-keyword-face) 523 525 (fontified t) 525 526 (fontified t c-type c-decl-end) 526 527 (fontified t) 527 532 (fontified t face font-lock-keyword-face) 532 534 (fontified t) 534 535 (fontified t) 535 536 (fontified t) 536 537 (fontified t) 537 538 (rear-nonsticky t fontified t) 538 539 (fontified t) 539 541 (fontified t)) . -3546) (undo-tree-id1012 . -61) (undo-tree-id1013 . -533) (undo-tree-id1014 . -536) (undo-tree-id1015 . -541) (undo-tree-id1016 . -538) (undo-tree-id1017 . -541) 4085 (t 25558 15898 406485 770000)) nil (25558 15966 555431 380000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -3545) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 3546) nil (25558 15966 555426 232000) 0 nil])
([nil nil ((3545 . 3553)) nil (25558 15966 555420 526000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t c-is-sws t ws-butler-chg chg)) . -3545) (undo-tree-id1004 . -1) 3546) nil (25558 15966 555419 585000) 0 nil])
([nil nil ((3552 . 3553)) nil (25558 15966 555417 980000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3551) (undo-tree-id1002 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3552) (undo-tree-id1003 . -1) 3553) nil (25558 15966 555417 47000) 0 nil])
([nil nil ((3551 . 3554)) nil (25558 15966 555414 726000) 0 nil])
([nil nil ((3554 . 3559)) nil (25558 15966 555414 18000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg)) . -3558) (undo-tree-id1001 . -1) 3559) nil (25558 15966 555413 276000) 0 nil])
([nil nil ((3558 . 3568)) nil (25558 15966 555411 943000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t ws-butler-chg chg)) . -3565) (undo-tree-id998 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3566) (undo-tree-id999 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -3567) (undo-tree-id1000 . -1) 3568) nil (25558 15966 555410 893000) 0 nil])
([nil nil ((3565 . 3572)) nil (25558 15966 555406 254000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -3568) (undo-tree-id994 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3569) (undo-tree-id995 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3570) (undo-tree-id996 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3571) (undo-tree-id997 . -1) 3572) nil (25558 15966 555404 803000) 0 nil])
([nil nil ((3563 . 3564)) nil (25558 15966 555400 968000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -3563) (undo-tree-id993 . -1) 3564) nil (25558 15966 555399 975000) 0 nil])
([nil nil ((3564 . 3568)) nil (25558 15966 555398 242000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -3564) (undo-tree-id989 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3565) (undo-tree-id990 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3566) (undo-tree-id991 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3567) (undo-tree-id992 . -1) 3568) nil (25558 15966 555395 997000) 0 nil])
([nil nil ((3558 . 3562)) nil (25558 15966 555382 108000) 0 nil])
([nil nil ((3572 . 3574) (t 25558 15966 645915 944000)) nil (25558 15993 802652 279000) 0 nil])
([nil nil ((3573 . 3576)) nil (25558 15993 802651 478000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -3575) (undo-tree-id1068 . -1) 3576) nil (25558 15993 802650 728000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -3573) (undo-tree-id1066 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -3574) (undo-tree-id1067 . -1) 3575) nil (25558 15993 802648 968000) 0 nil])
([nil nil ((3573 . 3578)) nil (25558 15993 802646 625000) 0 nil])
([nil nil ((nil fontified nil 3573 . 3588) (nil ws-butler-chg chg 3573 . 3588) (3573 . 3588) (#("Regex" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -3573) (undo-tree-id1065 . -5) 3578) nil (25558 15993 802645 716000) 0 nil])
([nil nil ((3588 . 3617)) nil (25558 15993 802643 821000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3596) (undo-tree-id1044 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3597) (undo-tree-id1045 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3598) (undo-tree-id1046 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3599) (undo-tree-id1047 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3600) (undo-tree-id1048 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3601) (undo-tree-id1049 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3602) (undo-tree-id1050 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3603) (undo-tree-id1051 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3604) (undo-tree-id1052 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3605) (undo-tree-id1053 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3606) (undo-tree-id1054 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3607) (undo-tree-id1055 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3608) (undo-tree-id1056 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3609) (undo-tree-id1057 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3610) (undo-tree-id1058 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3611) (undo-tree-id1059 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3612) (undo-tree-id1060 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3613) (undo-tree-id1061 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3614) (undo-tree-id1062 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1063 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3616) (undo-tree-id1064 . -1) 3617) nil (25558 15993 802640 311000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3588) (undo-tree-id1036 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3589) (undo-tree-id1037 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3590) (undo-tree-id1038 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3591) (undo-tree-id1039 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3592) (undo-tree-id1040 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3593) (undo-tree-id1041 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3594) (undo-tree-id1042 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3595) (undo-tree-id1043 . -1) 3596) nil (25558 15993 802614 201000) 0 nil])
([nil nil ((3588 . 3594)) nil (25558 15993 802606 579000) 0 nil])
([nil nil ((3589 . 3598) (#("opera" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 1 2 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 2 3 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 3 4 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 4 5 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3589) (undo-tree-id1035 . -5) 3594) nil (25558 15993 802605 712000) 0 nil])
([nil nil ((3598 . 3599)) nil (25558 15993 802604 160000) 0 nil])
([nil nil ((3599 . 3600)) nil (25558 15993 802603 485000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3599) (undo-tree-id1034 . -1) 3600) nil (25558 15993 802602 420000) 0 nil])
([nil nil ((3599 . 3605)) nil (25558 15993 802600 886000) 0 nil])
([nil nil ((#("Ü" 0 1 (fontified t ws-butler-chg chg)) . -3603) (undo-tree-id1032 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3604) (undo-tree-id1033 . -1) 3605) nil (25558 15993 802599 872000) 0 nil])
([nil nil ((3603 . 3604)) nil (25558 15993 802597 695000) 0 nil])
([nil nil ((3604 . 3605)) nil (25558 15993 802597 37000) 0 nil])
([nil nil ((#("Ü" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -3603) (undo-tree-id1030 . -1) (#("*" 0 1 (fontified t ws-butler-chg chg)) . -3604) (undo-tree-id1031 . -1) 3605) nil (25558 15993 802596 141000) 0 nil])
([nil nil ((3603 . 3604)) nil (25558 15993 802594 89000) 0 nil])
([nil nil ((3604 . 3606)) nil (25558 15993 802593 333000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3605) (undo-tree-id1029 . -1) 3606) nil (25558 15993 802592 287000) 0 nil])
([nil nil ((3605 . 3608)) nil (25558 15993 802590 860000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3605) (undo-tree-id1026 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3606) (undo-tree-id1027 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3607) (undo-tree-id1028 . -1) 3608) nil (25558 15993 802589 751000) 0 nil])
([nil nil ((3605 . 3607)) nil (25558 15993 802586 823000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3606) (undo-tree-id1025 . -1) 3607) nil (25558 15993 802585 876000) 0 nil])
([nil nil ((3606 . 3609)) nil (25558 15993 802584 315000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3605) (undo-tree-id1021 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3606) (undo-tree-id1022 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3607) (undo-tree-id1023 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3608) (undo-tree-id1024 . -1) 3609) nil (25558 15993 802582 950000) 0 nil])
([nil nil ((3605 . 3610)) nil (25558 15993 802578 940000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3607) (undo-tree-id1018 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3608) (undo-tree-id1019 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3609) (undo-tree-id1020 . -1) 3610) nil (25558 15993 802576 989000) 0 nil])
([nil nil ((3607 . 3609)) nil (25558 15993 802562 35000) 0 nil])
([nil nil ((3610 . 3612) (t 25558 15993 893698 364000)) nil (25558 16000 544175 750000) 0 nil])
([nil nil ((3610 . 3611)) nil (25558 16000 544174 843000) 0 nil])
([nil nil ((3612 . 3613)) nil (25558 16000 544174 100000) 0 nil])
([nil nil ((3612 . 3615)) nil (25558 16000 544173 254000) 0 nil])
([nil nil ((3613 . 3616) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3613) (undo-tree-id1073 . -2) 3615) nil (25558 16000 544172 247000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3614) (undo-tree-id1072 . -2) 3616) nil (25558 16000 544170 61000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3612) (undo-tree-id1071 . -1) 3613) nil (25558 16000 544167 797000) 0 nil])
([nil nil ((3613 . 3614)) nil (25558 16000 544165 392000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 3613) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 3614) nil (25558 16000 544161 392000) 0 nil])
([nil nil ((3613 . 3614) 3614 (t 25558 16000 637645 328000)) nil (25558 16069 353411 553000) 0 nil])
([nil nil ((3276 . 3278) (t 25558 16000 637645 328000)) nil (25558 16069 353410 276000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3278) (undo-tree-id1074 . -1) 3279) nil (25558 16069 353408 462000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 3614) 3278) nil (25558 16069 353397 997000) 0 nil])
([nil nil ((3614 . 3620) (t 25558 16069 433121 689000)) nil (25558 16160 253336 612000) 0 nil])
([nil nil ((3620 . 3621) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 3620) (undo-tree-id1085 . -5) (3615 . 3620) 3620) nil (25558 16160 253335 458000) 0 nil])
([nil nil ((3621 . 3622)) nil (25558 16160 253333 494000) 0 nil])
([nil nil ((3621 . 3622)) nil (25558 16160 253332 649000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -3621) (undo-tree-id1084 . -1) 3622) nil (25558 16160 253331 664000) 0 nil])
([nil nil ((3621 . 3625)) nil (25558 16160 253330 147000) 0 nil])
([nil nil ((3621 . 3630) (#("oper" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -3621) (undo-tree-id1083 . -4) 3625) nil (25558 16160 253328 804000) 0 nil])
([nil nil ((3630 . 3631)) nil (25558 16160 253327 250000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -3630) (undo-tree-id1082 . -1) 3631) nil (25558 16160 253326 315000) 0 nil])
([nil nil ((3630 . 3631)) nil (25558 16160 253323 243000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -3630) (undo-tree-id1081 . -1) 3631) nil (25558 16160 253322 298000) 0 nil])
([nil nil ((3630 . 3638)) nil (25558 16160 253308 487000) 0 nil])
([nil nil ((3633 . 3634)) nil (25558 16160 253307 709000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -3638) (undo-tree-id1080 . -1) 3639) nil (25558 16160 253306 642000) 0 nil])
([nil nil ((3638 . 3639)) nil (25558 16160 253304 454000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -3638) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) 3639) nil (25558 16160 253300 232000) 0 nil])
([nil nil ((3638 . 3640) (t 25558 16160 344473 299000)) nil (25558 16214 449742 496000) 0 nil])
([nil nil ((3639 . 3640)) nil (25558 16214 449741 506000) 0 nil])
([nil nil ((3641 . 3643)) nil (25558 16214 449740 805000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -3641) (undo-tree-id1103 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3642) (undo-tree-id1104 . -1) 3643) nil (25558 16214 449739 784000) 0 nil])
([nil nil ((3641 . 3643)) nil (25558 16214 449736 142000) 0 nil])
([nil nil ((3643 . 3644)) nil (25558 16214 449735 516000) 0 nil])
([nil nil ((3645 . 3647)) nil (25558 16214 449734 741000) 0 nil])
([nil nil ((3645 . 3649)) nil (25558 16214 449734 23000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3647) (undo-tree-id1101 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3648) (undo-tree-id1102 . -1) 3649) nil (25558 16214 449733 70000) 0 nil])
([nil nil ((3648 . 3650)) nil (25558 16214 449730 920000) 0 nil])
([nil nil ((3648 . 3652)) nil (25558 16214 449730 265000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg)) . 3649) (undo-tree-id1100 . -3) 3652) nil (25558 16214 449729 489000) 0 nil])
([nil nil ((3652 . 3654)) nil (25558 16214 449728 75000) 0 nil])
([nil nil ((3653 . 3655) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 3653) (undo-tree-id1099 . -1) 3654) nil (25558 16214 449727 276000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 3654) (undo-tree-id1098 . -1) 3655) nil (25558 16214 449725 626000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -3653) (undo-tree-id1097 . -1) 3654) nil (25558 16214 449724 155000) 0 nil])
([nil nil ((3649 . 3652)) nil (25558 16214 449722 412000) 0 nil])
([nil nil ((3652 . 3657)) nil (25558 16214 449721 698000) 0 nil])
([nil nil ((3657 . 3662)) nil (25558 16214 449721 30000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3657) (undo-tree-id1092 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3658) (undo-tree-id1093 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3659) (undo-tree-id1094 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3660) (undo-tree-id1095 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3661) (undo-tree-id1096 . -1) 3662) nil (25558 16214 449719 584000) 0 nil])
([nil nil ((3657 . 3659)) nil (25558 16214 449715 211000) 0 nil])
([nil nil ((#("operation.op_code[i]" 0 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg) 19 20 (fontified t ws-butler-chg chg)) . 3621) (undo-tree-id1088 . -20) (undo-tree-id1089 . -20) (undo-tree-id1090 . -20) (undo-tree-id1091 . -20) 3641) nil (25558 16214 449714 32000) 0 nil])
([nil nil ((3614 . 3616) (#(" " 0 1 (fontified nil)) . 3614) (nil rear-nonsticky nil 3640 . 3641) (nil fontified nil 3640 . 3641) (nil fontified nil 3639 . 3640) (nil fontified nil 3638 . 3639) (nil fontified nil 3637 . 3638) (nil fontified nil 3636 . 3637) (nil fontified nil 3635 . 3636) (nil fontified nil 3634 . 3635) (nil fontified nil 3633 . 3634) (nil fontified nil 3632 . 3633) (nil fontified nil 3631 . 3632) (nil fontified nil 3630 . 3631) (nil fontified nil 3621 . 3630) (3621 . 3641)) nil (25558 16214 449709 307000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) 3616) nil (25558 16214 449702 767000) 0 nil])
([nil nil ((3649 . 3652) (#("  " 0 1 (fontified nil) 1 2 (fontified nil)) . 3649) (nil rear-nonsticky nil 3677 . 3678) (nil fontified nil 3677 . 3678) (nil fontified nil 3676 . 3677) (nil fontified nil 3675 . 3676) (nil fontified nil 3674 . 3675) (nil fontified nil 3673 . 3674) (nil fontified nil 3672 . 3673) (nil fontified nil 3671 . 3672) (nil fontified nil 3670 . 3671) (nil fontified nil 3669 . 3670) (nil fontified nil 3668 . 3669) (nil fontified nil 3667 . 3668) (nil fontified nil 3658 . 3667) (3658 . 3678) (t 25558 16214 540107 336000)) nil (25558 16216 373176 585000) 0 nil])
([nil nil ((3680 . 3681) (t 25558 16216 468094 571000)) nil (25558 16246 423320 130000) 0 nil])
([nil nil ((3681 . 3687)) nil (25558 16246 423319 120000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3684) (undo-tree-id1112 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3685) (undo-tree-id1113 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3686) (undo-tree-id1114 . -1) 3687) nil (25558 16246 423318 19000) 0 nil])
([nil nil ((3684 . 3689)) nil (25558 16246 423315 206000) 0 nil])
([nil nil ((3689 . 3692)) nil (25558 16246 423314 533000) 0 nil])
([nil nil ((3691 . 3692)) nil (25558 16246 423313 831000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -3690) (undo-tree-id1109 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -3691) (undo-tree-id1110 . -1) (#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3692) (undo-tree-id1111 . -1) 3693) nil (25558 16246 423312 678000) 0 nil])
([nil nil ((3690 . 3691)) nil (25558 16246 423309 656000) 0 nil])
([nil nil ((3691 . 3693)) nil (25558 16246 423309 21000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg)) . -3692) (undo-tree-id1108 . -1) 3693) nil (25558 16246 423308 251000) 0 nil])
([nil nil ((3692 . 3695)) nil (25558 16246 423306 821000) 0 nil])
([nil nil ((3695 . 3696)) nil (25558 16246 423306 154000) 0 nil])
([nil nil ((3696 . 3697)) nil (25558 16246 423305 545000) 0 nil])
([nil nil ((3697 . 3698)) nil (25558 16246 423304 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3695) (undo-tree-id1107 . -1) 3696) nil (25558 16246 423304 108000) 0 nil])
([nil nil ((3695 . 3696)) nil (25558 16246 423302 494000) 0 nil])
([nil nil ((3697 . 3698)) nil (25558 16246 423301 858000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3697) (undo-tree-id1106 . -1) 3698) nil (25558 16246 423300 936000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3695) (undo-tree-id1105 . -1) 3696) nil (25558 16246 423298 686000) 0 nil])
([nil nil ((3695 . 3696)) nil (25558 16246 423289 821000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 3697)) nil (25558 16246 423285 115000) 0 nil])
([nil nil ((3614 . 3617) (#(" " 0 1 (fontified t)) . 3614) (undo-tree-id1118 . -1) 3615 (t 25558 16246 507897 856000)) nil (25558 16267 179652 769000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3616) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) 3617) nil (25558 16267 179647 448000) 0 nil])
([nil nil ((3698 . 3701) (t 25558 16267 267764 199000)) nil (25558 16303 56381 32000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -3700) (undo-tree-id1134 . -1) 3701) nil (25558 16303 56379 803000) 0 nil])
([nil nil ((3700 . 3704)) nil (25558 16303 56377 878000) 0 nil])
([nil nil ((3704 . 3705)) nil (25558 16303 56377 206000) 0 nil])
([nil nil ((3705 . 3706)) nil (25558 16303 56376 479000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -3704) (undo-tree-id1132 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -3705) (undo-tree-id1133 . -1) 3706) nil (25558 16303 56375 444000) 0 nil])
([nil nil ((3704 . 3705)) nil (25558 16303 56372 871000) 0 nil])
([nil nil ((3705 . 3709)) nil (25558 16303 56372 32000) 0 nil])
([nil nil ((3706 . 3710) (#("   " 0 3 (fontified t ws-butler-chg chg)) . 3706) (undo-tree-id1131 . -3) 3709) nil (25558 16303 56370 892000) 0 nil])
([nil nil ((3710 . 3711)) nil (25558 16303 56354 183000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3706) (undo-tree-id1126 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3707) (undo-tree-id1127 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3708) (undo-tree-id1128 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3709) (undo-tree-id1129 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3710) (undo-tree-id1130 . -1) 3711) nil (25558 16303 56352 714000) 0 nil])
([nil nil ((3706 . 3716)) nil (25558 16303 56347 745000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -3709) (undo-tree-id1119 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3710) (undo-tree-id1120 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -3711) (undo-tree-id1121 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -3712) (undo-tree-id1122 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -3713) (undo-tree-id1123 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -3714) (undo-tree-id1124 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3715) (undo-tree-id1125 . -1) 3716) nil (25558 16303 56330 753000) 0 nil])
([nil nil ((3709 . 3716)) nil (25558 16303 56318 324000) 0 nil])
([nil nil ((3716 . 3717)) nil (25558 16303 56317 537000) 0 nil])
([nil nil ((3717 . 3723)) nil (25558 16303 56316 353000) 0 nil])
([nil nil ((3723 . 3724)) nil (25558 16303 56311 973000) 0 nil])
([nil nil ((3699 . 3715) (t 25558 16303 151537 314000)) nil (25558 16321 453330 517000) 0 nil])
([nil nil ((3715 . 3717)) nil (25558 16321 453329 423000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -3716) (undo-tree-id1139 . -1) 3717) nil (25558 16321 453328 109000) 0 nil])
([nil nil ((3716 . 3719)) nil (25558 16321 453326 341000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -3716) (undo-tree-id1136 . -1) (#("q" 0 1 (fontified t ws-butler-chg chg)) . -3717) (undo-tree-id1137 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -3718) (undo-tree-id1138 . -1) 3719) nil (25558 16321 453324 907000) 0 nil])
([nil nil ((3716 . 3720)) nil (25558 16321 453321 3000) 0 nil])
([nil nil ((3720 . 3721)) nil (25558 16321 453320 160000) 0 nil])
([nil nil ((3720 . 3721)) nil (25558 16321 453319 99000) 0 nil])
([nil nil ((3722 . 3723)) nil (25558 16321 453317 817000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3722) (undo-tree-id1135 . -1) 3723) nil (25558 16321 453314 106000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3720) (undo-tree-id1140 . -1) 3721 (t 25558 16321 551422 929000)) nil (25558 16323 169901 125000) 0 nil])
([nil nil ((3721 . 3722)) nil (25558 16323 169888 641000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3721) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) 3722 (t 25558 16323 271412 301000)) nil (25558 16323 947584 970000) 0 nil])
([nil nil ((3720 . 3722) (t 25558 16324 27407 634000)) nil (25558 16358 517843 580000) 0 nil])
([nil nil ((3722 . 3723)) nil (25558 16358 517842 651000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -3722) (undo-tree-id1174 . -1) 3723) nil (25558 16358 517841 360000) 0 nil])
([nil nil ((3722 . 3723)) nil (25558 16358 517839 716000) 0 nil])
([nil nil ((3723 . 3724)) nil (25558 16358 517838 866000) 0 nil])
([nil nil ((3614 . 3615)) nil (25558 16358 517838 172000) 0 nil])
([nil nil ((3614 . 3617) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 3614) (undo-tree-id1173 . -1) 3615) nil (25558 16358 517837 319000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3615) (undo-tree-id1172 . -2) 3617) nil (25558 16358 517835 631000) 0 nil])
([nil nil ((3614 . 3616)) nil (25558 16358 517834 259000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1171 . -1) 3616) nil (25558 16358 517833 351000) 0 nil])
([nil nil ((3615 . 3621)) nil (25558 16358 517831 843000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1165 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -3616) (undo-tree-id1166 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3617) (undo-tree-id1167 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -3618) (undo-tree-id1168 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -3619) (undo-tree-id1169 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -3620) (undo-tree-id1170 . -1) 3621) nil (25558 16358 517830 380000) 0 nil])
([nil nil ((3615 . 3617)) nil (25558 16358 517823 791000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1163 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3616) (undo-tree-id1164 . -1) 3617) nil (25558 16358 517822 839000) 0 nil])
([nil nil ((3615 . 3625)) nil (25558 16358 517820 608000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1153 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3616) (undo-tree-id1154 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3617) (undo-tree-id1155 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3618) (undo-tree-id1156 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -3619) (undo-tree-id1157 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -3620) (undo-tree-id1158 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3621) (undo-tree-id1159 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3622) (undo-tree-id1160 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -3623) (undo-tree-id1161 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3624) (undo-tree-id1162 . -1) 3625) nil (25558 16358 517818 451000) 0 nil])
([nil nil ((3615 . 3621)) nil (25558 16358 517810 549000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1147 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3616) (undo-tree-id1148 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3617) (undo-tree-id1149 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -3618) (undo-tree-id1150 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3619) (undo-tree-id1151 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -3620) (undo-tree-id1152 . -1) 3621) nil (25558 16358 517809 159000) 0 nil])
([nil nil ((3615 . 3620)) nil (25558 16358 517804 83000) 0 nil])
([nil nil ((3615 . 3621) (#("int8_" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -3615) (undo-tree-id1146 . -5) 3620) nil (25558 16358 517803 142000) 0 nil])
([nil nil ((3621 . 3623)) nil (25558 16358 517801 433000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -3622) (undo-tree-id1145 . -1) 3623) nil (25558 16358 517800 458000) 0 nil])
([nil nil ((3622 . 3629)) nil (25558 16358 517797 112000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -3628) (undo-tree-id1144 . -1) 3629) nil (25558 16358 517795 675000) 0 nil])
([nil nil ((3628 . 3630)) nil (25558 16358 517786 895000) 0 nil])
([nil nil ((3630 . 3631)) nil (25558 16358 517782 493000) 0 nil])
([nil nil ((3717 . 3723) (t 25558 16358 615196 279000)) nil (25558 16369 135987 327000) 0 nil])
([nil nil ((3723 . 3725)) nil (25558 16369 135985 699000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3724) (undo-tree-id1175 . -1) 3725) nil (25558 16369 135981 938000) 0 nil])
([nil nil ((#("Regex_StrictWordEqual();" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 3724) (undo-tree-id1181 . -24) (undo-tree-id1182 . -24) (undo-tree-id1183 . -24) (undo-tree-id1184 . -23) (undo-tree-id1185 . -24) 3748 (t 25558 16369 227132 268000)) nil (25558 16376 215851 897000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3747 . 3748) (nil fontified nil 3747 . 3748) (nil fontified nil 3746 . 3747) (nil fontified nil 3745 . 3746) (nil fontified nil 3744 . 3745) (nil fontified nil 3743 . 3744) (nil fontified nil 3742 . 3743) (nil fontified nil 3741 . 3742) (nil fontified nil 3740 . 3741) (nil fontified nil 3739 . 3740) (nil fontified nil 3738 . 3739) (nil fontified nil 3737 . 3738) (nil fontified nil 3736 . 3737) (nil fontified nil 3735 . 3736) (nil fontified nil 3734 . 3735) (nil fontified nil 3733 . 3734) (nil fontified nil 3732 . 3733) (nil fontified nil 3731 . 3732) (nil fontified nil 3730 . 3731) (nil fontified nil 3729 . 3730) (nil fontified nil 3728 . 3729) (nil fontified nil 3727 . 3728) (nil fontified nil 3726 . 3727) (nil fontified nil 3725 . 3726) (nil fontified nil 3724 . 3725) (3724 . 3748)) nil (25558 16376 215846 60000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -3747) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#(" " 0 1 (fontified t ws-butler-chg delete)) . -3748) (undo-tree-id1180 . -1) 3749) nil (25558 16376 215837 695000) 0 nil])
([nil nil ((3721 . 3722) (t 25558 16376 315089 728000)) nil (25558 16383 245900 21000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3723) (undo-tree-id1186 . -1) 3724) nil (25558 16383 245895 748000) 0 nil])
([nil nil ((3780 . 3782) (t 25558 16383 339047 740000)) nil (25558 16386 849763 721000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3805 . 3806) (nil fontified nil 3805 . 3806) (nil fontified nil 3804 . 3805) (nil fontified nil 3803 . 3804) (nil fontified nil 3802 . 3803) (nil fontified nil 3801 . 3802) (nil fontified nil 3800 . 3801) (nil fontified nil 3799 . 3800) (nil fontified nil 3798 . 3799) (nil fontified nil 3797 . 3798) (nil fontified nil 3796 . 3797) (nil fontified nil 3795 . 3796) (nil fontified nil 3794 . 3795) (nil fontified nil 3793 . 3794) (nil fontified nil 3792 . 3793) (nil fontified nil 3791 . 3792) (nil fontified nil 3790 . 3791) (nil fontified nil 3789 . 3790) (nil fontified nil 3788 . 3789) (nil fontified nil 3787 . 3788) (nil fontified nil 3786 . 3787) (nil fontified nil 3785 . 3786) (nil fontified nil 3784 . 3785) (nil fontified nil 3783 . 3784) (nil fontified nil 3782 . 3783) (3782 . 3806)) nil (25558 16386 849758 252000) 0 nil])
([nil nil ((3782 . 3787) (t 25558 16386 947026 235000)) nil (25558 16393 496575 247000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t ws-butler-chg chg)) . -3786) (undo-tree-id1190 . -1) 3787) nil (25558 16393 496574 29000) 0 nil])
([nil nil ((3786 . 3787)) nil (25558 16393 496572 173000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3785) (undo-tree-id1188 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg)) . -3786) (undo-tree-id1189 . -1) 3787) nil (25558 16393 496570 886000) 0 nil])
([nil nil ((3785 . 3786)) nil (25558 16393 496568 114000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -3785) (undo-tree-id1187 . -1) 3786) nil (25558 16393 496566 123000) 0 nil])
([nil nil ((3785 . 3789)) nil (25558 16393 496553 367000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -3812) (undo-tree-id1202 . -1) 3813 (t 25558 16393 598986 701000)) nil (25558 16436 28211 294000) 0 nil])
([nil nil ((3812 . 3814)) nil (25558 16436 28209 675000) 0 nil])
([nil nil ((3812 . 3813)) nil (25558 16436 28209 37000) 0 nil])
([nil nil ((3814 . 3815)) nil (25558 16436 28208 361000) 0 nil])
([nil nil ((3814 . 3817)) nil (25558 16436 28207 701000) 0 nil])
([nil nil ((3815 . 3818) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3815) (undo-tree-id1201 . -2) 3817) nil (25558 16436 28206 879000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 3816) (undo-tree-id1200 . -2) 3818) nil (25558 16436 28204 768000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3815) (undo-tree-id1199 . -1) 3816) nil (25558 16436 28203 284000) 0 nil])
([nil nil ((3815 . 3823)) nil (25558 16436 28201 775000) 0 nil])
([nil nil ((3823 . 3824)) nil (25558 16436 28201 79000) 0 nil])
([nil nil ((3824 . 3825)) nil (25558 16436 28200 427000) 0 nil])
([nil nil ((3814 . 3817)) nil (25558 16436 28199 785000) 0 nil])
([nil nil ((3815 . 3818) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3815) (undo-tree-id1198 . -2) 3817) nil (25558 16436 28198 912000) 0 nil])
([nil nil ((3816 . 3819) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3816) (undo-tree-id1197 . -2) 3818) nil (25558 16436 28197 235000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3816) (undo-tree-id1194 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3817) (undo-tree-id1195 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3818) (undo-tree-id1196 . -1) 3819) nil (25558 16436 28195 345000) 0 nil])
([nil nil ((3816 . 3817)) nil (25558 16436 28192 487000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3815) (undo-tree-id1192 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3816) (undo-tree-id1193 . -1) 3817) nil (25558 16436 28191 215000) 0 nil])
([nil nil ((3815 . 3824)) nil (25558 16436 28188 348000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -3823) (undo-tree-id1191 . -1) 3824) nil (25558 16436 28186 455000) 0 nil])
([nil nil ((3823 . 3824)) nil (25558 16436 28174 66000) 0 nil])
([nil nil ((3824 . 3828) (t 25558 16436 122737 255000)) nil (25558 16476 787604 396000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3825) (undo-tree-id1222 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3826) (undo-tree-id1223 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3827) (undo-tree-id1224 . -1) 3828) nil (25558 16476 787602 969000) 0 nil])
([nil nil ((3815 . 3816)) nil (25558 16476 787587 407000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3816) (undo-tree-id1221 . -1) 3817) nil (25558 16476 787586 555000) 0 nil])
([nil nil ((3816 . 3817)) nil (25558 16476 787585 97000) 0 nil])
([nil nil ((3814 . 3817)) nil (25558 16476 787584 345000) 0 nil])
([nil nil ((3815 . 3818) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 3815) (undo-tree-id1220 . -2) 3817) nil (25558 16476 787583 391000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3815) (undo-tree-id1217 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3816) (undo-tree-id1218 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3817) (undo-tree-id1219 . -1) 3818) nil (25558 16476 787581 151000) 0 nil])
([nil nil ((3815 . 3816)) nil (25558 16476 787563 824000) 0 nil])
([nil nil ((3746 . 3747)) nil (25558 16476 787563 85000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -3746) (undo-tree-id1216 . -1) 3747) nil (25558 16476 787562 223000) 0 nil])
([nil nil ((3746 . 3747)) nil (25558 16476 787560 663000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3746) (undo-tree-id1215 . -1) 3747) nil (25558 16476 787559 740000) 0 nil])
([nil nil ((3746 . 3750)) nil (25558 16476 787558 208000) 0 nil])
([nil nil ((3750 . 3751)) nil (25558 16476 787557 453000) 0 nil])
([nil nil ((3751 . 3758)) nil (25558 16476 787556 628000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3756) (undo-tree-id1213 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -3757) (undo-tree-id1214 . -1) 3758) nil (25558 16476 787555 560000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3752) (undo-tree-id1209 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3753) (undo-tree-id1210 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3754) (undo-tree-id1211 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -3755) (undo-tree-id1212 . -1) 3756) nil (25558 16476 787552 104000) 0 nil])
([nil nil ((3752 . 3753)) nil (25558 16476 787547 692000) 0 nil])
([nil nil ((3753 . 3754)) nil (25558 16476 787546 988000) 0 nil])
([nil nil ((#("char* a," 0 1 (fontified t ws-butler-chg chg face font-lock-type-face) 1 2 (fontified t ws-butler-chg chg face font-lock-type-face) 2 3 (fontified t ws-butler-chg chg face font-lock-type-face) 3 4 (fontified t ws-butler-chg chg face font-lock-type-face) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 7 8 (fontified t ws-butler-chg chg)) . 3746) (undo-tree-id1203 . -8) (undo-tree-id1204 . -8) (undo-tree-id1205 . -8) (undo-tree-id1206 . -8) (undo-tree-id1207 . -8) (undo-tree-id1208 . -8)) nil (25558 16476 787545 680000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3753 . 3754) (nil fontified nil 3753 . 3754) (nil fontified nil 3752 . 3753) (nil fontified nil 3751 . 3752) (nil fontified nil 3750 . 3751) (nil fontified nil 3749 . 3750) (nil fontified nil 3748 . 3749) (nil fontified nil 3747 . 3748) (nil fontified nil 3746 . 3747) (3746 . 3754)) nil (25558 16476 787521 36000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3761 . 3762) (nil fontified nil 3761 . 3762) (nil fontified nil 3760 . 3761) (nil fontified nil 3759 . 3760) (nil fontified nil 3758 . 3759) (nil fontified nil 3757 . 3758) (nil fontified nil 3756 . 3757) (nil fontified nil 3755 . 3756) (nil fontified nil 3754 . 3755) (3754 . 3762)) nil (25558 16476 787518 171000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . 3831) 3762) nil (25558 16476 787497 493000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -3760) (undo-tree-id1226 . -1) 3761 (t 25558 16476 878503 239000)) nil (25558 16478 646087 672000) 0 nil])
([nil nil ((3760 . 3761)) nil (25558 16478 646085 117000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t ws-butler-chg delete)) . -3761) (undo-tree-id1225 . -1) 3762) nil (25558 16478 646080 695000) 0 nil])
([nil nil ((#("char* a,char* b" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t rear-nonsticky t) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t face font-lock-variable-name-face)) . 3746) (undo-tree-id1227 . -15) (undo-tree-id1228 . -15) (undo-tree-id1229 . -15) (undo-tree-id1230 . -15) 3761 (t 25558 16478 730492 714000)) nil (25558 16491 29235 288000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3760 . 3761) (nil fontified nil 3760 . 3761) (nil fontified nil 3759 . 3760) (nil fontified nil 3758 . 3759) (nil fontified nil 3757 . 3758) (nil fontified nil 3756 . 3757) (nil fontified nil 3755 . 3756) (nil fontified nil 3754 . 3755) (nil fontified nil 3753 . 3754) (nil fontified nil 3752 . 3753) (nil fontified nil 3751 . 3752) (nil fontified nil 3750 . 3751) (nil fontified nil 3749 . 3750) (nil fontified nil 3748 . 3749) (nil fontified nil 3747 . 3748) (nil fontified nil 3746 . 3747) (3746 . 3761)) nil (25558 16491 29222 69000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3840 . 3841) (nil fontified nil 3840 . 3841) (nil fontified nil 3839 . 3840) (nil fontified nil 3838 . 3839) (nil fontified nil 3837 . 3838) (nil fontified nil 3836 . 3837) (nil fontified nil 3835 . 3836) (nil fontified nil 3834 . 3835) (nil fontified nil 3833 . 3834) (nil fontified nil 3832 . 3833) (nil fontified nil 3831 . 3832) (nil fontified nil 3830 . 3831) (nil fontified nil 3829 . 3830) (nil fontified nil 3828 . 3829) (nil fontified nil 3827 . 3828) (nil fontified nil 3826 . 3827) (3826 . 3841)) nil (25558 16491 29214 684000) 0 nil])
([nil nil ((3856 . 3857) (t 25558 16491 122422 542000)) nil (25558 16584 526707 488000) 0 nil])
([nil nil ((3845 . 3850)) nil (25558 16584 526706 508000) 0 nil])
([nil nil ((3846 . 3853) (#("strn" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -3846) (undo-tree-id1233 . -4) 3850) nil (25558 16584 526705 475000) 0 nil])
([nil nil ((3853 . 3855)) nil (25558 16584 526703 624000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -3849) (undo-tree-id1232 . -1) 3850) nil (25558 16584 526702 168000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3856) (undo-tree-id1231 . -1) 3857) nil (25558 16584 526696 639000) 0 nil])
([nil nil ((3853 . 3854) (t 25558 16584 605905 689000)) nil (25558 16598 147556 46000) 0 nil])
([nil nil ((3854 . 3855)) nil (25558 16598 147554 908000) 0 nil])
([nil nil ((3855 . 3856)) nil (25558 16598 147553 576000) 0 nil])
([nil nil ((3857 . 3858)) nil (25558 16598 147548 168000) 0 nil])
([nil nil ((3846 . 3848) (t 25558 16598 245831 997000)) nil (25558 16628 61573 544000) 0 nil])
([nil nil ((3848 . 3849)) nil (25558 16628 61572 741000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -3860) (undo-tree-id1239 . -1) 3861) nil (25558 16628 61571 957000) 0 nil])
([nil nil ((3860 . 3863)) nil (25558 16628 61570 549000) 0 nil])
([nil nil ((3863 . 3864)) nil (25558 16628 61569 763000) 0 nil])
([nil nil ((3864 . 3873)) nil (25558 16628 61569 100000) 0 nil])
([nil nil ((3873 . 3874)) nil (25558 16628 61568 340000) 0 nil])
([nil nil ((3876 . 3877)) nil (25558 16628 61567 547000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg)) . -3876) (undo-tree-id1238 . -1) 3877) nil (25558 16628 61566 682000) 0 nil])
([nil nil ((#("return 1;" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 3876)) nil (25558 16628 61565 59000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3864) (undo-tree-id1237 . -1) 3865) nil (25558 16628 61564 222000) 0 nil])
([nil nil ((3864 . 3865)) nil (25558 16628 61562 705000) 0 nil])
([nil nil ((3874 . 3875)) nil (25558 16628 61561 978000) 0 nil])
([nil nil ((3875 . 3876)) nil (25558 16628 61561 224000) 0 nil])
([nil nil ((3865 . 3866)) nil (25558 16628 61560 346000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3878) (undo-tree-id1236 . -1) 3879) nil (25558 16628 61558 765000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -3878) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) 3879) nil (25558 16628 61553 787000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Op Code Functions End
" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 37 (c-in-sws t fontified t face font-lock-comment-face) 37 41 (c-in-sws t fontified t face font-lock-comment-face) 41 90 (c-in-sws t fontified t face font-lock-comment-face) 90 91 (c-in-sws t fontified t face font-lock-comment-face)) . 3454) (undo-tree-id1240 . -91) (t 25558 16628 145671 826000)) nil (25558 19763 798224 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3544 . 3545) (nil fontified nil 3544 . 3545) (nil fontified nil 3495 . 3544) (nil fontified nil 3491 . 3495) (nil fontified nil 3457 . 3491) (nil fontified nil 3455 . 3457) (nil fontified nil 3454 . 3455) (3454 . 3545)) nil (25558 19763 798212 921000) 0 nil])
([nil nil ((3545 . 3547) (t 25558 19763 897453 469000)) nil (25558 19765 241081 584000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3637 . 3638) (nil fontified nil 3637 . 3638) (nil fontified nil 3588 . 3637) (nil fontified nil 3584 . 3588) (nil fontified nil 3550 . 3584) (nil fontified nil 3548 . 3550) (nil fontified nil 3547 . 3548) (3547 . 3638)) nil (25558 19765 241076 372000) 0 nil])
([nil nil ((#("O" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3616) (undo-tree-id1241 . -1) (#("p" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3617) (undo-tree-id1242 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3618) (undo-tree-id1243 . -1) (#("C" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3619) (undo-tree-id1244 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3620) (undo-tree-id1245 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3621) (undo-tree-id1246 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3622) (undo-tree-id1247 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3623) (undo-tree-id1248 . -1) (#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3624) (undo-tree-id1249 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3625) (undo-tree-id1250 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3626) (undo-tree-id1251 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3627) (undo-tree-id1252 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3628) (undo-tree-id1253 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3629) (undo-tree-id1254 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3630) (undo-tree-id1255 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3631) (undo-tree-id1256 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3632) (undo-tree-id1257 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3633) (undo-tree-id1258 . -1) (#("E" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3634) (undo-tree-id1259 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3635) (undo-tree-id1260 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -3636) (undo-tree-id1261 . -1) 3637 (t 25558 19765 333455 569000)) nil (25558 19771 811884 39000) 0 nil])
([nil nil ((3616 . 3627)) nil (25558 19771 811855 167000) 0 nil])
([nil nil ((#("// ----------------------------------------------------------------- Tests Start
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 37 (c-in-sws t fontified t face font-lock-comment-face) 37 41 (c-in-sws t fontified t face font-lock-comment-face) 41 69 (c-in-sws t fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face c-in-sws t) 70 71 (fontified t face font-lock-comment-face c-in-sws t) 71 72 (fontified t face font-lock-comment-face c-in-sws t) 72 73 (fontified t face font-lock-comment-face c-in-sws t) 73 74 (fontified t face font-lock-comment-face c-in-sws t) 74 75 (fontified t face font-lock-comment-face c-in-sws t) 75 76 (fontified t face font-lock-comment-face c-in-sws t) 76 77 (fontified t face font-lock-comment-face c-in-sws t) 77 78 (fontified t face font-lock-comment-face c-in-sws t) 78 79 (fontified t face font-lock-comment-face c-in-sws t) 79 80 (fontified t face font-lock-comment-face c-in-sws t) 80 81 (fontified t rear-nonsticky t face font-lock-comment-face c-in-sws t)) . 3547) (undo-tree-id1262 . -80) (undo-tree-id1263 . -80) (undo-tree-id1264 . -80) (undo-tree-id1265 . -81) (t 25558 19771 909464 935000)) nil (25558 19778 670852 768000) 0 nil])
([nil nil ((nil fontified nil 3627 . 3628) (nil fontified nil 3626 . 3627) (nil fontified nil 3625 . 3626) (nil fontified nil 3624 . 3625) (nil fontified nil 3623 . 3624) (nil fontified nil 3622 . 3623) (nil fontified nil 3621 . 3622) (nil fontified nil 3620 . 3621) (nil fontified nil 3619 . 3620) (nil fontified nil 3618 . 3619) (nil fontified nil 3617 . 3618) (nil fontified nil 3616 . 3617) (nil fontified nil 3588 . 3616) (nil fontified nil 3584 . 3588) (nil fontified nil 3550 . 3584) (nil fontified nil 3548 . 3550) (nil fontified nil 3547 . 3548) (3547 . 3628)) nil (25558 19778 670762 950000) 0 nil])
([nil nil ((3974 . 3976) (t 25558 19778 765474 242000)) nil (25558 19781 591992 414000) 0 nil])
([nil nil ((nil fontified nil 4056 . 4057) (nil fontified nil 4055 . 4056) (nil fontified nil 4054 . 4055) (nil fontified nil 4053 . 4054) (nil fontified nil 4052 . 4053) (nil fontified nil 4051 . 4052) (nil fontified nil 4050 . 4051) (nil fontified nil 4049 . 4050) (nil fontified nil 4048 . 4049) (nil fontified nil 4047 . 4048) (nil fontified nil 4046 . 4047) (nil fontified nil 4045 . 4046) (nil fontified nil 4017 . 4045) (nil fontified nil 4013 . 4017) (nil fontified nil 3979 . 4013) (nil fontified nil 3977 . 3979) (nil fontified nil 3976 . 3977) (3976 . 4057)) nil (25558 19781 591987 267000) 0 nil])
([nil nil ((4051 . 4054) (t 25558 19781 697478 84000)) nil (25558 19791 829239 285000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -4051) (undo-tree-id1278 . -1) (#("N" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4052) (undo-tree-id1279 . -1) (#("D" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4053) (undo-tree-id1280 . -1) 4054) nil (25558 19791 829237 989000) 0 nil])
([nil nil ((4051 . 4053)) nil (25558 19791 829235 322000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4051) (undo-tree-id1276 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4052) (undo-tree-id1277 . -1) 4053) nil (25558 19791 829234 348000) 0 nil])
([nil nil ((4051 . 4054)) nil (25558 19791 829232 154000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4052) (undo-tree-id1274 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4053) (undo-tree-id1275 . -1) 4054) nil (25558 19791 829231 24000) 0 nil])
([nil nil ((4052 . 4054)) nil (25558 19791 829228 721000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -4052) (undo-tree-id1272 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -4053) (undo-tree-id1273 . -1) 4054) nil (25558 19791 829227 784000) 0 nil])
([nil nil ((4052 . 4055)) nil (25558 19791 829225 236000) 0 nil])
([nil nil ((#("Start" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face)) . 4055) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5)) nil (25558 19791 829223 782000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 4054) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) 4055) nil (25558 19791 829216 671000) 0 nil])
([nil nil ((4054 . 4055) 4055 (t 25558 19791 917490 851000)) nil (25558 19793 742014 718000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3878) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) 3879 (t 25558 19791 917490 851000)) nil (25558 19793 742012 803000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 4053) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) 3878) nil (25558 19793 742006 962000) 0 nil])
([nil nil ((3878 . 3879) (t 25558 19793 845493 146000)) nil (25558 19794 499336 898000) 0 nil])
([nil nil ((3865 . 3870) (t 25558 19794 697494 149000)) nil (25558 19810 697352 483000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -3865) (undo-tree-id1293 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3866) (undo-tree-id1294 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -3867) (undo-tree-id1295 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -3868) (undo-tree-id1296 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -3869) (undo-tree-id1297 . -1) 3870) nil (25558 19810 697350 850000) 0 nil])
([nil nil ((3865 . 3867)) nil (25558 19810 697346 394000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -3865) (undo-tree-id1291 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -3866) (undo-tree-id1292 . -1) 3867) nil (25558 19810 697345 340000) 0 nil])
([nil nil ((3865 . 3872)) nil (25558 19810 697340 845000) 0 nil])
([nil nil ((3872 . 3873)) nil (25558 19810 697340 150000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg chg)) . -3872) (undo-tree-id1290 . -1) 3873) nil (25558 19810 697339 283000) 0 nil])
([nil nil ((3872 . 3875)) nil (25558 19810 697337 783000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3871) (undo-tree-id1286 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -3872) (undo-tree-id1287 . -1) (#("1" 0 1 (fontified t ws-butler-chg chg)) . -3873) (undo-tree-id1288 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3874) (undo-tree-id1289 . -1) 3875) nil (25558 19810 697335 801000) 0 nil])
([nil nil ((3871 . 3875)) nil (25558 19810 697324 889000) 0 nil])
([nil nil ((3875 . 3876)) nil (25558 19810 697323 569000) 0 nil])
([nil nil ((3876 . 3877)) nil (25558 19810 697319 231000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3876) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) 3877 (t 25558 19810 793511 853000)) nil (25558 19811 910940 324000) 0 nil])
([nil nil ((3876 . 3877) (t 25558 19812 9513 95000)) nil (25558 19813 613140 286000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3876) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) 3877) nil (25558 19813 613135 987000) 0 nil])
([nil nil ((3886 . 3888) (t 25558 19813 737514 835000)) nil (25558 19820 172646 925000) 0 nil])
([nil nil ((3888 . 3902)) nil (25558 19820 172645 297000) 0 nil])
([nil nil ((3902 . 3903)) nil (25558 19820 172640 491000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3888) (undo-tree-id1303 . -1) 3889 (t 25558 19820 269521 173000)) nil (25558 19821 497310 9000) 0 nil])
([nil nil ((#("int8_t Regex_TestStrictWord(Regex_Operation operation,char* word)
" 0 1 (c-is-sws t fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t face font-lock-function-name-face) 27 28 (fontified t c-type c-decl-arg-start) 28 43 (fontified t face font-lock-type-face) 43 44 (fontified t) 44 53 (fontified t face font-lock-variable-name-face) 53 54 (fontified t c-type c-decl-arg-start) 54 55 (fontified t face font-lock-type-face) 55 56 (fontified t face font-lock-type-face) 56 57 (fontified t face font-lock-type-face) 57 58 (fontified t face font-lock-type-face) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t face font-lock-variable-name-face) 61 62 (fontified t face font-lock-variable-name-face) 62 63 (fontified t face font-lock-variable-name-face) 63 64 (fontified t face font-lock-variable-name-face) 64 65 (fontified t) 65 66 (fontified t)) . 3629) (undo-tree-id1304 . -28) (undo-tree-id1305 . -54) (undo-tree-id1306 . -54) (undo-tree-id1307 . -65) (undo-tree-id1308 . -66) (t 25558 19821 589522 406000)) nil (25558 19872 390426 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3694 . 3695) (nil fontified nil 3694 . 3695) (nil fontified nil 3693 . 3694) (nil fontified nil 3692 . 3693) (nil fontified nil 3691 . 3692) (nil fontified nil 3690 . 3691) (nil fontified nil 3689 . 3690) (nil fontified nil 3688 . 3689) (nil fontified nil 3687 . 3688) (nil fontified nil 3686 . 3687) (nil fontified nil 3685 . 3686) (nil fontified nil 3684 . 3685) (nil fontified nil 3683 . 3684) (nil fontified nil 3682 . 3683) (nil fontified nil 3673 . 3682) (nil fontified nil 3672 . 3673) (nil fontified nil 3657 . 3672) (nil fontified nil 3656 . 3657) (nil fontified nil 3655 . 3656) (nil fontified nil 3654 . 3655) (nil fontified nil 3653 . 3654) (nil fontified nil 3652 . 3653) (nil fontified nil 3651 . 3652) (nil fontified nil 3650 . 3651) (nil fontified nil 3649 . 3650) (nil fontified nil 3648 . 3649) (nil fontified nil 3647 . 3648) (nil fontified nil 3646 . 3647) (nil fontified nil 3645 . 3646) (nil fontified nil 3644 . 3645) (nil fontified nil 3643 . 3644) (nil fontified nil 3642 . 3643) (nil fontified nil 3641 . 3642) (nil fontified nil 3640 . 3641) (nil fontified nil 3639 . 3640) (nil fontified nil 3638 . 3639) (nil fontified nil 3637 . 3638) (nil fontified nil 3636 . 3637) (nil fontified nil 3635 . 3636) (nil fontified nil 3634 . 3635) (nil fontified nil 3633 . 3634) (nil fontified nil 3632 . 3633) (nil fontified nil 3631 . 3632) (nil fontified nil 3630 . 3631) (nil fontified nil 3629 . 3630) (3629 . 3695)) nil (25558 19872 390410 606000) 0 nil])
([nil nil ((#("int8_t Regex_StrictWordEqual(char* a,char* b)
{
 if(strcmp(a,b)==0){ return 1; }

 return 0;
}
" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t face font-lock-function-name-face) 26 27 (fontified t face font-lock-function-name-face) 27 28 (fontified t face font-lock-function-name-face) 28 29 (fontified t c-type c-decl-arg-start) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t face font-lock-type-face) 31 32 (fontified t face font-lock-type-face) 32 33 (fontified t face font-lock-type-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (rear-nonsticky t fontified t c-type c-decl-arg-start) 37 38 (fontified t face font-lock-type-face) 38 39 (fontified t face font-lock-type-face) 39 40 (fontified t face font-lock-type-face) 40 41 (fontified t face font-lock-type-face) 41 42 (fontified t) 42 43 (fontified t) 43 44 (rear-nonsticky t fontified t face font-lock-variable-name-face) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t face font-lock-keyword-face) 50 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 55 (fontified t) 55 56 (fontified t) 56 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t face font-lock-keyword-face) 70 71 (fontified t face font-lock-keyword-face) 71 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t face font-lock-keyword-face) 73 74 (fontified t face font-lock-keyword-face) 74 75 (fontified t face font-lock-keyword-face) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t face font-lock-keyword-face) 84 85 (fontified t face font-lock-keyword-face) 85 86 (fontified t face font-lock-keyword-face) 86 87 (fontified t face font-lock-keyword-face) 87 88 (fontified t face font-lock-keyword-face) 88 89 (fontified t face font-lock-keyword-face) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t)) . 3907) (undo-tree-id1309 . -95) (undo-tree-id1310 . -95) 4002 (t 25558 19872 473558 638000)) nil (25558 19927 666020 62000) 0 nil])
([nil nil ((3990 . 3992) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3990) (3955 . 3957) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . 3955) (nil rear-nonsticky nil 4001 . 4002) (nil fontified nil 4001 . 4002) (nil fontified nil 4000 . 4001) (nil fontified nil 3999 . 4000) (nil fontified nil 3998 . 3999) (nil fontified nil 3997 . 3998) (nil fontified nil 3996 . 3997) (nil fontified nil 3995 . 3996) (nil fontified nil 3994 . 3995) (nil fontified nil 3993 . 3994) (nil fontified nil 3992 . 3993) (nil fontified nil 3991 . 3992) (nil fontified nil 3990 . 3991) (nil fontified nil 3989 . 3990) (nil fontified nil 3988 . 3989) (nil fontified nil 3987 . 3988) (nil fontified nil 3986 . 3987) (nil fontified nil 3985 . 3986) (nil fontified nil 3984 . 3985) (nil fontified nil 3983 . 3984) (nil fontified nil 3982 . 3983) (nil fontified nil 3981 . 3982) (nil fontified nil 3980 . 3981) (nil fontified nil 3979 . 3980) (nil fontified nil 3978 . 3979) (nil fontified nil 3977 . 3978) (nil fontified nil 3976 . 3977) (nil fontified nil 3975 . 3976) (nil fontified nil 3974 . 3975) (nil fontified nil 3973 . 3974) (nil fontified nil 3972 . 3973) (nil fontified nil 3971 . 3972) (nil fontified nil 3970 . 3971) (nil fontified nil 3969 . 3970) (nil fontified nil 3968 . 3969) (nil fontified nil 3967 . 3968) (nil fontified nil 3966 . 3967) (nil fontified nil 3965 . 3966) (nil fontified nil 3963 . 3965) (nil fontified nil 3962 . 3963) (nil fontified nil 3959 . 3962) (nil fontified nil 3958 . 3959) (nil fontified nil 3957 . 3958) (nil fontified nil 3956 . 3957) (nil fontified nil 3955 . 3956) (nil fontified nil 3954 . 3955) (nil fontified nil 3953 . 3954) (nil fontified nil 3952 . 3953) (nil fontified nil 3951 . 3952) (nil fontified nil 3950 . 3951) (nil fontified nil 3949 . 3950) (nil fontified nil 3948 . 3949) (nil fontified nil 3947 . 3948) (nil fontified nil 3946 . 3947) (nil fontified nil 3945 . 3946) (nil fontified nil 3944 . 3945) (nil fontified nil 3943 . 3944) (nil fontified nil 3942 . 3943) (nil fontified nil 3941 . 3942) (nil fontified nil 3940 . 3941) (nil fontified nil 3939 . 3940) (nil fontified nil 3938 . 3939) (nil fontified nil 3937 . 3938) (nil fontified nil 3936 . 3937) (nil fontified nil 3935 . 3936) (nil fontified nil 3934 . 3935) (nil fontified nil 3933 . 3934) (nil fontified nil 3932 . 3933) (nil fontified nil 3931 . 3932) (nil fontified nil 3930 . 3931) (nil fontified nil 3929 . 3930) (nil fontified nil 3928 . 3929) (nil fontified nil 3927 . 3928) (nil fontified nil 3926 . 3927) (nil fontified nil 3925 . 3926) (nil fontified nil 3924 . 3925) (nil fontified nil 3923 . 3924) (nil fontified nil 3922 . 3923) (nil fontified nil 3921 . 3922) (nil fontified nil 3920 . 3921) (nil fontified nil 3919 . 3920) (nil fontified nil 3918 . 3919) (nil fontified nil 3917 . 3918) (nil fontified nil 3916 . 3917) (nil fontified nil 3915 . 3916) (nil fontified nil 3914 . 3915) (nil fontified nil 3913 . 3914) (nil fontified nil 3912 . 3913) (nil fontified nil 3911 . 3912) (nil fontified nil 3910 . 3911) (nil fontified nil 3909 . 3910) (nil fontified nil 3908 . 3909) (nil fontified nil 3907 . 3908) (3907 . 4002)) nil (25558 19927 666003 36000) 0 nil])
([nil nil ((893 . 894) (t 25558 19927 797574 513000)) nil (25558 19999 275649 959000) 0 nil])
([nil nil ((965 . 966)) nil (25558 19999 275644 905000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1095) (undo-tree-id1311 . -1) 1096 (t 25558 19999 365562 685000)) nil (25558 20003 420979 252000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1010) (undo-tree-id1312 . -1) 1011 (t 25558 20003 553560 954000)) nil (25558 20006 621743 690000) 0 nil])
([nil nil ((3715 . 3724) (t 25558 20006 721559 572000)) nil (25558 20076 250448 418000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -3720) (undo-tree-id1314 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -3721) (undo-tree-id1315 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -3722) (undo-tree-id1316 . -1) (#("ü" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -3723) (undo-tree-id1317 . -1) 3724) nil (25558 20076 250446 831000) 0 nil])
([nil nil ((3720 . 3723)) nil (25558 20076 250442 403000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-function-name-face)) . -3722) (undo-tree-id1313 . -1) 3723) nil (25558 20076 250440 971000) 0 nil])
([nil nil ((3722 . 3730)) nil (25558 20076 250432 838000) 0 nil])
([nil nil ((3730 . 3735)) nil (25558 20076 250431 507000) 0 nil])
([nil nil ((3735 . 3736)) nil (25558 20076 250426 664000) 0 nil])
([nil nil ((3735 . 3737) (t 25558 20076 341514 289000)) nil (25558 20115 60904 854000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3764) (undo-tree-id1345 . -1) 3765) nil (25558 20115 60903 950000) 0 nil])
([nil nil ((3764 . 3772)) nil (25558 20115 60902 494000) 0 nil])
([nil nil ((3764 . 3779) (#("op_code_" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg)) . -3764) (undo-tree-id1344 . -8) 3772) nil (25558 20115 60901 404000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3816) (undo-tree-id1343 . -1) 3817) nil (25558 20115 60899 608000) 0 nil])
([nil nil ((3816 . 3819)) nil (25558 20115 60898 75000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -3816) (undo-tree-id1340 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -3817) (undo-tree-id1341 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -3818) (undo-tree-id1342 . -1) 3819) nil (25558 20115 60896 827000) 0 nil])
([nil nil ((3816 . 3817)) nil (25558 20115 60894 33000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -3816) (undo-tree-id1339 . -1) 3817) nil (25558 20115 60893 127000) 0 nil])
([nil nil ((3816 . 3823)) nil (25558 20115 60891 628000) 0 nil])
([nil nil ((3816 . 3831) (#("op_code" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -3816) (undo-tree-id1338 . -7) 3823) nil (25558 20115 60890 700000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3888) (undo-tree-id1331 . -1) (#("h" 0 1 (fontified t)) . -3889) (undo-tree-id1332 . -1) (#("a" 0 1 (fontified t)) . -3890) (undo-tree-id1333 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -3891) (undo-tree-id1334 . -1) (#("*" 0 1 (fontified t)) . -3892) (undo-tree-id1335 . -1) (#(" " 0 1 (fontified t)) . -3893) (undo-tree-id1336 . -1) (#("b" 0 1 (rear-nonsticky t fontified t face font-lock-variable-name-face)) . -3894) (undo-tree-id1337 . -1) 3895) nil (25558 20115 60888 1000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3880) (undo-tree-id1324 . -1) (#("h" 0 1 (fontified t)) . -3881) (undo-tree-id1325 . -1) (#("a" 0 1 (fontified t)) . -3882) (undo-tree-id1326 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -3883) (undo-tree-id1327 . -1) (#("*" 0 1 (fontified t)) . -3884) (undo-tree-id1328 . -1) (#(" " 0 1 (fontified t)) . -3885) (undo-tree-id1329 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -3886) (undo-tree-id1330 . -1) 3887) nil (25558 20115 60880 962000) 0 nil])
([nil nil ((3880 . 3882)) nil (25558 20115 60873 325000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -3880) (undo-tree-id1322 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -3881) (undo-tree-id1323 . -1) 3882) nil (25558 20115 60872 320000) 0 nil])
([nil nil ((3880 . 3884)) nil (25558 20115 60869 948000) 0 nil])
([nil nil ((3885 . 3889)) nil (25558 20115 60869 229000) 0 nil])
([nil nil ((3885 . 3894) (#("oper" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -3885) (undo-tree-id1321 . -4) 3889) nil (25558 20115 60868 319000) 0 nil])
([nil nil ((3894 . 3898)) nil (25558 20115 60866 582000) 0 nil])
([nil nil ((3895 . 3903) (#("arg" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -3895) (undo-tree-id1320 . -3) 3898) nil (25558 20115 60865 498000) 0 nil])
([nil nil ((3903 . 3905)) nil (25558 20115 60863 598000) 0 nil])
([nil nil ((3904 . 3909)) nil (25558 20115 60862 490000) 0 nil])
([nil nil ((3904 . 3919) (#("op_co" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -3904) (undo-tree-id1318 . -5) (undo-tree-id1319 . -5) 3909) nil (25558 20115 60858 238000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -316) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (#("
" 0 1 (fontified t)) . -317) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) 318 (t 25558 20115 153477 468000)) nil (25558 20131 5770 681000) 0 nil])
([nil nil ((316 . 318)) nil (25558 20131 5762 258000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 317) (undo-tree-id1381 . -1) 318) nil (25558 20131 5761 345000) 0 nil])
([nil nil ((316 . 321)) nil (25558 20131 5759 584000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -317) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -318) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -319) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -320) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) 321) nil (25558 20131 5756 790000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 316) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) 317) nil (25558 20131 5735 836000) 0 nil])
([nil nil ((316 . 317) 317 (t 25558 20131 97460 128000)) nil (25558 20133 236887 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -316) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) 317 (t 25558 20131 97460 128000)) nil (25558 20133 236882 358000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -343) (undo-tree-id1397 . -1) (#("e" 0 1 (fontified t)) . -344) (undo-tree-id1398 . -1) (#("s" 0 1 (fontified t)) . -345) (undo-tree-id1399 . -1) (#("t" 0 1 (fontified t)) . -346) (undo-tree-id1400 . -1) 347 (t 25558 20133 333457 600000)) nil (25558 20139 862739 848000) 0 nil])
([nil nil ((343 . 348)) nil (25558 20139 862726 262000) 0 nil])
([nil nil ((348 . 353) (#(",NULL" 0 1 (fontified t) 1 5 (fontified t face font-lock-constant-face)) . 348) (t 25558 20139 977449 943000)) nil (25558 20167 483596 151000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -343) (undo-tree-id1412 . -1) (#("o" 0 1 (fontified t)) . -344) (undo-tree-id1413 . -1) (#("r" 0 1 (fontified t)) . -345) (undo-tree-id1414 . -1) (#("e" 0 1 (fontified t)) . -346) (undo-tree-id1415 . -1) (#("m" 0 1 (fontified t)) . -347) (undo-tree-id1416 . -1) 348) nil (25558 20167 483594 183000) 0 nil])
([nil nil ((343 . 346)) nil (25558 20167 483589 119000) 0 nil])
([nil nil ((343 . 352) (#("ope" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg)) . -343) (undo-tree-id1411 . -3) 346) nil (25558 20167 483587 728000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -353) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -354) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -355) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -356) (undo-tree-id1410 . -1) 357) nil (25558 20167 483581 723000) 0 nil])
([nil nil ((353 . 354) (t 25558 20167 577415 908000)) nil (25558 20196 713749 598000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -354) (undo-tree-id1417 . -1) (#("0" 0 1 (fontified t)) . -355) (undo-tree-id1418 . -1) 356) nil (25558 20196 713747 806000) 0 nil])
([nil nil ((343 . 348)) nil (25558 20196 713737 999000) 0 nil])
([nil nil ((348 . 349)) nil (25558 20196 713733 326000) 0 nil])
([nil nil ((349 . 350) (t 25558 20196 805376 130000)) nil (25558 20221 344133 596000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t ws-butler-chg chg)) . -349) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) 350) nil (25558 20221 344131 4000) 0 nil])
([nil nil ((349 . 350)) nil (25558 20221 344118 418000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3839) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) 3840 (t 25558 20221 441339 775000)) nil (25558 20250 981838 86000) 0 nil])
([nil nil ((3839 . 3840)) nil (25558 20250 981835 386000) 0 nil])
([nil nil ((3839 . 3845)) nil (25558 20250 981834 686000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -3843) (undo-tree-id1435 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3844) (undo-tree-id1436 . -1) 3845) nil (25558 20250 981833 659000) 0 nil])
([nil nil ((3968 . 3974)) nil (25558 20250 981831 462000) 0 nil])
([nil nil ((3969 . 3975) (#("     " 0 5 (fontified t ws-butler-chg chg)) . 3969) (undo-tree-id1433 . -5) (undo-tree-id1434 . -5) 3974) nil (25558 20250 981830 401000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -3969) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3970) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3971) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3972) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3973) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -3974) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 3975) nil (25558 20250 981826 149000) 0 nil])
([nil nil ((3969 . 3972)) nil (25558 20250 981799 176000) 0 nil])
([nil nil ((3972 . 3973)) nil (25558 20250 981794 656000) 0 nil])
([nil nil ((3848 . 3849) (t 25558 20251 73292 800000)) nil (25558 20252 649157 729000) 0 nil])
([nil nil ((3943 . 3944)) nil (25558 20252 649152 733000) 0 nil])
([nil nil ((#("u" 0 1 (c-is-sws t fontified t face font-lock-type-face)) . -4727) (undo-tree-id1440 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -4728) (undo-tree-id1441 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -4729) (undo-tree-id1442 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -4730) (undo-tree-id1443 . -1) (#("6" 0 1 (fontified t face font-lock-type-face)) . -4731) (undo-tree-id1444 . -1) (#("4" 0 1 (face font-lock-type-face fontified t)) . -4732) (undo-tree-id1445 . -1) 4733 (t 25558 20252 745290 44000)) nil (25558 20278 35957 802000) 0 nil])
([nil nil ((4727 . 4731)) nil (25558 20278 35942 899000) 0 nil])
([nil nil ((425 . 428) (t 25558 20278 161246 908000)) nil (25558 20309 677327 781000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -427) (undo-tree-id1452 . -1) 428) nil (25558 20309 677326 667000) 0 nil])
([nil nil ((427 . 433)) nil (25558 20309 677324 983000) 0 nil])
([nil nil ((433 . 435)) nil (25558 20309 677324 285000) 0 nil])
([nil nil ((435 . 436) (nil syntax-table nil 436 . 437) (nil syntax-table (1) 434 . 435) (434 . 435)) nil (25558 20309 677323 356000) 0 nil])
([nil nil ((435 . 440)) nil (25558 20309 677307 331000) 0 nil])
([nil nil ((435 . 436)) nil (25558 20309 677306 619000) 0 nil])
([nil nil ((443 . 444)) nil (25558 20309 677305 459000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -436) (undo-tree-id1447 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -437) (undo-tree-id1448 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -438) (undo-tree-id1449 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -439) (undo-tree-id1450 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -440) (undo-tree-id1451 . -1) 441) nil (25558 20309 677303 640000) 0 nil])
([nil nil ((436 . 441)) nil (25558 20309 677282 103000) 0 nil])
([nil nil ((441 . 444)) nil (25558 20309 677281 235000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -443) (undo-tree-id1446 . -1) 444) nil (25558 20309 677279 479000) 0 nil])
([nil nil ((446 . 448) (nil syntax-table nil 449 . 450) (nil syntax-table (1) 434 . 435) (443 . 446)) nil (25558 20309 677269 112000) 0 nil])
([nil nil ((445 . 456) (t 25558 20309 773189 990000)) nil (25558 20318 216035 451000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -451) (undo-tree-id1453 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -452) (undo-tree-id1454 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -453) (undo-tree-id1455 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -454) (undo-tree-id1456 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -455) (undo-tree-id1457 . -1) 456) nil (25558 20318 216033 146000) 0 nil])
([nil nil ((451 . 454)) nil (25558 20318 216021 601000) 0 nil])
([nil nil ((454 . 459)) nil (25558 20318 216016 827000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -451) (undo-tree-id1458 . -1) 452 (t 25558 20318 309174 28000)) nil (25558 20326 796082 876000) 0 nil])
([nil nil ((451 . 452)) nil (25558 20326 796071 490000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -449) (undo-tree-id1464 . -1) 450 (t 25558 20326 889157 738000)) nil (25558 20342 825614 116000) 0 nil])
([nil nil ((449 . 450)) nil (25558 20342 825612 300000) 0 nil])
([nil nil ((#("ü" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -449) (undo-tree-id1463 . -1) 450) nil (25558 20342 825611 46000) 0 nil])
([nil nil ((449 . 450)) nil (25558 20342 825608 737000) 0 nil])
([nil nil ((#("%p Trigger" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t ws-butler-chg chg face font-lock-string-face) 2 3 (fontified t ws-butler-chg delete face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . 448) (undo-tree-id1459 . -10) (undo-tree-id1460 . -2) (undo-tree-id1461 . -10) (undo-tree-id1462 . -10) 458) nil (25558 20342 825604 649000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -445) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -446) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -447) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) 448 (t 25558 20342 937126 627000)) nil (25558 20344 141641 554000) 0 nil])
([nil nil ((3772 . 3774) (#(" " 0 1 (fontified t)) . 3772) (undo-tree-id1491 . -1) 3773 (t 25558 20344 237124 69000)) nil (25558 20369 770364 708000) 0 nil])
([nil nil ((1310 . 1313) (t 25558 20369 869072 557000)) nil (25558 20469 100904 790000) 0 nil])
([nil nil ((1311 . 1314) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1311) (undo-tree-id1594 . -2) 1313) nil (25558 20469 100903 681000) 0 nil])
([nil nil ((1314 . 1316)) nil (25558 20469 100901 894000) 0 nil])
([nil nil ((1316 . 1318)) nil (25558 20469 100901 282000) 0 nil])
([nil nil ((1317 . 1324)) nil (25558 20469 100900 599000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1323) (undo-tree-id1593 . -1) 1324) nil (25558 20469 100899 687000) 0 nil])
([nil nil ((1323 . 1327)) nil (25558 20469 100898 199000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1326) (undo-tree-id1592 . -1) 1327) nil (25558 20469 100897 402000) 0 nil])
([nil nil ((1327 . 1329)) nil (25558 20469 100895 979000) 0 nil])
([nil nil ((1328 . 1329)) nil (25558 20469 100895 240000) 0 nil])
([nil nil ((1329 . 1331)) nil (25558 20469 100894 518000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -1329) (undo-tree-id1590 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1330) (undo-tree-id1591 . -1) 1331) nil (25558 20469 100893 484000) 0 nil])
([nil nil ((1329 . 1331)) nil (25558 20469 100891 394000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t ws-butler-chg chg)) . -1330) (undo-tree-id1589 . -1) 1331) nil (25558 20469 100890 352000) 0 nil])
([nil nil ((1330 . 1333)) nil (25558 20469 100888 756000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg)) . -1329) (undo-tree-id1585 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1330) (undo-tree-id1586 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1331) (undo-tree-id1587 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1332) (undo-tree-id1588 . -1) 1333) nil (25558 20469 100887 389000) 0 nil])
([nil nil ((1329 . 1335)) nil (25558 20469 100876 416000) 0 nil])
([nil nil ((1335 . 1337)) nil (25558 20469 100875 669000) 0 nil])
([nil nil ((1336 . 1338)) nil (25558 20469 100874 882000) 0 nil])
([nil nil ((#("ß" 0 1 (fontified t ws-butler-chg chg)) . -1337) (undo-tree-id1584 . -1) 1338) nil (25558 20469 100873 990000) 0 nil])
([nil nil ((1337 . 1338)) nil (25558 20469 100872 556000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . -401) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (#(" " 0 1 (fontified t)) . -402) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -403) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -404) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -405) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -406) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -407) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -408) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -409) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -410) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (#(" " 0 1 (fontified t)) . -411) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -412) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (#("h" 0 1 (fontified t)) . -413) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (#("a" 0 1 (fontified t)) . -414) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -415) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (#("*" 0 1 (fontified t)) . -416) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (#(" " 0 1 (fontified t)) . -417) (undo-tree-id1579 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -418) (undo-tree-id1580 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -419) (undo-tree-id1581 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -420) (undo-tree-id1582 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -421) (undo-tree-id1583 . -1) 422) nil (25558 20469 100867 344000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -394) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (#("i" 0 1 (fontified t)) . -395) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (#("n" 0 1 (fontified t)) . -396) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (#("t" 0 1 (fontified t)) . -397) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (#("6" 0 1 (fontified t)) . -398) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (#("4" 0 1 (fontified t)) . -399) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (#("_" 0 1 (fontified t)) . -400) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) 401) nil (25558 20469 100765 890000) 0 nil])
([nil nil ((394 . 398)) nil (25558 20469 100743 93000) 0 nil])
([nil nil ((398 . 399)) nil (25558 20469 100742 281000) 0 nil])
([nil nil ((399 . 401)) nil (25558 20469 100741 482000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -400) (undo-tree-id1492 . -1) 401) nil (25558 20469 100739 666000) 0 nil])
([nil nil ((400 . 407)) nil (25558 20469 100716 433000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -88) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -89) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -90) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -91) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -92) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -93) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -94) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -95) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (#(" " 0 1 (fontified t)) . -96) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (#("," 0 1 (fontified t c-type c-decl-arg-start)) . -97) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (#(" " 0 1 (fontified t)) . -98) (undo-tree-id1634 . -1) (#("c" 0 1 (fontified t)) . -99) (undo-tree-id1635 . -1) (#("h" 0 1 (fontified t)) . -100) (undo-tree-id1636 . -1) (#("a" 0 1 (fontified t)) . -101) (undo-tree-id1637 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -102) (undo-tree-id1638 . -1) (#("*" 0 1 (fontified t)) . -103) (undo-tree-id1639 . -1) (#(" " 0 1 (fontified t)) . -104) (undo-tree-id1640 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -105) (undo-tree-id1641 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -106) (undo-tree-id1642 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -107) (undo-tree-id1643 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -108) (undo-tree-id1644 . -1) 109 (t 25558 20469 196855 36000)) nil (25558 20479 212974 61000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -80) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (#("i" 0 1 (fontified t)) . -81) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (#("n" 0 1 (fontified t)) . -82) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (#("t" 0 1 (fontified t)) . -83) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (#("6" 0 1 (fontified t)) . -84) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (#("4" 0 1 (fontified t)) . -85) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (#("_" 0 1 (fontified t)) . -86) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -87) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) 88) nil (25558 20479 212947 136000) 0 nil])
([nil nil ((80 . 84)) nil (25558 20479 212920 955000) 0 nil])
([nil nil ((84 . 85)) nil (25558 20479 212920 190000) 0 nil])
([nil nil ((85 . 89)) nil (25558 20479 212919 299000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -86) (undo-tree-id1595 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -87) (undo-tree-id1596 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -88) (undo-tree-id1597 . -1) 89) nil (25558 20479 212902 502000) 0 nil])
([nil nil ((86 . 93)) nil (25558 20479 212889 876000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1305) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (#("," 0 1 (fontified t)) . -1306) (undo-tree-id1677 . -1) 1307 (t 25558 20479 308831 427000)) nil (25558 20565 990996 343000) 0 nil])
([nil nil ((1305 . 1309)) nil (25558 20565 990991 992000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -1305) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1306) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1307) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -1308) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) 1309) nil (25558 20565 990986 767000) 0 nil])
([nil nil ((1305 . 1309) (t 25558 20566 88618 987000)) nil (25558 20583 411668 675000) 0 nil])
([nil nil ((1310 . 1311) (t 25558 20583 508574 389000)) nil (25558 20590 237188 665000) 0 nil])
([nil nil ((1311 . 1312)) nil (25558 20590 237183 509000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1300) (undo-tree-id1679 . -1) 1301 (t 25558 20590 332556 748000)) nil (25558 20602 940258 332000) 0 nil])
([nil nil ((1300 . 1301)) nil (25558 20602 940256 95000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete)) . -1301) (undo-tree-id1678 . -1) 1302) nil (25558 20602 940254 222000) 0 nil])
([nil nil ((1301 . 1302)) nil (25558 20602 940242 183000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1286) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (#("e" 0 1 (fontified t)) . -1287) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (#("s" 0 1 (fontified t)) . -1288) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (#("u" 0 1 (fontified t)) . -1289) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (#("l" 0 1 (fontified t)) . -1290) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (#("t" 0 1 (fontified t)) . -1291) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) 1292 (t 25558 20603 32523 669000)) nil (25558 20614 930215 496000) 0 nil])
([nil nil ((1286 . 1289)) nil (25558 20614 930190 738000) 0 nil])
([nil nil ((#("if(eof==1){ action(head); }" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t)) . 1283) (undo-tree-id1710 . -14) (undo-tree-id1711 . -3) (undo-tree-id1712 . -3) (undo-tree-id1713 . -10) (undo-tree-id1714 . -10) (undo-tree-id1715 . -11) (undo-tree-id1716 . -10) (undo-tree-id1717 . -27) (t 25558 20615 28492 143000)) nil (25558 20647 747002 717000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1281) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) 1283) nil (25558 20647 746958 707000) 0 nil])
([nil nil ((1281 . 1283) 1283 (t 25558 20647 928404 327000)) nil (25558 20704 553458 584000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1281) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1282) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) 1283 (t 25558 20647 928404 327000)) nil (25558 20704 553457 176000) 0 nil])
([nil nil ((1281 . 1283)) nil (25558 20704 553453 445000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1282) (undo-tree-id1725 . -1) 1283) nil (25558 20704 553452 641000) 0 nil])
([nil nil ((#("switch(operations[i].object)
  {
   case STRICT_WORD: eof=Regex_GetObjectStrictWord(&head,word); break;

   case STRICT_CHAR: eof=Regex_GetObjectStrictChar(&head,&strict_char); break;

   case CHAR:if(*head=='\\0'){ printf(\" No Futher Characters \\n \"); eof=-1; }
             character=*head;
             printf(\" Not Strict Character %c Found \\n \", character);
             break;

   default  : break;
  }" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t face font-lock-keyword-face) 37 40 (fontified t face font-lock-keyword-face) 40 45 (fontified t) 45 52 (fontified t) 52 53 (fontified t c-type c-decl-end) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 81 (fontified t) 81 82 (fontified t) 82 84 (fontified t) 84 85 (fontified t) 85 90 (fontified t) 90 96 (fontified t) 96 97 (fontified t) 97 102 (fontified t face font-lock-keyword-face) 102 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t face font-lock-keyword-face) 109 111 (fontified t face font-lock-keyword-face) 111 112 (fontified t face font-lock-keyword-face) 112 119 (fontified t) 119 124 (fontified t) 124 125 (fontified t c-type c-decl-end) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 156 (fontified t) 156 157 (fontified t) 157 162 (fontified t) 162 176 (fontified t) 176 177 (fontified t) 177 182 (fontified t face font-lock-keyword-face) 182 184 (fontified t) 184 185 (fontified t) 185 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t face font-lock-keyword-face) 189 192 (fontified t face font-lock-keyword-face) 192 197 (fontified t) 197 198 (fontified t c-type c-decl-end) 198 200 (fontified t face font-lock-keyword-face) 200 201 (fontified t) 201 202 (fontified t) 202 208 (fontified t) 208 212 (fontified t face font-lock-string-face) 212 222 (fontified t) 222 249 (fontified t face font-lock-string-face) 249 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 259 (fontified t) 259 262 (fontified t) 262 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 275 (fontified t) 275 276 (fontified t) 276 285 (fontified t) 285 286 (fontified t) 286 292 (fontified t) 292 295 (fontified t) 295 296 (fontified t) 296 298 (fontified t) 298 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 312 (fontified t) 312 331 (fontified t face font-lock-string-face) 331 348 (face font-lock-string-face fontified t) 348 362 (fontified t) 362 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t) 368 369 (fontified t) 369 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t face font-lock-keyword-face) 376 379 (fontified t face font-lock-keyword-face) 379 380 (fontified t face font-lock-keyword-face) 380 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 385 (fontified t) 385 386 (fontified t) 386 387 (fontified t face font-lock-keyword-face) 387 390 (fontified t face font-lock-keyword-face) 390 392 (fontified t face font-lock-keyword-face) 392 393 (fontified t face font-lock-keyword-face) 393 395 (fontified t) 395 396 (fontified t c-type c-decl-end) 396 397 (fontified t) 397 402 (fontified t face font-lock-keyword-face) 402 404 (fontified t) 404 405 (fontified t) 405 406 (fontified t) 406 407 (fontified t)) . 811) (undo-tree-id1723 . -407) (undo-tree-id1724 . -407) 1218) nil (25558 20704 553450 773000) 0 nil])
([nil nil ((1209 . 1214) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 1209) (1186 . 1191) (#("   " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1186) (1171 . 1178) (#("             " 0 4 (ws-butler-chg chg fontified nil) 4 5 (ws-butler-chg chg fontified nil) 5 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 12 (ws-butler-chg chg fontified nil) 12 13 (ws-butler-chg chg fontified nil)) . 1171) (1107 . 1114) (#("             " 0 3 (ws-butler-chg chg fontified nil) 3 4 (ws-butler-chg chg fontified nil) 4 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 12 (ws-butler-chg chg fontified nil) 12 13 (ws-butler-chg chg fontified nil)) . 1107) (1083 . 1090) (#("             " 0 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil) 3 4 (ws-butler-chg chg fontified nil) 4 5 (ws-butler-chg chg fontified nil) 5 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 13 (ws-butler-chg chg fontified nil)) . 1083) (1004 . 1009) (#("   " 0 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1004) (922 . 927) (#("   " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 922) (848 . 853) (#("   " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 848) (841 . 846) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 841) (809 . 812) (#("  " 0 1 (fontified nil) 1 2 (fontified nil)) . 809) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (nil rear-nonsticky nil 1217 . 1218) (nil fontified nil 1217 . 1218) (nil fontified nil 1216 . 1217) (nil fontified nil 1215 . 1216) (nil fontified nil 1213 . 1215) (nil fontified nil 1208 . 1213) (nil fontified nil 1207 . 1208) (nil fontified nil 1206 . 1207) (nil fontified nil 1204 . 1206) (nil fontified nil 1203 . 1204) (nil fontified nil 1201 . 1203) (nil fontified nil 1198 . 1201) (nil fontified nil 1197 . 1198) (nil fontified nil 1196 . 1197) (nil fontified nil 1195 . 1196) (nil fontified nil 1194 . 1195) (nil fontified nil 1193 . 1194) (nil fontified nil 1191 . 1193) (nil fontified nil 1190 . 1191) (nil fontified nil 1187 . 1190) (nil fontified nil 1186 . 1187) (nil fontified nil 1185 . 1186) (nil fontified nil 1184 . 1185) (nil fontified nil 1183 . 1184) (nil fontified nil 1182 . 1183) (nil fontified nil 1181 . 1182) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1178 . 1179) (nil fontified nil 1177 . 1178) (nil fontified nil 1173 . 1177) (nil fontified nil 1159 . 1173) (nil fontified nil 1142 . 1159) (nil fontified nil 1123 . 1142) (nil fontified nil 1117 . 1123) (nil fontified nil 1116 . 1117) (nil fontified nil 1115 . 1116) (nil fontified nil 1114 . 1115) (nil fontified nil 1113 . 1114) (nil fontified nil 1112 . 1113) (nil fontified nil 1111 . 1112) (nil fontified nil 1110 . 1111) (nil fontified nil 1109 . 1110) (nil fontified nil 1107 . 1109) (nil fontified nil 1106 . 1107) (nil fontified nil 1103 . 1106) (nil fontified nil 1097 . 1103) (nil fontified nil 1096 . 1097) (nil fontified nil 1087 . 1096) (nil fontified nil 1086 . 1087) (nil fontified nil 1084 . 1086) (nil fontified nil 1083 . 1084) (nil fontified nil 1082 . 1083) (nil fontified nil 1081 . 1082) (nil fontified nil 1080 . 1081) (nil fontified nil 1079 . 1080) (nil fontified nil 1078 . 1079) (nil fontified nil 1077 . 1078) (nil fontified nil 1076 . 1077) (nil fontified nil 1075 . 1076) (nil fontified nil 1073 . 1075) (nil fontified nil 1070 . 1073) (nil fontified nil 1068 . 1070) (nil fontified nil 1067 . 1068) (nil fontified nil 1066 . 1067) (nil fontified nil 1065 . 1066) (nil fontified nil 1064 . 1065) (nil fontified nil 1063 . 1064) (nil fontified nil 1060 . 1063) (nil fontified nil 1033 . 1060) (nil fontified nil 1023 . 1033) (nil fontified nil 1019 . 1023) (nil fontified nil 1013 . 1019) (nil fontified nil 1012 . 1013) (nil fontified nil 1011 . 1012) (nil fontified nil 1009 . 1011) (nil fontified nil 1008 . 1009) (nil fontified nil 1003 . 1008) (nil fontified nil 1000 . 1003) (nil fontified nil 999 . 1000) (nil fontified nil 998 . 999) (nil fontified nil 996 . 998) (nil fontified nil 995 . 996) (nil fontified nil 993 . 995) (nil fontified nil 988 . 993) (nil fontified nil 987 . 988) (nil fontified nil 973 . 987) (nil fontified nil 968 . 973) (nil fontified nil 967 . 968) (nil fontified nil 942 . 967) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 937 . 938) (nil fontified nil 936 . 937) (nil fontified nil 935 . 936) (nil fontified nil 930 . 935) (nil fontified nil 923 . 930) (nil fontified nil 922 . 923) (nil fontified nil 920 . 922) (nil fontified nil 919 . 920) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 915 . 916) (nil fontified nil 913 . 915) (nil fontified nil 908 . 913) (nil fontified nil 907 . 908) (nil fontified nil 901 . 907) (nil fontified nil 896 . 901) (nil fontified nil 895 . 896) (nil fontified nil 893 . 895) (nil fontified nil 892 . 893) (nil fontified nil 870 . 892) (nil fontified nil 869 . 870) (nil fontified nil 868 . 869) (nil fontified nil 867 . 868) (nil fontified nil 866 . 867) (nil fontified nil 865 . 866) (nil fontified nil 864 . 865) (nil fontified nil 863 . 864) (nil fontified nil 856 . 863) (nil fontified nil 851 . 856) (nil fontified nil 848 . 851) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 833 . 839) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 811 . 817) (811 . 1218)) nil (25558 20704 553441 702000) 0 nil])
([nil nil ((1279 . 1280)) nil (25558 20704 553404 542000) 0 nil])
([nil nil ((1669 . 1673) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 1669) (1647 . 1651) (#("   " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1647) (1633 . 1639) (#("             " 0 4 (ws-butler-chg chg fontified nil) 4 5 (ws-butler-chg chg fontified nil) 5 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 12 (ws-butler-chg chg fontified nil) 12 13 (ws-butler-chg chg fontified nil)) . 1633) (1570 . 1576) (#("             " 0 3 (ws-butler-chg chg fontified nil) 3 4 (ws-butler-chg chg fontified nil) 4 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 12 (ws-butler-chg chg fontified nil) 12 13 (ws-butler-chg chg fontified nil)) . 1570) (1547 . 1553) (#("             " 0 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil) 3 4 (ws-butler-chg chg fontified nil) 4 5 (ws-butler-chg chg fontified nil) 5 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 13 (ws-butler-chg chg fontified nil)) . 1547) (1469 . 1473) (#("   " 0 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1469) (1388 . 1392) (#("   " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1388) (1315 . 1319) (#("   " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil)) . 1315) (1309 . 1313) (#("  " 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil)) . 1309) (nil rear-nonsticky nil 1686 . 1687) (nil fontified nil 1686 . 1687) (nil fontified nil 1685 . 1686) (nil fontified nil 1684 . 1685) (nil fontified nil 1682 . 1684) (nil fontified nil 1677 . 1682) (nil fontified nil 1676 . 1677) (nil fontified nil 1675 . 1676) (nil fontified nil 1673 . 1675) (nil fontified nil 1672 . 1673) (nil fontified nil 1670 . 1672) (nil fontified nil 1667 . 1670) (nil fontified nil 1666 . 1667) (nil fontified nil 1665 . 1666) (nil fontified nil 1664 . 1665) (nil fontified nil 1663 . 1664) (nil fontified nil 1662 . 1663) (nil fontified nil 1660 . 1662) (nil fontified nil 1659 . 1660) (nil fontified nil 1656 . 1659) (nil fontified nil 1655 . 1656) (nil fontified nil 1654 . 1655) (nil fontified nil 1653 . 1654) (nil fontified nil 1652 . 1653) (nil fontified nil 1651 . 1652) (nil fontified nil 1650 . 1651) (nil fontified nil 1649 . 1650) (nil fontified nil 1648 . 1649) (nil fontified nil 1647 . 1648) (nil fontified nil 1646 . 1647) (nil fontified nil 1642 . 1646) (nil fontified nil 1628 . 1642) (nil fontified nil 1611 . 1628) (nil fontified nil 1592 . 1611) (nil fontified nil 1586 . 1592) (nil fontified nil 1585 . 1586) (nil fontified nil 1584 . 1585) (nil fontified nil 1583 . 1584) (nil fontified nil 1582 . 1583) (nil fontified nil 1581 . 1582) (nil fontified nil 1580 . 1581) (nil fontified nil 1579 . 1580) (nil fontified nil 1578 . 1579) (nil fontified nil 1576 . 1578) (nil fontified nil 1575 . 1576) (nil fontified nil 1572 . 1575) (nil fontified nil 1566 . 1572) (nil fontified nil 1565 . 1566) (nil fontified nil 1556 . 1565) (nil fontified nil 1555 . 1556) (nil fontified nil 1553 . 1555) (nil fontified nil 1552 . 1553) (nil fontified nil 1551 . 1552) (nil fontified nil 1550 . 1551) (nil fontified nil 1549 . 1550) (nil fontified nil 1548 . 1549) (nil fontified nil 1547 . 1548) (nil fontified nil 1546 . 1547) (nil fontified nil 1545 . 1546) (nil fontified nil 1544 . 1545) (nil fontified nil 1542 . 1544) (nil fontified nil 1539 . 1542) (nil fontified nil 1537 . 1539) (nil fontified nil 1536 . 1537) (nil fontified nil 1535 . 1536) (nil fontified nil 1534 . 1535) (nil fontified nil 1533 . 1534) (nil fontified nil 1532 . 1533) (nil fontified nil 1529 . 1532) (nil fontified nil 1502 . 1529) (nil fontified nil 1492 . 1502) (nil fontified nil 1488 . 1492) (nil fontified nil 1482 . 1488) (nil fontified nil 1481 . 1482) (nil fontified nil 1480 . 1481) (nil fontified nil 1478 . 1480) (nil fontified nil 1477 . 1478) (nil fontified nil 1472 . 1477) (nil fontified nil 1469 . 1472) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1465 . 1467) (nil fontified nil 1464 . 1465) (nil fontified nil 1462 . 1464) (nil fontified nil 1457 . 1462) (nil fontified nil 1456 . 1457) (nil fontified nil 1442 . 1456) (nil fontified nil 1437 . 1442) (nil fontified nil 1436 . 1437) (nil fontified nil 1411 . 1436) (nil fontified nil 1410 . 1411) (nil fontified nil 1409 . 1410) (nil fontified nil 1408 . 1409) (nil fontified nil 1407 . 1408) (nil fontified nil 1406 . 1407) (nil fontified nil 1405 . 1406) (nil fontified nil 1404 . 1405) (nil fontified nil 1399 . 1404) (nil fontified nil 1392 . 1399) (nil fontified nil 1391 . 1392) (nil fontified nil 1389 . 1391) (nil fontified nil 1388 . 1389) (nil fontified nil 1387 . 1388) (nil fontified nil 1386 . 1387) (nil fontified nil 1385 . 1386) (nil fontified nil 1384 . 1385) (nil fontified nil 1382 . 1384) (nil fontified nil 1377 . 1382) (nil fontified nil 1376 . 1377) (nil fontified nil 1370 . 1376) (nil fontified nil 1365 . 1370) (nil fontified nil 1364 . 1365) (nil fontified nil 1362 . 1364) (nil fontified nil 1361 . 1362) (nil fontified nil 1339 . 1361) (nil fontified nil 1338 . 1339) (nil fontified nil 1337 . 1338) (nil fontified nil 1336 . 1337) (nil fontified nil 1335 . 1336) (nil fontified nil 1334 . 1335) (nil fontified nil 1333 . 1334) (nil fontified nil 1332 . 1333) (nil fontified nil 1325 . 1332) (nil fontified nil 1320 . 1325) (nil fontified nil 1317 . 1320) (nil fontified nil 1316 . 1317) (nil fontified nil 1315 . 1316) (nil fontified nil 1314 . 1315) (nil fontified nil 1313 . 1314) (nil fontified nil 1312 . 1313) (nil fontified nil 1311 . 1312) (nil fontified nil 1310 . 1311) (nil fontified nil 1309 . 1310) (nil fontified nil 1308 . 1309) (nil fontified nil 1302 . 1308) (nil fontified nil 1301 . 1302) (nil fontified nil 1300 . 1301) (nil fontified nil 1299 . 1300) (nil fontified nil 1298 . 1299) (nil fontified nil 1297 . 1298) (nil fontified nil 1296 . 1297) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1293 . 1294) (nil fontified nil 1292 . 1293) (nil fontified nil 1291 . 1292) (nil fontified nil 1290 . 1291) (nil fontified nil 1289 . 1290) (nil fontified nil 1288 . 1289) (nil fontified nil 1287 . 1288) (nil fontified nil 1286 . 1287) (nil fontified nil 1280 . 1286) (1280 . 1687)) nil (25558 20704 553393 543000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1337) (undo-tree-id1747 . -1) (#("o" 0 1 (fontified t)) . -1338) (undo-tree-id1748 . -1) (#("f" 0 1 (fontified t)) . -1339) (undo-tree-id1749 . -1) 1340 (t 25558 20704 648248 515000)) nil (25558 20732 656169 443000) 0 nil])
([nil nil ((1337 . 1341)) nil (25558 20732 656165 745000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -1337) (undo-tree-id1743 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1338) (undo-tree-id1744 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1339) (undo-tree-id1745 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1340) (undo-tree-id1746 . -1) 1341) nil (25558 20732 656164 506000) 0 nil])
([nil nil ((1337 . 1341)) nil (25558 20732 656160 720000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -1337) (undo-tree-id1739 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1338) (undo-tree-id1740 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1339) (undo-tree-id1741 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1340) (undo-tree-id1742 . -1) 1341) nil (25558 20732 656159 394000) 0 nil])
([nil nil ((1337 . 1343)) nil (25558 20732 656154 916000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -1337) (undo-tree-id1733 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1338) (undo-tree-id1734 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1339) (undo-tree-id1735 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1340) (undo-tree-id1736 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1341) (undo-tree-id1737 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1342) (undo-tree-id1738 . -1) 1343) nil (25558 20732 656153 150000) 0 nil])
([nil nil ((1337 . 1340)) nil (25558 20732 656145 783000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -1337) (undo-tree-id1730 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1338) (undo-tree-id1731 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1339) (undo-tree-id1732 . -1) 1340) nil (25558 20732 656144 36000) 0 nil])
([nil nil ((1337 . 1343)) nil (25558 20732 656132 702000) 0 nil])
([nil nil ((1343 . 1348)) nil (25558 20732 656128 62000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -1355) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (#("e" 0 1 (fontified t)) . -1356) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (#("t" 0 1 (fontified t)) . -1357) (undo-tree-id1756 . -1) 1358 (t 25558 20732 748169 408000)) nil (25558 20739 497278 716000) 0 nil])
([nil nil ((1355 . 1359)) nil (25558 20739 497260 655000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1359) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (#("b" 0 1 (fontified t)) . -1360) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (#("j" 0 1 (fontified t)) . -1361) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (#("e" 0 1 (fontified t)) . -1362) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (#("c" 0 1 (fontified t)) . -1363) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (#("t" 0 1 (fontified t)) . -1364) (undo-tree-id1787 . -1) 1365 (t 25558 20739 588149 971000)) nil (25558 20751 683413 137000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -1370) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (#("h" 0 1 (fontified t)) . -1371) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (#("e" 0 1 (fontified t)) . -1372) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (#("a" 0 1 (fontified t)) . -1373) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (#("d" 0 1 (fontified t)) . -1374) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (#("," 0 1 (fontified t)) . -1375) (undo-tree-id1803 . -1) 1376 (t 25558 20751 780115 166000)) nil (25558 20762 306238 687000) 0 nil])
([nil nil ((#("operations[i]" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 1287) (undo-tree-id1804 . -13) (undo-tree-id1805 . -13) (undo-tree-id1806 . -13) (undo-tree-id1807 . -13) (undo-tree-id1808 . -13) (t 25558 20762 400084 668000)) nil (25558 20783 143243 782000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1299 . 1300) (nil fontified nil 1299 . 1300) (nil fontified nil 1298 . 1299) (nil fontified nil 1297 . 1298) (nil fontified nil 1296 . 1297) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1293 . 1294) (nil fontified nil 1292 . 1293) (nil fontified nil 1291 . 1292) (nil fontified nil 1290 . 1291) (nil fontified nil 1289 . 1290) (nil fontified nil 1288 . 1289) (nil fontified nil 1287 . 1288) (1287 . 1300)) nil (25558 20783 143232 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1382 . 1383) (nil fontified nil 1382 . 1383) (nil fontified nil 1381 . 1382) (nil fontified nil 1380 . 1381) (nil fontified nil 1379 . 1380) (nil fontified nil 1378 . 1379) (nil fontified nil 1377 . 1378) (nil fontified nil 1376 . 1377) (nil fontified nil 1375 . 1376) (nil fontified nil 1374 . 1375) (nil fontified nil 1373 . 1374) (nil fontified nil 1372 . 1373) (nil fontified nil 1371 . 1372) (nil fontified nil 1370 . 1371) (1370 . 1383)) nil (25558 20784 156762 675000) 0 nil])
([nil nil ((1383 . 1384)) nil (25558 20789 54966 8000) 0 nil] [nil nil ((nil rear-nonsticky nil 1395 . 1396) (nil fontified nil 1395 . 1396) (nil fontified nil 1394 . 1395) (nil fontified nil 1393 . 1394) (nil fontified nil 1392 . 1393) (nil fontified nil 1391 . 1392) (nil fontified nil 1390 . 1391) (nil fontified nil 1389 . 1390) (nil fontified nil 1388 . 1389) (nil fontified nil 1387 . 1388) (nil fontified nil 1386 . 1387) (nil fontified nil 1385 . 1386) (nil fontified nil 1384 . 1385) (nil fontified nil 1383 . 1384) (1383 . 1396)) ((#("operations[i]" 0 1 (ws-butler-chg chg fontified nil) 1 2 (ws-butler-chg chg fontified nil) 2 3 (ws-butler-chg chg fontified nil) 3 4 (ws-butler-chg chg fontified nil) 4 5 (ws-butler-chg chg fontified nil) 5 6 (ws-butler-chg chg fontified nil) 6 7 (ws-butler-chg chg fontified nil) 7 8 (ws-butler-chg chg fontified nil) 8 9 (ws-butler-chg chg fontified nil) 9 10 (ws-butler-chg chg fontified nil) 10 11 (ws-butler-chg chg fontified nil) 11 12 (ws-butler-chg chg fontified nil) 12 13 (ws-butler-chg chg rear-nonsticky nil fontified nil)) . 1383) (undo-tree-id1809 . -13) (undo-tree-id1810 . -13) (undo-tree-id1811 . -13) (nil rear-nonsticky t 1395 . 1396)) (25558 20783 143220 870000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1383) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) 1384) nil (25558 20789 54963 880000) 0 nil])
nil
([nil nil ((1383 . 1384)) nil (25558 20789 54938 123000) 0 nil])
([nil nil ((#("    case STRICT_CHAR: eof=Regex_GetObjectStrictChar(&head,&strict_char); break;

    case CHAR:if(*head=='\\0'){ printf(\" No Futher Characters \\n \"); eof=-1; }
      character=*head;
      printf(\" Not Strict Character %c Found \\n \", character);
      break;
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face) 8 15 (fontified t) 15 20 (fontified t) 20 21 (fontified t c-type c-decl-end) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 52 (fontified t) 52 53 (fontified t) 53 58 (fontified t) 58 72 (fontified t) 72 73 (fontified t) 73 78 (fontified t face font-lock-keyword-face) 78 80 (fontified t) 80 85 (fontified t) 85 86 (fontified t face font-lock-keyword-face) 86 89 (fontified t face font-lock-keyword-face) 89 94 (fontified t) 94 95 (fontified t c-type c-decl-end) 95 97 (fontified t face font-lock-keyword-face) 97 98 (fontified t) 98 99 (fontified t) 99 105 (fontified t) 105 109 (fontified t face font-lock-string-face) 109 119 (fontified t) 119 146 (fontified t face font-lock-string-face) 146 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 156 (fontified t) 156 165 (fontified t) 165 166 (fontified t) 166 175 (fontified t) 175 176 (fontified t) 176 188 (fontified t) 188 189 (fontified t) 189 195 (fontified t) 195 214 (fontified t face font-lock-string-face) 214 231 (fontified t face font-lock-string-face) 231 251 (fontified t) 251 252 (fontified t face font-lock-keyword-face) 252 255 (fontified t face font-lock-keyword-face) 255 256 (fontified t face font-lock-keyword-face) 256 258 (fontified t)) . 1399) (undo-tree-id1833 . -258) (undo-tree-id1834 . -258) (undo-tree-id1835 . -258) (undo-tree-id1836 . -258) (undo-tree-id1837 . -258) 1657 (t 25558 20789 148007 175000)) nil (25558 20795 109449 611000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1397) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (#("
" 0 1 (fontified t)) . -1398) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) 1399) nil (25558 20795 109429 279000) 0 nil])
([nil nil ((1397 . 1404) (t 25558 20795 207989 483000)) nil (25558 20795 916012 676000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 1398) (undo-tree-id1838 . -6) (undo-tree-id1839 . -6) (undo-tree-id1840 . -6) (undo-tree-id1841 . -6) 1404) nil (25558 20795 916008 349000) 0 nil])
([nil nil ((1398 . 1404) 1404 (t 25558 20796 27987 84000)) nil (25558 20798 300429 768000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t ws-butler-chg chg)) . 1398) (undo-tree-id1842 . -6) (undo-tree-id1843 . -6) 1404 (t 25558 20796 27987 84000)) nil (25558 20798 300415 240000) 0 nil])
([nil nil ((1319 . 1320)) nil (25558 20798 300392 584000) 0 nil])
([nil nil ((1404 . 1405)) nil (25558 20798 300388 444000) 0 nil])
([nil nil ((1428 . 1431) (t 25558 20798 403980 128000)) nil (25558 20824 481745 91000) 0 nil])
([nil nil ((1429 . 1432) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1429) (undo-tree-id1850 . -2) 1431) nil (25558 20824 481744 68000) 0 nil])
([nil nil ((1430 . 1433) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 1430) (undo-tree-id1849 . -2) 1432) nil (25558 20824 481742 256000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1430) (undo-tree-id1846 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1431) (undo-tree-id1847 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -1432) (undo-tree-id1848 . -1) 1433) nil (25558 20824 481740 252000) 0 nil])
([nil nil ((1430 . 1434)) nil (25558 20824 481737 352000) 0 nil])
([nil nil ((1434 . 1436)) nil (25558 20824 481736 707000) 0 nil])
([nil nil ((1435 . 1441)) nil (25558 20824 481736 49000) 0 nil])
([nil nil ((1435 . 1446) (#("action" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -1435) (undo-tree-id1845 . -6) 1441) nil (25558 20824 481734 968000) 0 nil])
([nil nil ((1446 . 1449)) nil (25558 20824 481733 151000) 0 nil])
([nil nil ((1450 . 1452)) nil (25558 20824 481732 476000) 0 nil])
([nil nil ((1451 . 1458)) nil (25558 20824 481731 771000) 0 nil])
([nil nil ((1458 . 1459)) nil (25558 20824 481731 67000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -1458) (undo-tree-id1844 . -1) 1459) nil (25558 20824 481729 726000) 0 nil])
([nil nil ((1458 . 1460)) nil (25558 20824 481721 302000) 0 nil])
([nil nil ((1459 . 1463)) nil (25558 20824 481720 486000) 0 nil])
([nil nil ((1464 . 1465)) nil (25558 20824 481719 2000) 0 nil])
([nil nil ((1465 . 1466)) nil (25558 20824 481714 697000) 0 nil])
([nil nil ((199 . 200) (t 25558 20824 575903 59000)) nil (25558 20927 642397 119000) 0 nil])
([nil nil ((#("Regex_AddOpCode(&operation,EQUAL,\"Hallo\");" 0 33 (fontified t) 33 35 (fontified t face font-lock-string-face) 35 40 (fontified t face font-lock-string-face) 40 42 (fontified t)) . 257) (undo-tree-id1851 . -42) (t 25558 20927 747591 268000)) nil (25558 20932 49797 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 298 . 299) (nil fontified nil 297 . 299) (nil fontified nil 292 . 297) (nil fontified nil 290 . 292) (nil fontified nil 257 . 290) (257 . 299)) nil (25558 20932 49790 255000) 0 nil])
([nil nil ((300 . 301)) nil (25558 20932 49788 232000) 0 nil])
([nil nil ((nil rear-nonsticky nil 342 . 343) (nil fontified nil 341 . 343) (nil fontified nil 336 . 341) (nil fontified nil 334 . 336) (nil fontified nil 301 . 334) (301 . 343)) nil (25558 20932 49782 517000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -328) (undo-tree-id1856 . -1) (#("Q" 0 1 (fontified t)) . -329) (undo-tree-id1857 . -1) (#("U" 0 1 (fontified t)) . -330) (undo-tree-id1858 . -1) (#("A" 0 1 (fontified t)) . -331) (undo-tree-id1859 . -1) (#("L" 0 1 (fontified t)) . -332) (undo-tree-id1860 . -1) 333 (t 25558 20932 163577 663000)) nil (25558 20935 399205 708000) 0 nil])
([nil nil ((328 . 330)) nil (25558 20935 399198 381000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t ws-butler-chg chg)) . -329) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) 330) nil (25558 20935 399194 130000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t face font-lock-string-face)) . -331) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -332) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -333) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -334) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -335) (undo-tree-id1877 . -1) 336 (t 25558 20935 495567 383000)) nil (25558 20938 282064 3000) 0 nil])
([nil nil ((4195 . 4199) (t 25558 20938 371558 507000)) nil (25558 21078 400295 830000) 0 nil])
([nil nil ((4199 . 4202)) nil (25558 21078 400280 711000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -4201) (undo-tree-id1881 . -1) 4202) nil (25558 21078 400279 668000) 0 nil])
([nil nil ((4201 . 4203)) nil (25558 21078 400275 166000) 0 nil])
([nil nil ((4199 . 4214) (#("op_c" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -4199) (undo-tree-id1880 . -4) 4203) nil (25558 21078 400221 618000) 0 nil])
([nil nil ((4214 . 4216)) nil (25558 21078 400219 279000) 0 nil])
([nil nil ((4216 . 4217)) nil (25558 21078 400217 942000) 0 nil])
([nil nil ((4196 . 4200) (#("   " 0 3 (fontified t ws-butler-chg chg)) . 4196) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) 4199) nil (25558 21078 400213 64000) 0 nil])
([nil nil ((806 . 807) (t 25558 21078 507116 647000)) nil (25558 21151 312404 291000) 0 nil])
([nil nil ((806 . 808) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 806) (undo-tree-id1887 . -1) 807) nil (25558 21151 312403 245000) 0 nil])
([nil nil ((808 . 814)) nil (25558 21151 312401 518000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t ws-butler-chg chg)) . -813) (undo-tree-id1886 . -1) 814) nil (25558 21151 312400 672000) 0 nil])
([nil nil ((813 . 814) (#("while" 0 1 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 1 2 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 2 3 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 3 4 (fontified nil ws-butler-chg chg face font-lock-keyword-face) 4 5 (fontified nil ws-butler-chg chg face font-lock-keyword-face)) . 813) (undo-tree-id1885 . -5) (808 . 813) 813) nil (25558 21151 312398 869000) 0 nil])
([nil nil ((814 . 815)) nil (25558 21151 312396 288000) 0 nil])
([nil nil ((814 . 815)) nil (25558 21151 312395 582000) 0 nil])
([nil nil ((816 . 817)) nil (25558 21151 312394 783000) 0 nil])
([nil nil ((816 . 820)) nil (25558 21151 312394 27000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -817) (undo-tree-id1882 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -818) (undo-tree-id1883 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -819) (undo-tree-id1884 . -1) 820) nil (25558 21151 312392 103000) 0 nil])
([nil nil ((817 . 818)) nil (25558 21151 312382 117000) 0 nil])
([nil nil ((1519 . 1520)) nil (25558 21151 312380 739000) 0 nil])
([nil nil ((1520 . 1521)) nil (25558 21151 312376 270000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t face font-lock-string-face)) . -291) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -292) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -293) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -294) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -295) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) 296 (t 25558 21151 418880 606000)) nil (25558 21325 688996 800000) 0 nil])
([nil nil ((291 . 293)) nil (25558 21325 688970 226000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -292) (undo-tree-id1888 . -1) 293) nil (25558 21325 688968 314000) 0 nil])
([nil nil ((292 . 296)) nil (25558 21325 688957 791000) 0 nil])
([nil nil ((335 . 336) (t 25558 21325 786302 721000)) nil (25558 21374 793109 412000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -335) (undo-tree-id1913 . -1) 336) nil (25558 21374 793108 304000) 0 nil])
([nil nil ((#("Regex_AddOpCode(&operation,0,\"\");" 0 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t) 32 33 (rear-nonsticky t fontified t)) . 301) (undo-tree-id1910 . -33) (undo-tree-id1911 . -33) (undo-tree-id1912 . -33)) nil (25558 21374 793106 42000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -300) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) 301) nil (25558 21374 793100 35000) 0 nil])
([nil nil ((#(" operation.logic=NOT;
 operation.object=STRICT_WORD;
 Regex_AddOpCode(&operation,EQUAL,\"Lorem\");
" 0 16 (fontified t) 16 17 (fontified t) 17 53 (fontified t) 53 54 (fontified t) 54 87 (fontified t) 87 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t) 95 96 (fontified t rear-nonsticky t) 96 97 (fontified t)) . 203) (undo-tree-id1914 . -97) (undo-tree-id1915 . -97) (t 25558 21374 886137 197000)) nil (25558 21396 167792 186000) 0 nil])
([nil nil ((nil rear-nonsticky nil 299 . 300) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 257 . 290) (nil fontified nil 256 . 257) (nil fontified nil 220 . 256) (nil fontified nil 219 . 220) (nil fontified nil 203 . 219) (203 . 300)) nil (25558 21396 167770 475000) 0 nil])
([nil nil ((nil rear-nonsticky nil 397 . 398) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (nil fontified nil 395 . 396) (nil fontified nil 394 . 395) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 391 . 392) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 355 . 388) (nil fontified nil 354 . 355) (nil fontified nil 318 . 354) (nil fontified nil 317 . 318) (nil fontified nil 301 . 317) (301 . 398)) nil (25558 21396 167746 682000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -318) (undo-tree-id1927 . -1) (#("O" 0 1 (fontified t)) . -319) (undo-tree-id1928 . -1) (#("T" 0 1 (fontified t)) . -320) (undo-tree-id1929 . -1) 321 (t 25558 21396 258064 823000)) nil (25558 21406 342612 815000) 0 nil])
([nil nil ((318 . 319)) nil (25558 21406 342609 637000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -220) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (#("O" 0 1 (fontified t)) . -221) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (#("T" 0 1 (fontified t)) . -222) (undo-tree-id1926 . -1) 223) nil (25558 21406 342608 21000) 0 nil])
([nil nil ((220 . 222)) nil (25558 21406 342599 596000) 0 nil])
([nil nil ((#("ß" 0 1 (fontified t ws-butler-chg chg)) . -221) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) 222) nil (25558 21406 342595 504000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face font-lock-string-face)) . -385) (undo-tree-id1930 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -386) (undo-tree-id1931 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -387) (undo-tree-id1932 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -388) (undo-tree-id1933 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -389) (undo-tree-id1934 . -1) 390 (t 25558 21406 434030 295000)) nil (25558 21420 774337 65000) 0 nil])
([nil nil ((385 . 390)) nil (25558 21420 774321 401000) 0 nil])
([nil nil ((387 . 394) (t 25558 21420 869981 239000)) nil (25558 21489 521685 166000) 0 nil])
([nil nil ((887 . 888) (t 25558 21489 637746 510000)) nil (25558 21615 834855 958000) 0 nil])
([nil nil ((922 . 923)) nil (25558 21615 834855 48000) 0 nil])
([nil nil ((927 . 928)) nil (25558 21615 834842 96000) 0 nil])
([nil nil ((960 . 961)) nil (25558 21615 834841 388000) 0 nil])
([nil nil ((968 . 969)) nil (25558 21615 834840 646000) 0 nil])
([nil nil ((1039 . 1040)) nil (25558 21615 834839 701000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1039) (undo-tree-id1935 . -1) 1040) nil (25558 21615 834838 416000) 0 nil])
([nil nil ((1046 . 1047)) nil (25558 21615 834817 738000) 0 nil])
([nil nil ((1129 . 1130)) nil (25558 21615 834817 110000) 0 nil])
([nil nil ((1210 . 1211)) nil (25558 21615 834815 996000) 0 nil])
([nil nil ((1236 . 1237)) nil (25558 21615 834815 383000) 0 nil])
([nil nil ((1301 . 1302)) nil (25558 21615 834814 486000) 0 nil])
([nil nil ((1315 . 1316)) nil (25558 21615 834813 874000) 0 nil])
([nil nil ((1339 . 1340)) nil (25558 21615 834813 187000) 0 nil])
([nil nil ((1345 . 1346)) nil (25558 21615 834812 582000) 0 nil])
([nil nil ((1407 . 1408)) nil (25558 21615 834811 828000) 0 nil])
([nil nil ((1440 . 1441)) nil (25558 21615 834811 90000) 0 nil])
([nil nil ((1448 . 1449)) nil (25558 21615 834810 185000) 0 nil])
([nil nil ((1535 . 1536)) nil (25558 21615 834809 453000) 0 nil])
([nil nil ((1558 . 1559)) nil (25558 21615 834808 609000) 0 nil])
([nil nil ((1564 . 1565)) nil (25558 21615 834807 229000) 0 nil])
([nil nil ((1602 . 1603)) nil (25558 21615 834802 412000) 0 nil])
([nil nil ((1604 . 1607) (t 25558 21615 921311 405000)) nil (25558 21618 197420 63000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 1605) (undo-tree-id1936 . -2) (undo-tree-id1937 . -2) (undo-tree-id1938 . -2) (undo-tree-id1939 . -2) 1607) nil (25558 21618 197416 95000) 0 nil])
([nil nil ((1605 . 1607) 1607 (t 25558 21618 301303 160000)) nil (25558 21693 40725 268000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . 1605) (undo-tree-id1941 . -2) 1607 (t 25558 21618 301303 160000)) nil (25558 21693 40723 414000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -928) (undo-tree-id1940 . -1) 929) nil (25558 21693 40720 372000) 0 nil])
([nil nil ((928 . 929)) nil (25558 21693 40707 836000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -960) (undo-tree-id1943 . -1) (#(" " 0 1 (fontified t)) . -961) (undo-tree-id1944 . -1) 962 (t 25558 21693 141043 193000)) nil (25558 21715 451602 878000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 966)) nil (25558 21715 451598 260000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1040) (#(" " 0 1 (fontified t)) . 1040)) nil (25558 21715 451597 439000) 0 nil])
([nil nil ((1040 . 1041)) nil (25558 21715 451596 448000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1123)) nil (25558 21715 451595 577000) 0 nil])
([nil nil ((1207 . 1214)) nil (25558 21715 451594 709000) 0 nil])
([nil nil ((1239 . 1247)) nil (25558 21715 451593 939000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1246) (undo-tree-id1942 . -1) 1247) nil (25558 21715 451592 37000) 0 nil])
([nil nil ((1311 . 1318)) nil (25558 21715 451580 449000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1354) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (#(" " 0 1 (fontified t)) . -1355) (undo-tree-id1949 . -1) 1356 (t 25558 21715 548889 808000)) nil (25558 21719 5486 875000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1330)) nil (25558 21719 5470 147000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1339) (t 25558 21719 100863 327000)) nil (25558 21723 360680 509000) 0 nil])
([nil nil ((1358 . 1359) (t 25558 21723 448831 32000)) nil (25558 21734 390974 544000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1453) (#(" " 0 1 (fontified t)) . 1453)) nil (25558 21734 390973 392000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1458) (#(" " 0 1 (fontified t)) . 1458)) nil (25558 21734 390972 64000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1542) (#(" " 0 1 (fontified t)) . 1542)) nil (25558 21734 390957 613000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 1564) (#(" " 0 1 (fontified t)) . 1564)) nil (25558 21734 390952 545000) 0 nil])
([nil nil ((4329 . 4331) (t 25558 21734 484749 596000)) nil (25558 22783 554276 681000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 4330) (undo-tree-id1991 . -1) 4331) nil (25558 22783 554275 771000) 0 nil])
([nil nil ((4339 . 4341)) nil (25558 22783 554274 297000) 0 nil])
([nil nil ((4341 . 4342)) nil (25558 22783 554273 669000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4338) (undo-tree-id1987 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4339) (undo-tree-id1988 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -4340) (undo-tree-id1989 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -4341) (undo-tree-id1990 . -1) 4342) nil (25558 22783 554271 930000) 0 nil])
([nil nil ((4338 . 4339)) nil (25558 22783 554268 201000) 0 nil])
([nil nil ((4330 . 4333)) nil (25558 22783 554267 430000) 0 nil])
([nil nil ((4333 . 4335)) nil (25558 22783 554266 259000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -4329) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4330) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4331) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -4332) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (#("(" 0 1 (fontified t ws-butler-chg chg)) . -4333) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4334) (undo-tree-id1986 . -1) 4335) nil (25558 22783 554260 617000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg delete face font-lock-warning-face)) . 2587) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("'" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 2587) (#("=" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("=" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("d" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("a" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("h" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("*" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("*" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("|" 0 1 (fontified t ws-butler-chg delete)) . 2587) (#("|" 0 1 (fontified t)) . 2587) (t 25558 22783 679037 126000)) nil (25558 22892 755830 942000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2586) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) 2587) nil (25558 22892 755824 615000) 0 nil])
([nil nil ((2586 . 2587) (t 25558 22892 854554 44000)) nil (25558 22893 505172 499000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-type-face)) . -2571) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (#("f" 0 1 (fontified t face font-lock-type-face)) . -2572) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (#("(" 0 1 (fontified t)) . -2573) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (#("*" 0 1 (fontified t)) . -2574) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (#("*" 0 1 (fontified t)) . -2575) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (#("h" 0 1 (fontified t)) . -2576) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (#("e" 0 1 (fontified t)) . -2577) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (#("a" 0 1 (fontified t)) . -2578) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (#("d" 0 1 (fontified t)) . -2579) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (#("=" 0 1 (fontified t)) . -2580) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (#("=" 0 1 (fontified t)) . -2581) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (#("'" 0 1 (fontified t face font-lock-warning-face)) . -2582) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (#("\\" 0 1 (fontified t)) . -2583) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (#("0" 0 1 (fontified t)) . -2584) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -2585) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (#(" " 0 1 (fontified t)) . -2586) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (#(")" 0 1 (fontified t)) . -2587) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (#("{" 0 1 (fontified t)) . -2588) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (#(" " 0 1 (fontified t)) . -2589) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (#(" " 0 1 (fontified t)) . -2590) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) 2591 (t 25558 22893 614550 710000)) nil (25558 22901 310229 569000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2585) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (#("}" 0 1 (fontified t)) . -2586) (undo-tree-id2414 . -1) 2587 (t 25558 22901 406516 564000)) nil (25558 22902 446235 263000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2584) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) 2585 (t 25558 22902 542511 589000)) nil (25558 22903 241139 579000) 0 nil])
([nil nil ((#("printf(\" Found SpecialChar %c  \\n \", **head);" 0 6 (fontified t) 6 7 (fontified t) 7 21 (fontified t face font-lock-string-face) 21 35 (fontified t face font-lock-string-face) 35 45 (fontified t)) . 2588) (undo-tree-id2509 . -45) (undo-tree-id2510 . -45) (t 25558 22903 342508 85000)) nil (25558 22907 992260 231000) 0 nil])
([nil nil ((#("return -1;" 0 6 (fontified t face font-lock-keyword-face) 6 10 (fontified t)) . 2592) (undo-tree-id2507 . -10) (undo-tree-id2508 . -10)) nil (25558 22907 992257 454000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2584) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (#("
" 0 1 (fontified t)) . -2585) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (#(" " 0 1 (fontified t)) . -2586) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (#(" " 0 1 (fontified t)) . -2587) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -2588) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (#("
" 0 1 (fontified t)) . -2589) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (#(" " 0 1 (fontified t)) . -2590) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (#(" " 0 1 (fontified t)) . -2591) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) 2592) nil (25558 22907 992248 327000) 0 nil])
([nil nil ((2584 . 2589) (t 25558 22908 86487 319000)) nil (25558 22908 802156 501000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2585) (undo-tree-id2511 . -4) (undo-tree-id2512 . -4) (undo-tree-id2513 . -4) (undo-tree-id2514 . -4) 2589) nil (25558 22908 802152 20000) 0 nil])
([nil nil ((2585 . 2589) 2589 (t 25558 22908 894483 785000)) nil (25558 22910 825776 370000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 2585) (undo-tree-id2516 . -4) (undo-tree-id2517 . -4) 2589 (t 25558 22908 894483 785000)) nil (25558 22910 825774 710000) 0 nil])
([nil nil ((2584 . 2585)) nil (25558 22910 825771 230000) 0 nil])
([nil nil ((2585 . 2586)) nil (25558 22910 825769 938000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg)) . -2585) (undo-tree-id2515 . -1) 2586) nil (25558 22910 825765 553000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2585) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) 2586 (t 25558 22910 930474 879000)) nil (25558 22911 730509 532000) 0 nil])
([nil nil ((22 . 25) (t 25558 22911 818470 997000)) nil (25558 22962 250295 869000) 0 nil])
([nil nil ((nil rear-nonsticky nil 55 . 56) (nil fontified nil 55 . 56) (nil fontified nil 26 . 55) (nil fontified nil 25 . 26) (nil fontified nil 24 . 25) (24 . 56)) nil (25558 22962 250291 153000) 0 nil])
([nil nil ((#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -34) (undo-tree-id2525 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -35) (undo-tree-id2526 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -36) (undo-tree-id2527 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -37) (undo-tree-id2528 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -38) (undo-tree-id2529 . -1) (#("E" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -39) (undo-tree-id2530 . -1) (#("x" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -40) (undo-tree-id2531 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -41) (undo-tree-id2532 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -42) (undo-tree-id2533 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -43) (undo-tree-id2534 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -44) (undo-tree-id2535 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -45) (undo-tree-id2536 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -46) (undo-tree-id2537 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -47) (undo-tree-id2538 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -48) (undo-tree-id2539 . -1) (#("E" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -49) (undo-tree-id2540 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -50) (undo-tree-id2541 . -1) (#("g" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -51) (undo-tree-id2542 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -52) (undo-tree-id2543 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -53) (undo-tree-id2544 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -54) (undo-tree-id2545 . -1) 55 (t 25558 22962 346250 841000)) nil (25558 22973 426577 288000) 0 nil])
([nil nil ((#("B" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -33) (undo-tree-id2524 . -1) 34) nil (25558 22973 426545 158000) 0 nil])
([nil nil ((33 . 49)) nil (25558 22973 426543 494000) 0 nil])
([nil nil ((49 . 55)) nil (25558 22973 426542 718000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -53) (undo-tree-id2522 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -54) (undo-tree-id2523 . -1) 55) nil (25558 22973 426541 602000) 0 nil])
([nil nil ((53 . 55)) nil (25558 22973 426538 833000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -53) (undo-tree-id2520 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -54) (undo-tree-id2521 . -1) 55) nil (25558 22973 426536 838000) 0 nil])
([nil nil ((53 . 62)) nil (25558 22973 426509 487000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -52) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (#("A" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -53) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (#("n" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -54) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (#("d" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -55) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -56) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (#("L" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -57) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (#("o" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -58) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (#("g" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -59) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (#("i" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -60) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -61) (undo-tree-id2576 . -1) 62 (t 25558 22973 522202 353000)) nil (25558 22977 630896 868000) 0 nil])
([nil nil ((52 . 53)) nil (25558 22977 630867 215000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 52) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) 53) nil (25558 22977 630862 857000) 0 nil])
([nil nil ((52 . 53) 53 (t 25558 22977 722184 145000)) nil (25558 22983 583562 777000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -52) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (#("
" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face c-in-sws t)) . -53) (undo-tree-id2581 . -1) 54 (t 25558 22977 722184 145000)) nil (25558 22983 583561 207000) 0 nil])
([nil nil ((52 . 53)) nil (25558 22983 583555 915000) 0 nil])
([nil nil ((#("//Todo : Handle Control Flow 
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 20 (fontified t c-in-sws t face font-lock-comment-face) 20 21 (fontified t c-in-sws t face font-lock-comment-face) 21 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t c-in-sws t face font-lock-comment-face) 26 27 (fontified t c-in-sws t face font-lock-comment-face) 27 28 (fontified t c-in-sws t face font-lock-comment-face) 28 29 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t) 29 30 (fontified t ws-butler-chg delete face font-lock-comment-face c-in-sws t)) . 24) (undo-tree-id2577 . -30)) nil (25558 22983 583554 957000) 0 nil])
([nil nil ((nil rear-nonsticky nil 53 . 54) (nil fontified nil 53 . 54) (nil fontified nil 52 . 53) (nil fontified nil 51 . 52) (nil fontified nil 50 . 51) (nil fontified nil 49 . 50) (nil fontified nil 48 . 49) (nil fontified nil 47 . 48) (nil fontified nil 46 . 47) (nil fontified nil 45 . 46) (nil fontified nil 44 . 45) (nil fontified nil 43 . 44) (nil fontified nil 42 . 43) (nil fontified nil 41 . 42) (nil fontified nil 40 . 41) (nil fontified nil 39 . 40) (nil fontified nil 38 . 39) (nil fontified nil 37 . 38) (nil fontified nil 36 . 37) (nil fontified nil 35 . 36) (nil fontified nil 34 . 35) (nil fontified nil 33 . 34) (nil fontified nil 26 . 33) (nil fontified nil 25 . 26) (nil fontified nil 24 . 25) (24 . 54)) nil (25558 22983 583546 411000) 0 nil])
([nil nil ((54 . 55)) nil (25558 22983 583541 941000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84 . 85) (nil fontified nil 84 . 85) (nil fontified nil 83 . 84) (nil fontified nil 82 . 83) (nil fontified nil 81 . 82) (nil fontified nil 80 . 81) (nil fontified nil 79 . 80) (nil fontified nil 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil fontified nil 75 . 76) (nil fontified nil 74 . 75) (nil fontified nil 73 . 74) (nil fontified nil 72 . 73) (nil fontified nil 71 . 72) (nil fontified nil 70 . 71) (nil fontified nil 69 . 70) (nil fontified nil 68 . 69) (nil fontified nil 67 . 68) (nil fontified nil 66 . 67) (nil fontified nil 65 . 66) (nil fontified nil 64 . 65) (nil fontified nil 57 . 64) (nil fontified nil 56 . 57) (nil fontified nil 55 . 56) (55 . 85)) nil (25558 22983 583539 657000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 82) (#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 52) 85) nil (25558 22983 583530 855000) 0 nil])
([nil nil ((#("H" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -63) (undo-tree-id2584 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -64) (undo-tree-id2585 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -65) (undo-tree-id2586 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -66) (undo-tree-id2587 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -67) (undo-tree-id2588 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -68) (undo-tree-id2589 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -69) (undo-tree-id2590 . -1) (#("C" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -70) (undo-tree-id2591 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -71) (undo-tree-id2592 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -72) (undo-tree-id2593 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -73) (undo-tree-id2594 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -74) (undo-tree-id2595 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -75) (undo-tree-id2596 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -76) (undo-tree-id2597 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -77) (undo-tree-id2598 . -1) (#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -78) (undo-tree-id2599 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -79) (undo-tree-id2600 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -80) (undo-tree-id2601 . -1) (#("w" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -81) (undo-tree-id2602 . -1) 82 (t 25558 22983 686158 311000)) nil (25558 22989 688651 636000) 0 nil])
([nil nil ((63 . 80)) nil (25558 22989 688607 549000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . 79) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) 80) nil (25558 22989 688603 613000) 0 nil])
([nil nil ((79 . 80) 80 (t 25558 22989 790131 897000)) nil (25558 22994 551284 949000) 0 nil])
([nil nil ((54 . 55) (t 25558 22989 790131 897000)) nil (25558 22994 551283 916000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t c-is-sws t ws-butler-chg chg)) . -54) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) 55) nil (25558 22994 551282 973000) 0 nil])
([nil nil ((#("//Todo : Finish All Tests 
" 0 1 (c-in-sws t fontified t c-is-sws t ws-butler-chg delete face font-lock-comment-delimiter-face) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 20 (fontified t c-in-sws t face font-lock-comment-face) 20 21 (fontified t c-in-sws t face font-lock-comment-face) 21 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face) 26 27 (rear-nonsticky t fontified t c-in-sws t face font-lock-comment-face)) . 54) (undo-tree-id2616 . -27)) nil (25558 22994 551280 755000) 0 nil])
([nil nil ((nil fontified nil 80 . 81) (nil fontified nil 79 . 80) (nil fontified nil 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil fontified nil 75 . 76) (nil fontified nil 74 . 75) (nil fontified nil 73 . 74) (nil fontified nil 72 . 73) (nil fontified nil 71 . 72) (nil fontified nil 70 . 71) (nil fontified nil 69 . 70) (nil fontified nil 68 . 69) (nil fontified nil 67 . 68) (nil fontified nil 66 . 67) (nil fontified nil 65 . 66) (nil fontified nil 64 . 65) (nil fontified nil 63 . 64) (nil fontified nil 56 . 63) (nil fontified nil 55 . 56) (nil fontified nil 54 . 55) (54 . 81)) nil (25558 22994 551278 736000) 0 nil])
([nil nil ((81 . 82)) nil (25558 22994 551274 920000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -79) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (#("
" 0 1 (rear-nonsticky t ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -80) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (#("
" 0 1 (c-is-sws t fontified t ws-butler-chg chg)) . -81) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) 82) nil (25558 22994 551273 252000) 0 nil])
([nil nil ((79 . 81)) nil (25558 22994 551257 341000) 0 nil])
([nil nil ((nil fontified nil 107 . 108) (nil fontified nil 106 . 107) (nil fontified nil 105 . 106) (nil fontified nil 104 . 105) (nil fontified nil 103 . 104) (nil fontified nil 102 . 103) (nil fontified nil 101 . 102) (nil fontified nil 100 . 101) (nil fontified nil 99 . 100) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 93 . 94) (nil fontified nil 92 . 93) (nil fontified nil 91 . 92) (nil fontified nil 90 . 91) (nil fontified nil 83 . 90) (nil fontified nil 82 . 83) (nil fontified nil 81 . 82) (81 . 108)) nil (25558 22994 551255 188000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 106) 108) nil (25558 22994 551247 215000) 0 nil])
([nil nil ((#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -105) (undo-tree-id2630 . -1) (#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . -106) (undo-tree-id2631 . -1) 107 (t 25558 22994 642110 916000)) nil (25558 22998 677379 90000) 0 nil])
([nil nil ((105 . 106)) nil (25558 22998 677376 590000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -105) (undo-tree-id2629 . -1) 106) nil (25558 22998 677375 418000) 0 nil])
([nil nil ((105 . 107)) nil (25558 22998 677373 938000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -106) (undo-tree-id2628 . -1) 107) nil (25558 22998 677372 889000) 0 nil])
([nil nil ((106 . 108)) nil (25558 22998 677370 775000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -106) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg c-is-sws t)) . -107) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) 108) nil (25558 22998 677365 910000) 0 nil])
([nil nil ((#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -90) (undo-tree-id2639 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -91) (undo-tree-id2640 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -92) (undo-tree-id2641 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -93) (undo-tree-id2642 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -94) (undo-tree-id2643 . -1) (#("h" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -95) (undo-tree-id2644 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -96) (undo-tree-id2645 . -1) (#("A" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -97) (undo-tree-id2646 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -98) (undo-tree-id2647 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -99) (undo-tree-id2648 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -100) (undo-tree-id2649 . -1) (#("T" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -101) (undo-tree-id2650 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -102) (undo-tree-id2651 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -103) (undo-tree-id2652 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -104) (undo-tree-id2653 . -1) (#("s" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -105) (undo-tree-id2654 . -1) 106 (t 25558 22998 774093 54000)) nil (25558 23011 33957 365000) 0 nil])
([nil nil ((90 . 98)) nil (25558 23011 33942 412000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -96) (undo-tree-id2637 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -97) (undo-tree-id2638 . -1) 98) nil (25558 23011 33941 432000) 0 nil])
([nil nil ((96 . 102)) nil (25558 23011 33939 22000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -101) (undo-tree-id2636 . -1) 102) nil (25558 23011 33938 83000) 0 nil])
([nil nil ((101 . 104)) nil (25558 23011 33936 562000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -100) (undo-tree-id2632 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -101) (undo-tree-id2633 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -102) (undo-tree-id2634 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -103) (undo-tree-id2635 . -1) 104) nil (25558 23011 33934 556000) 0 nil])
([nil nil ((100 . 114)) nil (25558 23011 33922 789000) 0 nil])
([nil nil ((114 . 115)) nil (25558 23011 33918 236000) 0 nil])
([nil nil ((115 . 116) (t 25558 23011 134039 683000)) nil (25558 23011 760509 177000) 0 nil])
([nil nil ((nil fontified nil 142 . 143) (nil fontified nil 141 . 142) (nil fontified nil 140 . 141) (nil fontified nil 139 . 140) (nil fontified nil 138 . 139) (nil fontified nil 137 . 138) (nil fontified nil 136 . 137) (nil fontified nil 135 . 136) (nil fontified nil 134 . 135) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (nil fontified nil 131 . 132) (nil fontified nil 130 . 131) (nil fontified nil 129 . 130) (nil fontified nil 128 . 129) (nil fontified nil 127 . 128) (nil fontified nil 126 . 127) (nil fontified nil 125 . 126) (nil fontified nil 118 . 125) (nil fontified nil 117 . 118) (nil fontified nil 116 . 117) (116 . 143)) nil (25558 23011 760507 29000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 141) 143) nil (25558 23011 760499 37000) 0 nil])
([nil nil ((#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -125) (undo-tree-id2678 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -126) (undo-tree-id2679 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -127) (undo-tree-id2680 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -128) (undo-tree-id2681 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -129) (undo-tree-id2682 . -1) (#("h" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -130) (undo-tree-id2683 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -131) (undo-tree-id2684 . -1) (#("A" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -132) (undo-tree-id2685 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -133) (undo-tree-id2686 . -1) (#("l" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -134) (undo-tree-id2687 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -135) (undo-tree-id2688 . -1) (#("T" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -136) (undo-tree-id2689 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -137) (undo-tree-id2690 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -138) (undo-tree-id2691 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -139) (undo-tree-id2692 . -1) (#("s" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -140) (undo-tree-id2693 . -1) 141 (t 25558 23011 862036 542000)) nil (25558 23028 801502 475000) 0 nil])
([nil nil ((125 . 137)) nil (25558 23028 801472 883000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -135) (undo-tree-id2676 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -136) (undo-tree-id2677 . -1) 137) nil (25558 23028 801471 896000) 0 nil])
([nil nil ((135 . 139)) nil (25558 23028 801469 623000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -138) (undo-tree-id2675 . -1) 139) nil (25558 23028 801468 798000) 0 nil])
([nil nil ((138 . 151)) nil (25558 23028 801467 114000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -145) (undo-tree-id2669 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -146) (undo-tree-id2670 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -147) (undo-tree-id2671 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -148) (undo-tree-id2672 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -149) (undo-tree-id2673 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -150) (undo-tree-id2674 . -1) 151) nil (25558 23028 801465 602000) 0 nil])
([nil nil ((145 . 153)) nil (25558 23028 801460 492000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -149) (undo-tree-id2665 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -150) (undo-tree-id2666 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -151) (undo-tree-id2667 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -152) (undo-tree-id2668 . -1) 153) nil (25558 23028 801459 303000) 0 nil])
([nil nil ((149 . 154)) nil (25558 23028 801454 996000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -151) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -152) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -153) (undo-tree-id2664 . -1) 154) nil (25558 23028 801453 471000) 0 nil])
([nil nil ((151 . 155)) nil (25558 23028 801431 524000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 154) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) 155) nil (25558 23028 801427 547000) 0 nil])
([nil nil ((154 . 155) 155 (t 25558 23028 901963 103000)) nil (25558 23032 487184 952000) 0 nil])
([nil nil ((#("//Todo : More Dynamic Memory Alloation 
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 20 (fontified t c-in-sws t face font-lock-comment-face) 20 21 (fontified t c-in-sws t face font-lock-comment-face) 21 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t c-in-sws t face font-lock-comment-face) 26 27 (fontified t c-in-sws t face font-lock-comment-face) 27 28 (fontified t c-in-sws t face font-lock-comment-face) 28 29 (fontified t c-in-sws t face font-lock-comment-face) 29 30 (fontified t c-in-sws t face font-lock-comment-face) 30 31 (fontified t c-in-sws t face font-lock-comment-face) 31 32 (fontified t c-in-sws t face font-lock-comment-face) 32 33 (fontified t c-in-sws t face font-lock-comment-face) 33 34 (fontified t c-in-sws t face font-lock-comment-face) 34 35 (fontified t c-in-sws t face font-lock-comment-face) 35 36 (fontified t c-in-sws t face font-lock-comment-face) 36 37 (fontified t c-in-sws t face font-lock-comment-face) 37 38 (fontified t c-in-sws t face font-lock-comment-face) 38 39 (fontified t ws-butler-chg chg face font-lock-comment-face) 39 40 (rear-nonsticky t fontified t face font-lock-comment-face)) . 116) (undo-tree-id2707 . -38) (undo-tree-id2708 . -38) (undo-tree-id2709 . -39) (undo-tree-id2710 . -39) (undo-tree-id2711 . -39) (undo-tree-id2712 . -40) (t 25558 23028 901963 103000)) nil (25558 23032 487183 613000) 0 nil])
([nil nil ((nil fontified nil 155 . 156) (nil fontified nil 154 . 155) (nil fontified nil 153 . 154) (nil fontified nil 152 . 153) (nil fontified nil 151 . 152) (nil fontified nil 150 . 151) (nil fontified nil 149 . 150) (nil fontified nil 148 . 149) (nil fontified nil 147 . 148) (nil fontified nil 146 . 147) (nil fontified nil 145 . 146) (nil fontified nil 144 . 145) (nil fontified nil 143 . 144) (nil fontified nil 142 . 143) (nil fontified nil 141 . 142) (nil fontified nil 140 . 141) (nil fontified nil 139 . 140) (nil fontified nil 138 . 139) (nil fontified nil 137 . 138) (nil fontified nil 136 . 137) (nil fontified nil 135 . 136) (nil fontified nil 134 . 135) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (nil fontified nil 131 . 132) (nil fontified nil 130 . 131) (nil fontified nil 129 . 130) (nil fontified nil 128 . 129) (nil fontified nil 127 . 128) (nil fontified nil 126 . 127) (nil fontified nil 125 . 126) (nil fontified nil 118 . 125) (nil fontified nil 117 . 118) (nil fontified nil 116 . 117) (116 . 156)) nil (25558 23032 487177 261000) 0 nil])
([nil nil ((156 . 157)) nil (25558 23032 487170 733000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . -154) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (#("
" 0 1 (rear-nonsticky t ws-butler-chg chg fontified t face font-lock-comment-face c-in-sws t)) . -155) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (#("
" 0 1 (c-is-sws t fontified t ws-butler-chg chg)) . -156) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) 157) nil (25558 23032 487168 972000) 0 nil])
([nil nil ((154 . 155)) nil (25558 23032 487151 647000) 0 nil])
([nil nil ((155 . 156)) nil (25558 23032 487150 850000) 0 nil])
([nil nil ((nil fontified nil 195 . 196) (nil fontified nil 194 . 195) (nil fontified nil 193 . 194) (nil fontified nil 192 . 193) (nil fontified nil 191 . 192) (nil fontified nil 190 . 191) (nil fontified nil 189 . 190) (nil fontified nil 188 . 189) (nil fontified nil 187 . 188) (nil fontified nil 186 . 187) (nil fontified nil 185 . 186) (nil fontified nil 184 . 185) (nil fontified nil 183 . 184) (nil fontified nil 182 . 183) (nil fontified nil 181 . 182) (nil fontified nil 180 . 181) (nil fontified nil 179 . 180) (nil fontified nil 178 . 179) (nil fontified nil 177 . 178) (nil fontified nil 176 . 177) (nil fontified nil 175 . 176) (nil fontified nil 174 . 175) (nil fontified nil 173 . 174) (nil fontified nil 172 . 173) (nil fontified nil 171 . 172) (nil fontified nil 170 . 171) (nil fontified nil 169 . 170) (nil fontified nil 168 . 169) (nil fontified nil 167 . 168) (nil fontified nil 166 . 167) (nil fontified nil 165 . 166) (nil fontified nil 158 . 165) (nil fontified nil 157 . 158) (nil fontified nil 156 . 157) (156 . 196)) nil (25558 23032 487148 153000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg c-in-sws t fontified t face font-lock-comment-face)) . 194) 196) nil (25558 23032 487137 695000) 0 nil])
([nil nil ((#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -193) (undo-tree-id2722 . -1) 194 (t 25558 23032 589947 233000)) nil (25558 23053 441356 731000) 0 nil])
([nil nil ((153 . 154)) nil (25558 23053 441355 56000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -153) (undo-tree-id2721 . -1) 154) nil (25558 23053 441354 267000) 0 nil])
([nil nil ((154 . 160)) nil (25558 23053 441352 525000) 0 nil])
([nil nil ((160 . 164)) nil (25558 23053 441351 530000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -160) (undo-tree-id2717 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -161) (undo-tree-id2718 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . -162) (undo-tree-id2719 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -163) (undo-tree-id2720 . -1) 164) nil (25558 23053 441350 76000) 0 nil])
([nil nil ((160 . 173)) nil (25558 23053 441331 498000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -171) (undo-tree-id2715 . -1) (#("S" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -172) (undo-tree-id2716 . -1) 173) nil (25558 23053 441329 891000) 0 nil])
([nil nil ((171 . 188)) nil (25558 23053 441326 227000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 187) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) 188) nil (25558 23053 441321 816000) 0 nil])
([nil nil ((187 . 188) 188 (t 25558 23053 545857 158000)) nil (25558 23056 185044 432000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -188) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) 189 (t 25558 23053 545857 158000)) nil (25558 23056 185042 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg c-in-sws t face font-lock-comment-face)) . 187) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) 188) nil (25558 23056 185036 785000) 0 nil])
([nil nil ((187 . 188) 188 (t 25558 23056 285845 395000)) nil (25558 23060 790320 665000) 0 nil])
([nil nil ((187 . 189) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 187) (undo-tree-id2732 . -1) 188 (t 25558 23056 285845 395000)) nil (25558 23060 790319 226000) 0 nil])
([nil nil ((124 . 128)) nil (25558 23060 790316 982000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -127) (undo-tree-id2731 . -1) 128) nil (25558 23060 790315 63000) 0 nil])
([nil nil ((127 . 128)) nil (25558 23060 790303 889000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . -193) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) 194 (t 25558 23060 889825 643000)) nil (25558 23063 305086 741000) 0 nil])
([nil nil ((202 . 204) (t 25558 23063 405814 854000)) nil (25558 23099 586874 50000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -202) (undo-tree-id2756 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -203) (undo-tree-id2757 . -1) 204) nil (25558 23099 586872 847000) 0 nil])
([nil nil ((202 . 205)) nil (25558 23099 586870 679000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -202) (undo-tree-id2753 . -1) (#("G" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -203) (undo-tree-id2754 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -204) (undo-tree-id2755 . -1) 205) nil (25558 23099 586869 692000) 0 nil])
([nil nil ((202 . 211)) nil (25558 23099 586866 722000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -207) (undo-tree-id2749 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -208) (undo-tree-id2750 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -209) (undo-tree-id2751 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -210) (undo-tree-id2752 . -1) 211) nil (25558 23099 586865 580000) 0 nil])
([nil nil ((207 . 211)) nil (25558 23099 586861 269000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -209) (undo-tree-id2747 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -210) (undo-tree-id2748 . -1) 211) nil (25558 23099 586860 323000) 0 nil])
([nil nil ((209 . 223)) nil (25558 23099 586858 167000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -220) (undo-tree-id2744 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -221) (undo-tree-id2745 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -222) (undo-tree-id2746 . -1) 223) nil (25558 23099 586857 126000) 0 nil])
([nil nil ((220 . 235)) nil (25558 23099 586852 294000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -234) (undo-tree-id2743 . -1) 235) nil (25558 23099 586851 485000) 0 nil])
([nil nil ((234 . 244)) nil (25558 23099 586850 54000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -241) (undo-tree-id2740 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -242) (undo-tree-id2741 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -243) (undo-tree-id2742 . -1) 244) nil (25558 23099 586848 843000) 0 nil])
([nil nil ((241 . 245)) nil (25558 23099 586845 876000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -244) (undo-tree-id2739 . -1) 245) nil (25558 23099 586844 944000) 0 nil])
([nil nil ((244 . 252)) nil (25558 23099 586843 32000) 0 nil])
([nil nil ((252 . 258)) nil (25558 23099 586842 383000) 0 nil])
([nil nil ((#("More Dynamic Memory Alloatio" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-face c-in-sws t) 1 2 (fontified t face font-lock-comment-face c-in-sws t) 2 3 (fontified t face font-lock-comment-face c-in-sws t) 3 4 (fontified t face font-lock-comment-face c-in-sws t) 4 5 (fontified t face font-lock-comment-face c-in-sws t) 5 6 (fontified t face font-lock-comment-face c-in-sws t) 6 7 (fontified t face font-lock-comment-face c-in-sws t) 7 8 (fontified t face font-lock-comment-face c-in-sws t) 8 9 (fontified t face font-lock-comment-face c-in-sws t) 9 10 (fontified t face font-lock-comment-face c-in-sws t) 10 11 (fontified t face font-lock-comment-face c-in-sws t) 11 12 (fontified t face font-lock-comment-face c-in-sws t) 12 13 (fontified t face font-lock-comment-face c-in-sws t) 13 14 (fontified t face font-lock-comment-face c-in-sws t) 14 15 (fontified t face font-lock-comment-face c-in-sws t) 15 16 (fontified t face font-lock-comment-face c-in-sws t) 16 17 (fontified t face font-lock-comment-face c-in-sws t) 17 18 (fontified t face font-lock-comment-face c-in-sws t) 18 19 (fontified t face font-lock-comment-face c-in-sws t) 19 20 (fontified t face font-lock-comment-face c-in-sws t) 20 21 (fontified t face font-lock-comment-face c-in-sws t) 21 22 (fontified t face font-lock-comment-face c-in-sws t) 22 23 (fontified t face font-lock-comment-face c-in-sws t) 23 24 (fontified t face font-lock-comment-face c-in-sws t) 24 25 (fontified t face font-lock-comment-face c-in-sws t) 25 26 (fontified t face font-lock-comment-face c-in-sws t) 26 27 (fontified t face font-lock-comment-face c-in-sws t) 27 28 (fontified t face font-lock-comment-face c-in-sws t)) . 258)) nil (25558 23099 586841 464000) 0 nil])
([nil nil ((258 . 259)) nil (25558 23099 586840 305000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 258) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) 259) nil (25558 23099 586836 136000) 0 nil])
([nil nil ((258 . 259) 259 (t 25558 23099 677659 625000)) nil (25558 23109 6652 661000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -251) (undo-tree-id2758 . -1) (#("r" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -252) (undo-tree-id2759 . -1) (#("i" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -253) (undo-tree-id2760 . -1) (#("g" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -254) (undo-tree-id2761 . -1) (#("g" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -255) (undo-tree-id2762 . -1) (#("e" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -256) (undo-tree-id2763 . -1) (#("r" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -257) (undo-tree-id2764 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . -258) (undo-tree-id2765 . -1) 259 (t 25558 23099 677659 625000)) nil (25558 23109 6649 137000) 0 nil])
([nil nil ((251 . 256)) nil (25558 23109 6631 123000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1654) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (#(" " 0 1 (fontified t)) . -1655) 1653 (t 25558 23109 97619 405000)) nil (25558 24673 798005 390000) 0 nil])
([nil nil ((1654 . 1656)) nil (25558 24673 797991 423000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -2031) (undo-tree-id2768 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -2032) (undo-tree-id2769 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -2033) (undo-tree-id2770 . -1) (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -2034) (undo-tree-id2771 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -2035) (undo-tree-id2772 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -2036) (undo-tree-id2773 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -2037) (undo-tree-id2774 . -1) 2038 (t 25558 24673 898127 777000)) nil (25558 24756 505961 918000) 0 nil])
([nil nil ((2031 . 2042)) nil (25558 24756 505944 762000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2206) (undo-tree-id2779 . -1) (#("s" 0 1 (fontified t)) . -2207) (undo-tree-id2780 . -1) (#("_" 0 1 (fontified t)) . -2208) (undo-tree-id2781 . -1) 2209 (t 25558 24756 593748 163000)) nil (25558 24767 151417 65000) 0 nil])
([nil nil ((2210 . 2213)) nil (25558 24767 151398 917000) 0 nil])
([nil nil ((2213 . 2215)) nil (25558 24767 151398 187000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -2214) (undo-tree-id2778 . -1) 2215) nil (25558 24767 151397 222000) 0 nil])
([nil nil ((2214 . 2215)) nil (25558 24767 151395 646000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -2214) (undo-tree-id2777 . -1) 2215) nil (25558 24767 151394 623000) 0 nil])
([nil nil ((2214 . 2215)) nil (25558 24767 151392 470000) 0 nil])
([nil nil ((2206 . 2217) (#("word_leng" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg) 7 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg)) . -2206) (undo-tree-id2775 . -9) (undo-tree-id2776 . -9) 2215) nil (25558 24767 151388 429000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2279) (undo-tree-id2805 . -1) (#("s" 0 1 (fontified t)) . -2280) (undo-tree-id2806 . -1) (#("_" 0 1 (fontified t)) . -2281) (undo-tree-id2807 . -1) (#("w" 0 1 (fontified t)) . -2282) (undo-tree-id2808 . -1) (#("o" 0 1 (fontified t)) . -2283) (undo-tree-id2809 . -1) (#("r" 0 1 (fontified t)) . -2284) (undo-tree-id2810 . -1) (#("d" 0 1 (fontified t)) . -2285) (undo-tree-id2811 . -1) 2286 (t 25558 24767 245699 545000)) nil (25558 24781 523464 29000) 0 nil])
([nil nil ((2279 . 2285)) nil (25558 24781 523455 965000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2283) (undo-tree-id2803 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -2284) (undo-tree-id2804 . -1) 2285) nil (25558 24781 523454 852000) 0 nil])
([nil nil ((2283 . 2286)) nil (25558 24781 523452 400000) 0 nil])
([nil nil ((2279 . 2290) (#("word_le" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -2279) (undo-tree-id2802 . -7) 2286) nil (25558 24781 523451 458000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2301) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (#("s" 0 1 (fontified t)) . -2302) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (#("_" 0 1 (fontified t)) . -2303) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (#("w" 0 1 (fontified t)) . -2304) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (#("o" 0 1 (fontified t)) . -2305) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (#("r" 0 1 (fontified t)) . -2306) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (#("d" 0 1 (fontified t)) . -2307) (undo-tree-id2801 . -1) 2308) nil (25558 24781 523448 34000) 0 nil])
([nil nil ((2301 . 2305)) nil (25558 24781 523403 271000) 0 nil])
([nil nil ((2301 . 2312) (#("word" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2301) (undo-tree-id2782 . -4) 2305) nil (25558 24781 523399 150000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2328) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (#("s" 0 1 (fontified t)) . -2329) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (#("_" 0 1 (fontified t)) . -2330) (undo-tree-id2895 . -1) 2331 (t 25558 24781 621634 31000)) nil (25558 24790 806700 694000) 0 nil])
([nil nil ((2332 . 2333)) nil (25558 24790 806694 195000) 0 nil])
([nil nil ((2328 . 2339) (#("word_" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t ws-butler-chg chg)) . -2328) (undo-tree-id2888 . -5) 2333) nil (25558 24790 806693 188000) 0 nil])
([nil nil ((2339 . 2349)) nil (25558 24790 806678 91000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2339) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2340) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2341) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2342) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2343) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2344) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2345) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2346) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2347) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2348) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) 2349) nil (25558 24790 806656 275000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2432) (undo-tree-id2901 . -1) (#("s" 0 1 (fontified t)) . -2433) (undo-tree-id2902 . -1) (#("_" 0 1 (fontified t)) . -2434) (undo-tree-id2903 . -1) 2435 (t 25558 24790 905591 777000)) nil (25558 24800 298633 779000) 0 nil])
([nil nil ((2436 . 2437)) nil (25558 24800 298629 614000) 0 nil])
([nil nil ((2437 . 2438)) nil (25558 24800 298628 838000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -2437) (undo-tree-id2900 . -1) 2438) nil (25558 24800 298627 966000) 0 nil])
([nil nil ((2437 . 2439)) nil (25558 24800 298609 924000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -2438) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) 2439) nil (25558 24800 298608 478000) 0 nil])
([nil nil ((2432 . 2443) (#("word_l" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg)) . -2432) (undo-tree-id2896 . -6) (undo-tree-id2897 . -6) 2438) nil (25558 24800 298603 4000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2475) (undo-tree-id2906 . -1) (#("s" 0 1 (fontified t)) . -2476) (undo-tree-id2907 . -1) (#("_" 0 1 (fontified t)) . -2477) (undo-tree-id2908 . -1) 2478 (t 25558 24800 397548 617000)) nil (25558 24808 602159 11000) 0 nil])
([nil nil ((2479 . 2482)) nil (25558 24808 602154 962000) 0 nil])
([nil nil ((2475 . 2486) (#("word_le" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg) 6 7 (fontified t ws-butler-chg chg)) . -2475) (undo-tree-id2904 . -7) (undo-tree-id2905 . -7) 2482) nil (25558 24808 602151 91000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2500) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (#("s" 0 1 (fontified t)) . -2501) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (#("_" 0 1 (fontified t)) . -2502) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (#("w" 0 1 (fontified t)) . -2503) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (#("o" 0 1 (fontified t)) . -2504) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (#("r" 0 1 (fontified t)) . -2505) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (#("d" 0 1 (fontified t)) . -2506) (undo-tree-id2928 . -1) 2507 (t 25558 24808 705510 883000)) nil (25558 24814 220927 186000) 0 nil])
([nil nil ((2500 . 2504)) nil (25558 24814 220895 655000) 0 nil])
([nil nil ((2500 . 2511) (#("word" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2500) (undo-tree-id2909 . -4) 2504) nil (25558 24814 220891 618000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2567) (undo-tree-id3012 . -1) (#("r" 0 1 (fontified t)) . -2568) (undo-tree-id3013 . -1) (#("e" 0 1 (fontified t)) . -2569) (undo-tree-id3014 . -1) (#("a" 0 1 (fontified t)) . -2570) (undo-tree-id3015 . -1) (#("k" 0 1 (fontified t face font-lock-keyword-face)) . -2571) (undo-tree-id3016 . -1) (#(";" 0 1 (fontified t)) . -2572) (undo-tree-id3017 . -1) 2573 (t 25558 24814 349485 266000)) nil (25558 24845 380880 728000) 0 nil])
([nil nil ((2567 . 2575)) nil (25558 24845 380875 663000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -2571) (undo-tree-id3008 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2572) (undo-tree-id3009 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -2573) (undo-tree-id3010 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2574) (undo-tree-id3011 . -1) 2575) nil (25558 24845 380874 504000) 0 nil])
([nil nil ((2571 . 2575)) nil (25558 24845 380870 905000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg)) . -2574) (undo-tree-id3007 . -1) 2575) nil (25558 24845 380870 132000) 0 nil])
([nil nil ((2574 . 2576)) nil (25558 24845 380868 769000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg)) . -2575) (undo-tree-id3006 . -1) 2576) nil (25558 24845 380867 688000) 0 nil])
([nil nil ((2575 . 2578)) nil (25558 24845 380866 242000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -2574) (undo-tree-id3002 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg)) . -2575) (undo-tree-id3003 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -2576) (undo-tree-id3004 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2577) (undo-tree-id3005 . -1) 2578) nil (25558 24845 380864 917000) 0 nil])
([nil nil ((2574 . 2575)) nil (25558 24845 380861 113000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg)) . -2574) (undo-tree-id3001 . -1) 2575) nil (25558 24845 380860 250000) 0 nil])
([nil nil ((2574 . 2579)) nil (25558 24845 380858 887000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -2578) (undo-tree-id3000 . -1) 2579) nil (25558 24845 380858 56000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -2576) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -2577) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) 2578) nil (25558 24845 380856 105000) 0 nil])
([nil nil ((2576 . 2578)) nil (25558 24845 380837 463000) 0 nil])
([nil nil ((2574 . 2585) (#("word" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg)) . -2574) (undo-tree-id2993 . -4) 2578) nil (25558 24845 380836 548000) 0 nil])
([nil nil ((2585 . 2594)) nil (25558 24845 380834 444000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -2585) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2586) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2587) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2588) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2589) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2590) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2591) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2592) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2593) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) 2594) nil (25558 24845 380815 195000) 0 nil])
([nil nil ((2585 . 2586)) nil (25558 24845 380684 163000) 0 nil])
([nil nil ((#("char* head=text;" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 16 (fontified t)) . 981) (undo-tree-id3026 . -16) (undo-tree-id3027 . -16) (undo-tree-id3028 . -16) (t 25558 24845 481344 236000)) nil (25558 24952 310838 423000) 0 nil])
([nil nil ((980 . 982) (#(" " 0 1 (fontified nil)) . 980) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (nil rear-nonsticky nil 996 . 997) (nil fontified nil 992 . 997) (nil fontified nil 991 . 992) (nil fontified nil 988 . 991) (nil fontified nil 987 . 988) (nil fontified nil 985 . 987) (nil fontified nil 984 . 985) (nil fontified nil 981 . 984) (981 . 997)) nil (25558 24952 310817 401000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -981) (undo-tree-id3029 . -1) 982 (t 25558 24952 408863 55000)) nil (25558 24954 26699 716000) 0 nil])
([nil nil ((997 . 999) (t 25558 24954 116855 407000)) nil (25558 24957 210692 590000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1014 . 1015) (nil fontified nil 1010 . 1015) (nil fontified nil 1009 . 1010) (nil fontified nil 1006 . 1009) (nil fontified nil 1005 . 1006) (nil fontified nil 1003 . 1005) (nil fontified nil 1002 . 1003) (nil fontified nil 999 . 1002) (999 . 1015)) nil (25558 24957 210687 257000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -1005) (undo-tree-id3041 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1006) (undo-tree-id3042 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -1007) (undo-tree-id3043 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -1008) (undo-tree-id3044 . -1) 1009 (t 25558 24957 300841 149000)) nil (25558 24965 243944 938000) 0 nil])
([nil nil ((1005 . 1012)) nil (25558 24965 243940 122000) 0 nil])
([nil nil ((1013 . 1014)) nil (25558 24965 243939 443000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t ws-butler-chg chg)) . -1013) (undo-tree-id3040 . -1) 1014) nil (25558 24965 243938 356000) 0 nil])
([nil nil ((1013 . 1014)) nil (25558 24965 243935 102000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg delete)) . -1012) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (#("K" 0 1 (fontified t ws-butler-chg chg)) . -1013) (undo-tree-id3039 . -1) 1014) nil (25558 24965 243933 735000) 0 nil])
([nil nil ((#("text;" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face) 1 4 (fontified t face font-lock-variable-name-face) 4 5 (rear-nonsticky t fontified t)) . 1012) (undo-tree-id3030 . -4) (undo-tree-id3031 . -5) (undo-tree-id3032 . -5) (undo-tree-id3033 . -5)) nil (25558 24965 243912 922000) 0 nil])
([nil nil ((1012 . 1013)) nil (25558 24965 243900 790000) 0 nil])
([nil nil ((1012 . 1013) (t 25558 24965 344805 144000)) nil (25558 24966 907125 88000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t ws-butler-chg chg)) . -1012) (undo-tree-id3045 . -1) 1013) nil (25558 24966 907121 97000) 0 nil])
([nil nil ((1727 . 1734) (t 25558 24967 12797 683000)) nil (25558 25007 395832 252000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -1727) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1728) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1729) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1730) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1731) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1732) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -1733) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) 1734) nil (25558 25007 395813 185000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1727) (undo-tree-id3121 . -1) 1728 (t 25558 25007 496616 860000)) nil (25558 25009 952869 301000) 0 nil])
([nil nil ((1238 . 1248) (t 25558 25010 44605 495000)) nil (25558 25029 55051 395000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1246) (undo-tree-id3122 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1247) (undo-tree-id3123 . -1) 1248) nil (25558 25029 55049 629000) 0 nil])
([nil nil ((1246 . 1250)) nil (25558 25029 55041 679000) 0 nil])
([nil nil ((1250 . 1251)) nil (25558 25029 55024 418000) 0 nil])
([nil nil ((1251 . 1252) (t 25558 25029 156520 336000)) nil (25558 25035 4367 175000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -1251) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) 1252) nil (25558 25035 4364 968000) 0 nil])
([nil nil ((1251 . 1252)) nil (25558 25035 4352 144000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1238) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (#("r" 0 1 (fontified t)) . -1239) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (#("i" 0 1 (fontified t)) . -1240) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (#("g" 0 1 (fontified t)) . -1241) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (#("g" 0 1 (fontified t)) . -1242) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (#("e" 0 1 (fontified t)) . -1243) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (#("r" 0 1 (fontified t)) . -1244) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (#("=" 0 1 (fontified t)) . -1245) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (#("h" 0 1 (fontified t)) . -1246) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (#("e" 0 1 (fontified t)) . -1247) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (#("a" 0 1 (fontified t)) . -1248) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (#("d" 0 1 (fontified t)) . -1249) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (#("-" 0 1 (fontified t)) . -1250) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (#("=" 0 1 (fontified t)) . -1251) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) 1252 (t 25558 25035 108493 835000)) nil (25558 25046 390923 721000) 0 nil])
([nil nil ((1281 . 1285) (t 25558 25046 492443 178000)) nil (25558 25061 293399 598000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -1281) (undo-tree-id3289 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1282) (undo-tree-id3290 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1283) (undo-tree-id3291 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1284) (undo-tree-id3292 . -1) 1285) nil (25558 25061 293385 425000) 0 nil])
([nil nil ((1281 . 1289)) nil (25558 25061 293379 670000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -1288) (undo-tree-id3288 . -1) 1289) nil (25558 25061 293378 720000) 0 nil])
([nil nil ((1288 . 1293)) nil (25558 25061 293362 765000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -1290) (undo-tree-id3285 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1291) (undo-tree-id3286 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -1292) (undo-tree-id3287 . -1) 1293) nil (25558 25061 293361 111000) 0 nil])
([nil nil ((1290 . 1297)) nil (25558 25061 293352 179000) 0 nil])
([nil nil ((1297 . 1298)) nil (25558 25061 293350 954000) 0 nil])
([nil nil ((1298 . 1299)) nil (25558 25061 293346 520000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1865) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (#("e" 0 1 (fontified t)) . -1866) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (#("a" 0 1 (fontified t)) . -1867) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (#("d" 0 1 (fontified t)) . -1868) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) 1869 (t 25558 25061 392376 944000)) nil (25558 25079 675250 520000) 0 nil])
([nil nil ((1865 . 1872)) nil (25558 25079 675232 915000) 0 nil])
([nil nil ((757 . 759) (t 25558 25079 772295 322000)) nil (25558 25106 140995 956000) 0 nil])
([nil nil ((758 . 760) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 758) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) 759) nil (25558 25106 140994 784000) 0 nil])
([nil nil ((759 . 761) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 759) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) 760) nil (25558 25106 140992 59000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -758) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -759) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -760) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) 761) nil (25558 25106 140974 378000) 0 nil])
([nil nil ((758 . 759)) nil (25558 25106 140967 303000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -757) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -758) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) 759) nil (25558 25106 140962 682000) 0 nil])
([nil nil ((757 . 759) (t 25558 25106 244177 931000)) nil (25558 25147 678731 621000) 0 nil])
([nil nil ((758 . 760) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 758) (undo-tree-id3472 . -1) 759) nil (25558 25147 678730 422000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-warning-face)) . -739) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (nil syntax-table nil 740 . 741) (nil syntax-table (1) 739 . 740) (#(" " 0 1 (fontified t face font-lock-string-face)) . -740) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (nil syntax-table nil 741 . 742) (nil syntax-table (1) 739 . 740) (#("T" 0 1 (fontified t face font-lock-string-face)) . -741) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (nil syntax-table nil 742 . 743) (nil syntax-table (1) 739 . 740) (#("r" 0 1 (fontified t face font-lock-string-face)) . -742) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (nil syntax-table nil 743 . 744) (nil syntax-table (1) 739 . 740) (#("i" 0 1 (fontified t face font-lock-string-face)) . -743) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (nil syntax-table nil 744 . 745) (nil syntax-table (1) 739 . 740) (#("g" 0 1 (fontified t face font-lock-string-face)) . -744) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (nil syntax-table nil 745 . 746) (nil syntax-table (1) 739 . 740) (#("g" 0 1 (fontified t face font-lock-string-face)) . -745) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (nil syntax-table nil 746 . 747) (nil syntax-table (1) 739 . 740) (#("e" 0 1 (fontified t face font-lock-string-face)) . -746) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (nil syntax-table nil 747 . 748) (nil syntax-table (1) 739 . 740) (#("r" 0 1 (fontified t face font-lock-string-face)) . -747) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (nil syntax-table nil 748 . 749) (nil syntax-table (1) 739 . 740) (#("d" 0 1 (fontified t face font-lock-string-face)) . -748) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (nil syntax-table nil 749 . 750) (nil syntax-table (1) 739 . 740) (#(" " 0 1 (fontified t face font-lock-string-face)) . -749) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (nil syntax-table nil 750 . 751) (nil syntax-table (1) 739 . 740) (#(" " 0 1 (fontified t face font-lock-string-face)) . -750) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (nil syntax-table nil 751 . 752) (nil syntax-table (1) 739 . 740) (#("\\" 0 1 (fontified t face font-lock-string-face)) . -751) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (nil syntax-table nil 763 . 764) (nil syntax-table (1) 739 . 740) (#("n" 0 1 (fontified t face font-lock-string-face)) . -752) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (nil syntax-table nil 753 . 754) (nil syntax-table (1) 739 . 740) (#(" " 0 1 (fontified t face font-lock-string-face)) . -753) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (nil syntax-table nil 754 . 755) (nil syntax-table (1) 739 . 740) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -754) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (#(")" 0 1 (fontified t)) . -755) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (#(";" 0 1 (fontified t)) . -756) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -757) (undo-tree-id3469 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -758) (undo-tree-id3470 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -759) (undo-tree-id3471 . -1) 760) nil (25558 25147 678720 906000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -732) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (#("r" 0 1 (fontified t)) . -733) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (#("i" 0 1 (fontified t)) . -734) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (#("n" 0 1 (fontified t)) . -735) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (#("t" 0 1 (fontified t)) . -736) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (#("f" 0 1 (fontified t)) . -737) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (#("(" 0 1 (fontified t)) . -738) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) 739) nil (25558 25147 677472 783000) 0 nil])
([nil nil ((732 . 736)) nil (25558 25147 677413 97000) 0 nil])
([nil nil ((736 . 737)) nil (25558 25147 677412 380000) 0 nil])
([nil nil ((737 . 740)) nil (25558 25147 677411 599000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -732) (undo-tree-id3324 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -733) (undo-tree-id3325 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -734) (undo-tree-id3326 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg c-type c-decl-id-start face font-lock-type-face)) . -735) (undo-tree-id3327 . -1) (#("*" 0 1 (fontified t ws-butler-chg chg)) . -736) (undo-tree-id3328 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -737) (undo-tree-id3329 . -1) (#("T" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -738) (undo-tree-id3330 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -739) (undo-tree-id3331 . -1) 740) nil (25558 25147 677409 554000) 0 nil])
([nil nil ((732 . 741)) nil (25558 25147 677402 289000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -739) (undo-tree-id3322 . -1) (#("]" 0 1 (fontified t ws-butler-chg chg)) . -740) (undo-tree-id3323 . -1) 741) nil (25558 25147 677400 652000) 0 nil])
([nil nil ((739 . 741)) nil (25558 25147 677379 836000) 0 nil])
([nil nil ((741 . 742)) nil (25558 25147 677375 413000) 0 nil])
([nil nil ((732 . 733) (t 25558 25147 783994 115000)) nil (25558 25150 353419 706000) 0 nil])
([nil nil ((741 . 742) (t 25558 25150 451982 322000)) nil (25558 25164 774123 459000) 0 nil])
([nil nil ((743 . 744)) nil (25558 25164 774122 585000) 0 nil])
([nil nil ((#("Ö" 0 1 (fontified t ws-butler-chg chg)) . -743) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) 744) nil (25558 25164 774121 446000) 0 nil])
([nil nil ((743 . 744)) nil (25558 25164 774118 794000) 0 nil])
([nil nil ((#("Ä" 0 1 (fontified t ws-butler-chg chg)) . -743) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) 744) nil (25558 25164 774104 346000) 0 nil])
([nil nil ((743 . 744)) nil (25558 25164 774080 694000) 0 nil])
([nil nil ((692 . 694) (t 25558 25164 875918 609000)) nil (25558 25197 767670 617000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -692) (undo-tree-id3490 . -1) (#("ü" 0 1 (fontified t ws-butler-chg chg)) . -693) (undo-tree-id3491 . -1) 694) nil (25558 25197 767669 446000) 0 nil])
([nil nil ((692 . 699)) nil (25558 25197 767667 274000) 0 nil])
([nil nil ((699 . 701)) nil (25558 25197 767666 613000) 0 nil])
([nil nil ((701 . 702) (nil syntax-table nil 702 . 703) (nil syntax-table (1) 700 . 701) (700 . 701)) nil (25558 25197 767665 800000) 0 nil])
([nil nil ((702 . 703)) nil (25558 25197 767664 719000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -702) (undo-tree-id3489 . -1) 703) nil (25558 25197 767663 879000) 0 nil])
([nil nil ((701 . 704)) nil (25558 25197 767662 405000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -703) (undo-tree-id3488 . -1) 704) nil (25558 25197 767661 567000) 0 nil])
([nil nil ((703 . 706)) nil (25558 25197 767660 213000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -701) (undo-tree-id3483 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -702) (undo-tree-id3484 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -703) (undo-tree-id3485 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -704) (undo-tree-id3486 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -705) (undo-tree-id3487 . -1) 706) nil (25558 25197 767658 754000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -700) (undo-tree-id3481 . -1) (nil syntax-table nil 702 . 703) (nil syntax-table (1) 700 . 701) (#("\"" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . -701) (undo-tree-id3482 . -1) 702) nil (25558 25197 767653 520000) 0 nil])
([nil nil ((700 . 706)) nil (25558 25197 767649 194000) 0 nil])
([nil nil ((706 . 707)) nil (25558 25197 767648 572000) 0 nil])
([nil nil ((707 . 708)) nil (25558 25197 767647 920000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -706) (undo-tree-id3479 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -707) (undo-tree-id3480 . -1) 708) nil (25558 25197 767646 813000) 0 nil])
([nil nil ((701 . 702)) nil (25558 25197 767644 357000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-warning-face)) . -701) (undo-tree-id3478 . -1) (nil syntax-table nil 708 . 709) (nil syntax-table (1) 701 . 702)) nil (25558 25197 767643 250000) 0 nil])
([nil nil ((701 . 702) (nil syntax-table nil 708 . 709) (nil syntax-table (1) 700 . 701) (700 . 701)) nil (25558 25197 767641 145000) 0 nil])
([nil nil ((702 . 703)) nil (25558 25197 767640 19000) 0 nil])
([nil nil ((705 . 707) (nil syntax-table nil 714 . 715) (nil syntax-table (1) 700 . 701) (701 . 705)) nil (25558 25197 767639 72000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -714) (undo-tree-id3477 . -1) 715) nil (25558 25197 767636 367000) 0 nil])
([nil nil ((715 . 716)) nil (25558 25197 767624 798000) 0 nil])
([nil nil ((709 . 710) (t 25558 25197 875773 21000)) nil (25558 25205 264845 718000) 0 nil])
([nil nil ((#(" operation.logic=0;
 operation.object=STRICT_WORD;
 Regex_AddOpCode(&operation,EQUAL,\"ipawdadwdsum\");
" 0 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 51 (fontified t) 51 52 (fontified t) 52 85 (fontified t) 85 86 (fontified t face font-lock-string-face) 86 87 (fontified t face font-lock-string-face) 87 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 96 (fontified t face font-lock-string-face) 96 97 (fontified t face font-lock-string-face) 97 98 (fontified t face font-lock-string-face) 98 99 (fontified t face font-lock-string-face) 99 100 (fontified t) 100 101 (rear-nonsticky t fontified t) 101 102 (rear-nonsticky t fontified t)) . 534) (undo-tree-id3492 . -102) (undo-tree-id3493 . -87) (undo-tree-id3494 . -19) (undo-tree-id3495 . -50) (undo-tree-id3496 . -102) (undo-tree-id3497 . -102) (undo-tree-id3498 . -102) (undo-tree-id3499 . -102) (undo-tree-id3500 . -102) (undo-tree-id3501 . -102) (undo-tree-id3502 . -102) (undo-tree-id3503 . -102) (undo-tree-id3504 . -102) (undo-tree-id3505 . -102) 533 (t 25558 25205 363740 21000)) nil (25558 25217 319503 685000) 0 nil])
([nil nil ((331 . 333) (t 25558 25217 423686 880000)) nil (25558 33308 514574 857000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -332) (undo-tree-id3519 . -1) 333) nil (25558 33308 514573 808000) 0 nil])
([nil nil ((332 . 337)) nil (25558 33308 514572 383000) 0 nil])
([nil nil ((#("7" 0 1 (fontified t ws-butler-chg chg)) . -336) (undo-tree-id3518 . -1) 337) nil (25558 33308 514571 434000) 0 nil])
([nil nil ((336 . 337)) nil (25558 33308 514569 163000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -332) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -333) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -334) (undo-tree-id3515 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -335) (undo-tree-id3516 . -1) (#("8" 0 1 (fontified t ws-butler-chg chg)) . -336) (undo-tree-id3517 . -1) 337) nil (25558 33308 514564 417000) 0 nil])
([nil nil ((#("Regex_AddOpCode(&operation,EQUAL,\"Lorem\");" 0 33 (fontified t) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 491) (undo-tree-id3520 . -40) (undo-tree-id3521 . -40) (undo-tree-id3522 . -40) (undo-tree-id3523 . -40) (undo-tree-id3524 . -40) (undo-tree-id3525 . -40) (undo-tree-id3526 . -42) (t 25558 33308 614383 664000)) nil (25558 33314 265821 118000) 0 nil])
([nil nil ((nil fontified nil 532 . 533) (nil fontified nil 531 . 532) (nil fontified nil 530 . 531) (nil fontified nil 529 . 530) (nil fontified nil 528 . 529) (nil fontified nil 527 . 528) (nil fontified nil 526 . 527) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 491 . 524) (491 . 533)) nil (25558 33314 265806 918000) 0 nil])
([nil nil ((533 . 535)) nil (25558 33314 265804 55000) 0 nil])
([nil nil ((nil fontified nil 576 . 577) (nil fontified nil 575 . 576) (nil fontified nil 574 . 575) (nil fontified nil 573 . 574) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 535 . 568) (535 . 577)) nil (25558 33314 265799 55000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face font-lock-string-face)) . -569) (undo-tree-id3528 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -570) (undo-tree-id3529 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -571) (undo-tree-id3530 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -572) (undo-tree-id3531 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -573) (undo-tree-id3532 . -1) 574 (t 25558 33314 378359 974000)) nil (25558 33325 637326 112000) 0 nil])
([nil nil ((569 . 570)) nil (25558 33325 637320 901000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -569) (undo-tree-id3527 . -1) 570) nil (25558 33325 637320 24000) 0 nil])
([nil nil ((569 . 574)) nil (25558 33325 637311 975000) 0 nil])
([nil nil ((#("Regex_AddOpCode(&operation,EQUAL,\"ipsum\");" 0 33 (fontified t) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t ws-butler-chg chg face font-lock-string-face) 35 36 (fontified t ws-butler-chg chg face font-lock-string-face) 36 37 (fontified t ws-butler-chg chg face font-lock-string-face) 37 38 (fontified t ws-butler-chg chg face font-lock-string-face) 38 39 (fontified t ws-butler-chg chg face font-lock-string-face) 39 40 (fontified t ws-butler-chg delete face font-lock-string-face) 40 41 (fontified t) 41 42 (rear-nonsticky t fontified t)) . 535)) nil (25558 33325 637310 821000) 0 nil])
([nil nil ((nil fontified nil 576 . 577) (nil fontified nil 575 . 576) (nil fontified nil 574 . 575) (nil fontified nil 573 . 574) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 535 . 568) (535 . 577)) nil (25558 33325 637309 666000) 0 nil])
([nil nil ((578 . 579)) nil (25558 33325 637306 918000) 0 nil])
([nil nil ((nil fontified nil 620 . 621) (nil fontified nil 619 . 620) (nil fontified nil 618 . 619) (nil fontified nil 617 . 618) (nil fontified nil 616 . 617) (nil fontified nil 615 . 616) (nil fontified nil 614 . 615) (nil fontified nil 613 . 614) (nil fontified nil 612 . 613) (nil fontified nil 579 . 612) (579 . 621)) nil (25558 33325 637301 643000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -613) (undo-tree-id3534 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -614) (undo-tree-id3535 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -615) (undo-tree-id3536 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -616) (undo-tree-id3537 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -617) (undo-tree-id3538 . -1) 618 (t 25558 33325 730313 317000)) nil (25558 33329 978429 460000) 0 nil])
([nil nil ((613 . 617)) nil (25558 33329 978424 219000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -616) (undo-tree-id3533 . -1) 617) nil (25558 33329 978422 438000) 0 nil])
([nil nil ((616 . 618)) nil (25558 33329 978409 804000) 0 nil])
([nil nil ((331 . 332) (t 25558 33330 74295 465000)) nil (25558 33393 291284 823000) 0 nil])
([nil nil ((332 . 333)) nil (25558 33393 291284 3000) 0 nil])
([nil nil ((333 . 334)) nil (25558 33393 291283 303000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -332) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (#("," 0 1 (fontified t ws-butler-chg chg)) . -333) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) 334) nil (25558 33393 291282 48000) 0 nil])
([nil nil ((#("//Todo : Find a way to Put Trigger At Start Not at end of Match
" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 2 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 20 (fontified t c-in-sws t face font-lock-comment-face) 20 21 (fontified t c-in-sws t face font-lock-comment-face) 21 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t c-in-sws t face font-lock-comment-face) 26 27 (fontified t c-in-sws t face font-lock-comment-face) 27 28 (fontified t c-in-sws t face font-lock-comment-face) 28 29 (fontified t c-in-sws t face font-lock-comment-face) 29 30 (fontified t c-in-sws t face font-lock-comment-face) 30 31 (fontified t c-in-sws t face font-lock-comment-face) 31 32 (fontified t c-in-sws t face font-lock-comment-face) 32 33 (fontified t c-in-sws t face font-lock-comment-face) 33 34 (fontified t c-in-sws t face font-lock-comment-face) 34 35 (fontified t c-in-sws t face font-lock-comment-face) 35 36 (fontified t c-in-sws t face font-lock-comment-face) 36 37 (fontified t c-in-sws t face font-lock-comment-face) 37 38 (fontified t c-in-sws t face font-lock-comment-face) 38 39 (fontified t c-in-sws t face font-lock-comment-face) 39 40 (fontified t c-in-sws t face font-lock-comment-face) 40 41 (fontified t c-in-sws t face font-lock-comment-face) 41 42 (fontified t c-in-sws t face font-lock-comment-face) 42 43 (fontified t c-in-sws t face font-lock-comment-face) 43 44 (fontified t c-in-sws t face font-lock-comment-face) 44 45 (fontified t c-in-sws t face font-lock-comment-face) 45 46 (fontified t c-in-sws t face font-lock-comment-face) 46 47 (fontified t c-in-sws t face font-lock-comment-face) 47 48 (fontified t c-in-sws t face font-lock-comment-face) 48 49 (fontified t c-in-sws t face font-lock-comment-face) 49 50 (fontified t c-in-sws t face font-lock-comment-face) 50 51 (fontified t c-in-sws t face font-lock-comment-face) 51 52 (fontified t c-in-sws t face font-lock-comment-face) 52 53 (fontified t c-in-sws t face font-lock-comment-face) 53 54 (fontified t c-in-sws t face font-lock-comment-face) 54 55 (fontified t c-in-sws t face font-lock-comment-face) 55 56 (fontified t c-in-sws t face font-lock-comment-face) 56 57 (fontified t c-in-sws t face font-lock-comment-face) 57 58 (fontified t c-in-sws t face font-lock-comment-face) 58 59 (fontified t face font-lock-comment-face c-in-sws t) 59 60 (fontified t face font-lock-comment-face c-in-sws t) 60 61 (fontified t face font-lock-comment-face c-in-sws t) 61 62 (fontified t face font-lock-comment-face c-in-sws t) 62 63 (fontified t face font-lock-comment-face c-in-sws t) 63 64 (rear-nonsticky t fontified t face font-lock-comment-face c-in-sws t)) . 193) (undo-tree-id3539 . -64)) nil (25558 33393 291276 917000) 0 nil])
([nil nil ((nil fontified nil 256 . 257) (nil fontified nil 255 . 256) (nil fontified nil 254 . 255) (nil fontified nil 253 . 254) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 250 . 251) (nil fontified nil 249 . 250) (nil fontified nil 248 . 249) (nil fontified nil 247 . 248) (nil fontified nil 246 . 247) (nil fontified nil 245 . 246) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 242 . 243) (nil fontified nil 241 . 242) (nil fontified nil 240 . 241) (nil fontified nil 239 . 240) (nil fontified nil 238 . 239) (nil fontified nil 237 . 238) (nil fontified nil 236 . 237) (nil fontified nil 235 . 236) (nil fontified nil 234 . 235) (nil fontified nil 233 . 234) (nil fontified nil 232 . 233) (nil fontified nil 231 . 232) (nil fontified nil 230 . 231) (nil fontified nil 229 . 230) (nil fontified nil 228 . 229) (nil fontified nil 227 . 228) (nil fontified nil 226 . 227) (nil fontified nil 225 . 226) (nil fontified nil 224 . 225) (nil fontified nil 223 . 224) (nil fontified nil 222 . 223) (nil fontified nil 221 . 222) (nil fontified nil 220 . 221) (nil fontified nil 219 . 220) (nil fontified nil 218 . 219) (nil fontified nil 217 . 218) (nil fontified nil 216 . 217) (nil fontified nil 215 . 216) (nil fontified nil 214 . 215) (nil fontified nil 213 . 214) (nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 210 . 211) (nil fontified nil 209 . 210) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (nil fontified nil 206 . 207) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 203 . 204) (nil fontified nil 202 . 203) (nil fontified nil 195 . 202) (nil fontified nil 194 . 195) (nil fontified nil 193 . 194) (193 . 257)) nil (25558 33393 291266 475000) 0 nil])
([nil nil ((257 . 258)) nil (25558 33393 291257 250000) 0 nil])
([nil nil ((nil fontified nil 321 . 322) (nil fontified nil 320 . 321) (nil fontified nil 319 . 320) (nil fontified nil 318 . 319) (nil fontified nil 317 . 318) (nil fontified nil 316 . 317) (nil fontified nil 315 . 316) (nil fontified nil 314 . 315) (nil fontified nil 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 286 . 287) (nil fontified nil 285 . 286) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 282 . 283) (nil fontified nil 281 . 282) (nil fontified nil 280 . 281) (nil fontified nil 279 . 280) (nil fontified nil 278 . 279) (nil fontified nil 277 . 278) (nil fontified nil 276 . 277) (nil fontified nil 275 . 276) (nil fontified nil 274 . 275) (nil fontified nil 273 . 274) (nil fontified nil 272 . 273) (nil fontified nil 271 . 272) (nil fontified nil 270 . 271) (nil fontified nil 269 . 270) (nil fontified nil 268 . 269) (nil fontified nil 267 . 268) (nil fontified nil 260 . 267) (nil fontified nil 259 . 260) (nil fontified nil 258 . 259) (258 . 322)) nil (25558 33393 291250 612000) 0 nil])
([nil nil ((#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -300) (undo-tree-id3585 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -301) (undo-tree-id3586 . -1) (#("N" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -302) (undo-tree-id3587 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -303) (undo-tree-id3588 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -304) (undo-tree-id3589 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -305) (undo-tree-id3590 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -306) (undo-tree-id3591 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -307) (undo-tree-id3592 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -308) (undo-tree-id3593 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -309) (undo-tree-id3594 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -310) (undo-tree-id3595 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -311) (undo-tree-id3596 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -312) (undo-tree-id3597 . -1) (#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -313) (undo-tree-id3598 . -1) (#("f" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -314) (undo-tree-id3599 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -315) (undo-tree-id3600 . -1) (#("M" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -316) (undo-tree-id3601 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -317) (undo-tree-id3602 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -318) (undo-tree-id3603 . -1) (#("c" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -319) (undo-tree-id3604 . -1) (#("h" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -320) (undo-tree-id3605 . -1) 321 (t 25558 33393 406035 243000)) nil (25558 33405 481721 265000) 0 nil])
([nil nil ((#("o" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -279) (undo-tree-id3564 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -280) (undo-tree-id3565 . -1) (#("P" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -281) (undo-tree-id3566 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -282) (undo-tree-id3567 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -283) (undo-tree-id3568 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -284) (undo-tree-id3569 . -1) (#("T" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -285) (undo-tree-id3570 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -286) (undo-tree-id3571 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -287) (undo-tree-id3572 . -1) (#("g" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -288) (undo-tree-id3573 . -1) (#("g" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -289) (undo-tree-id3574 . -1) (#("e" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -290) (undo-tree-id3575 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -291) (undo-tree-id3576 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -292) (undo-tree-id3577 . -1) (#("A" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -293) (undo-tree-id3578 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -294) (undo-tree-id3579 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -295) (undo-tree-id3580 . -1) (#("S" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -296) (undo-tree-id3581 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -297) (undo-tree-id3582 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -298) (undo-tree-id3583 . -1) (#("r" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -299) (undo-tree-id3584 . -1) 300) nil (25558 33405 481694 502000) 0 nil])
([nil nil ((#("F" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -267) (undo-tree-id3552 . -1) (#("i" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -268) (undo-tree-id3553 . -1) (#("n" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -269) (undo-tree-id3554 . -1) (#("d" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -270) (undo-tree-id3555 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -271) (undo-tree-id3556 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -272) (undo-tree-id3557 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -273) (undo-tree-id3558 . -1) (#("w" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -274) (undo-tree-id3559 . -1) (#("a" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -275) (undo-tree-id3560 . -1) (#("y" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -276) (undo-tree-id3561 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -277) (undo-tree-id3562 . -1) (#("t" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -278) (undo-tree-id3563 . -1) 279) nil (25558 33405 481676 209000) 0 nil])
([nil nil ((267 . 268)) nil (25558 33405 481666 515000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -267) (undo-tree-id3551 . -1) 268) nil (25558 33405 481665 678000) 0 nil])
([nil nil ((267 . 268)) nil (25558 33405 481664 279000) 0 nil])
([nil nil ((268 . 274)) nil (25558 33405 481663 647000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -273) (undo-tree-id3550 . -1) 274) nil (25558 33405 481662 700000) 0 nil])
([nil nil ((273 . 274)) nil (25558 33405 481661 294000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -273) (undo-tree-id3549 . -1) 274) nil (25558 33405 481660 374000) 0 nil])
([nil nil ((273 . 281)) nil (25558 33405 481658 881000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -279) (undo-tree-id3547 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -280) (undo-tree-id3548 . -1) 281) nil (25558 33405 481657 889000) 0 nil])
([nil nil ((279 . 287)) nil (25558 33405 481655 93000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -286) (undo-tree-id3546 . -1) 287) nil (25558 33405 481653 852000) 0 nil])
([nil nil ((286 . 290)) nil (25558 33405 481651 657000) 0 nil])
([nil current ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face c-in-sws t)) . 289) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) 290) nil (25558 33405 481647 857000) 0 nil])
nil
